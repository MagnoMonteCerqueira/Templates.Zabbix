<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:55Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>90ac276995294a6aa88462c032d2ddaf</uuid><template>Systemd by Zabbix agent 2</template><name>Systemd by Zabbix agent 2</name><description>Get systemd units metrics from plugin for the zabbix-agent2.
  1. Setup and configure zabbix-agent2 compiled with the Systemd monitoring plugin.
  2. Set filters with macros if you want to override default filter parameters.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><discovery_rules><discovery_rule><uuid>0dfbc5994c1e44a6a1a2aa8ecc2f0347</uuid><name>Service units discovery</name><key>systemd.unit.discovery[service]</key><delay>30m</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#UNIT.ACTIVESTATE}</macro><value>{$SYSTEMD.ACTIVESTATE.SERVICE.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#UNIT.ACTIVESTATE}</macro><value>{$SYSTEMD.ACTIVESTATE.SERVICE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition><condition><macro>{#UNIT.UNITFILESTATE}</macro><value>{$SYSTEMD.UNITFILESTATE.SERVICE.MATCHES}</value><formulaid>E</formulaid></condition><condition><macro>{#UNIT.UNITFILESTATE}</macro><value>{$SYSTEMD.UNITFILESTATE.SERVICE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>F</formulaid></condition><condition><macro>{#UNIT.NAME}</macro><value>{$SYSTEMD.NAME.SERVICE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>C</formulaid></condition><condition><macro>{#UNIT.NAME}</macro><value>{$SYSTEMD.NAME.SERVICE.MATCHES}</value><formulaid>D</formulaid></condition></conditions></filter><description>Discover systemd service units and their details.</description><item_prototypes><item_prototype><uuid>78587e9b16b5431bbccd2855998171fa</uuid><name>{#UNIT.NAME}: Active state</name><type>DEPENDENT</type><key>systemd.service.active_state[&quot;{#UNIT.NAME}&quot;]</key><delay>0</delay><history>7d</history><description>State value that reflects whether the unit is currently active or not. The following states are currently defined: &quot;active&quot;, &quot;reloading&quot;, &quot;inactive&quot;, &quot;failed&quot;, &quot;activating&quot;, and &quot;deactivating&quot;.</description><valuemap><name>Unit Active State</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.ActiveState.state</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>systemd.unit.get[&quot;{#UNIT.NAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>service</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>5237bd423307449b8a58f692082d2a0a</uuid><expression>last(/Systemd by Zabbix agent 2/systemd.service.active_state[&quot;{#UNIT.NAME}&quot;])&lt;&gt;1</expression><name>{#UNIT.NAME}: Service is not running</name><priority>WARNING</priority><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>bed610e6ce33494b817eb787e34e18c2</uuid><name>{#UNIT.NAME}: Load state</name><type>DEPENDENT</type><key>systemd.service.load_state[&quot;{#UNIT.NAME}&quot;]</key><delay>0</delay><history>7d</history><description>State value that reflects whether the configuration file of this unit has been loaded. The following states are currently defined: &quot;loaded&quot;, &quot;error&quot;, and &quot;masked&quot;.</description><valuemap><name>Unit Load State</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.LoadState.state</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>systemd.unit.get[&quot;{#UNIT.NAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>service</value></tag></tags></item_prototype><item_prototype><uuid>f1174eb5abf74e028a75ab9bb8eec649</uuid><name>{#UNIT.NAME}: Unit file state</name><type>DEPENDENT</type><key>systemd.service.unitfile_state[&quot;{#UNIT.NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Encodes the install state of the unit file of FragmentPath. It currently knows the following states: &quot;enabled&quot;, &quot;enabled-runtime&quot;, &quot;linked&quot;, &quot;linked-runtime&quot;, &quot;masked&quot;, &quot;masked-runtime&quot;, &quot;static&quot;, &quot;disabled&quot;, and &quot;invalid&quot;.</description><valuemap><name>Unit File State</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.UnitFileState.state</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>systemd.unit.get[&quot;{#UNIT.NAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>service</value></tag></tags></item_prototype><item_prototype><uuid>a35992b54d944a389c1bb44748a37fdb</uuid><name>{#UNIT.NAME}: Active time</name><type>DEPENDENT</type><key>systemd.service.uptime[&quot;{#UNIT.NAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Number of seconds since unit entered the active state.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>data = JSON.parse(value)
  if (data.ActiveEnterTimestamp &gt; data.ActiveExitTimestamp) {
      return Math.floor(Date.now()/1000)-Number(data.ActiveEnterTimestamp)/1000000;
    }
  return null;</parameter></parameters></step></preprocessing><master_item><key>systemd.unit.get[&quot;{#UNIT.NAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>service</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>e2292c5ead924500a06d38b6356930c7</uuid><expression>last(/Systemd by Zabbix agent 2/systemd.service.uptime[&quot;{#UNIT.NAME}&quot;])&lt;10m</expression><name>{#UNIT.NAME}: has been restarted</name><event_name>{#UNIT.NAME}: has been restarted (uptime &lt; 10m)</event_name><priority>INFO</priority><description>Uptime is less than 10 minutes</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>bdb94d1182114985a8734de7d5d92380</uuid><name>{#UNIT.NAME}: Get unit info</name><key>systemd.unit.get[&quot;{#UNIT.NAME}&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Returns all properties of a systemd service unit.
 Unit description: {#UNIT.DESCRIPTION}.</description><tags><tag><tag>component</tag><value>raw</value></tag><tag><tag>component</tag><value>unit</value></tag></tags></item_prototype></item_prototypes></discovery_rule><discovery_rule><uuid>5c337762ae7b43a98fcb9dc3102a8467</uuid><name>Socket units discovery</name><key>systemd.unit.discovery[socket]</key><delay>30m</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#UNIT.ACTIVESTATE}</macro><value>{$SYSTEMD.ACTIVESTATE.SOCKET.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#UNIT.ACTIVESTATE}</macro><value>{$SYSTEMD.ACTIVESTATE.SOCKET.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition><condition><macro>{#UNIT.UNITFILESTATE}</macro><value>{$SYSTEMD.UNITFILESTATE.SOCKET.MATCHES}</value><formulaid>E</formulaid></condition><condition><macro>{#UNIT.UNITFILESTATE}</macro><value>{$SYSTEMD.UNITFILESTATE.SOCKET.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>F</formulaid></condition><condition><macro>{#UNIT.NAME}</macro><value>{$SYSTEMD.NAME.SOCKET.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>C</formulaid></condition><condition><macro>{#UNIT.NAME}</macro><value>{$SYSTEMD.NAME.SOCKET.MATCHES}</value><formulaid>D</formulaid></condition></conditions></filter><description>Discover systemd socket units and their details.</description><item_prototypes><item_prototype><uuid>462ee6b9e70146c8ab6a917c182f3ce7</uuid><name>{#UNIT.NAME}: Connections accepted per sec</name><type>DEPENDENT</type><key>systemd.socket.conn_accepted.rate[&quot;{#UNIT.NAME}&quot;]</key><delay>0</delay><history>7d</history><description>The number of accepted socket connections (NAccepted) per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.NAccepted</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>systemd.unit.get[&quot;{#UNIT.NAME}&quot;,Socket]</key></master_item><tags><tag><tag>component</tag><value>socket</value></tag></tags></item_prototype><item_prototype><uuid>258a899aba9546db956b8e235738bd89</uuid><name>{#UNIT.NAME}: Connections connected</name><type>DEPENDENT</type><key>systemd.socket.conn_count[&quot;{#UNIT.NAME}&quot;]</key><delay>0</delay><history>7d</history><description>The current number of socket connections (NConnections).</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.NConnections</parameter></parameters></step></preprocessing><master_item><key>systemd.unit.get[&quot;{#UNIT.NAME}&quot;,Socket]</key></master_item><tags><tag><tag>component</tag><value>socket</value></tag></tags></item_prototype><item_prototype><uuid>83ffad5a484d48e388ac658511d4b803</uuid><name>{#UNIT.NAME}: Get unit info</name><key>systemd.unit.get[&quot;{#UNIT.NAME}&quot;,Socket]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Returns all properties of a systemd socket unit.
 Unit description: {#UNIT.DESCRIPTION}.</description><tags><tag><tag>component</tag><value>raw</value></tag><tag><tag>component</tag><value>socket</value></tag></tags></item_prototype></item_prototypes></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>software</value></tag><tag><tag>target</tag><value>systemd</value></tag></tags><macros><macro><macro>{$SYSTEMD.ACTIVESTATE.SERVICE.MATCHES}</macro><value>active</value><description>Filter of systemd service units by active state</description></macro><macro><macro>{$SYSTEMD.ACTIVESTATE.SERVICE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter of systemd service units by active state</description></macro><macro><macro>{$SYSTEMD.ACTIVESTATE.SOCKET.MATCHES}</macro><value>active</value><description>Filter of systemd socket units by active state</description></macro><macro><macro>{$SYSTEMD.ACTIVESTATE.SOCKET.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter of systemd socket units by active state</description></macro><macro><macro>{$SYSTEMD.NAME.SERVICE.MATCHES}</macro><value>.*</value><description>Filter of systemd service units by name</description></macro><macro><macro>{$SYSTEMD.NAME.SERVICE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter of systemd service units by name</description></macro><macro><macro>{$SYSTEMD.NAME.SOCKET.MATCHES}</macro><value>.*</value><description>Filter of systemd socket units by name</description></macro><macro><macro>{$SYSTEMD.NAME.SOCKET.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter of systemd socket units by name</description></macro><macro><macro>{$SYSTEMD.UNITFILESTATE.SERVICE.MATCHES}</macro><value>enabled</value><description>Filter of systemd service units by unit file state</description></macro><macro><macro>{$SYSTEMD.UNITFILESTATE.SERVICE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter of systemd service units by unit file state</description></macro><macro><macro>{$SYSTEMD.UNITFILESTATE.SOCKET.MATCHES}</macro><value>enabled</value><description>Filter of systemd socket units by unit file state</description></macro><macro><macro>{$SYSTEMD.UNITFILESTATE.SOCKET.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter of systemd socket units by unit file state</description></macro></macros><valuemaps><valuemap><uuid>fe20979701834a80a823c514d11c19e7</uuid><name>Unit Active State</name><mappings><mapping><value>0</value><newvalue>unknown</newvalue></mapping><mapping><value>1</value><newvalue>active</newvalue></mapping><mapping><value>2</value><newvalue>reloading</newvalue></mapping><mapping><value>3</value><newvalue>inactive</newvalue></mapping><mapping><value>4</value><newvalue>failed</newvalue></mapping><mapping><value>5</value><newvalue>activating</newvalue></mapping><mapping><value>6</value><newvalue>deactivating</newvalue></mapping></mappings></valuemap><valuemap><uuid>e0a5e55e5a074a26935386c5e29a0e36</uuid><name>Unit File State</name><mappings><mapping><value>0</value><newvalue>unknown</newvalue></mapping><mapping><value>1</value><newvalue>enabled</newvalue></mapping><mapping><value>2</value><newvalue>enabled-runtime</newvalue></mapping><mapping><value>3</value><newvalue>linked</newvalue></mapping><mapping><value>4</value><newvalue>linked-runtime</newvalue></mapping><mapping><value>5</value><newvalue>masked</newvalue></mapping><mapping><value>6</value><newvalue>masked-runtime</newvalue></mapping><mapping><value>7</value><newvalue>static</newvalue></mapping><mapping><value>8</value><newvalue>disabled</newvalue></mapping><mapping><value>9</value><newvalue>invalid</newvalue></mapping></mappings></valuemap><valuemap><uuid>0309ef57e92a4ea2ae4404a685f0e7b8</uuid><name>Unit Load State</name><mappings><mapping><value>0</value><newvalue>unknown</newvalue></mapping><mapping><value>1</value><newvalue>loaded</newvalue></mapping><mapping><value>2</value><newvalue>error</newvalue></mapping><mapping><value>3</value><newvalue>masked</newvalue></mapping></mappings></valuemap></valuemaps></template></templates></zabbix_export>
