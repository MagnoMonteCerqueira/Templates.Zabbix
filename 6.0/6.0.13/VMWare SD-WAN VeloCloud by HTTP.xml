<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:15:07Z</date><groups><group><uuid>36bff6c29af64692839d077febfc7079</uuid><name>Templates/Network devices</name></group></groups><templates><template><uuid>e1ca624566424496bff9d90c261ab37b</uuid><template>VMWare SD-WAN VeloCloud by HTTP</template><name>VMWare SD-WAN VeloCloud by HTTP</name><description>Template for monitoring VMWare SD-WAN VeloCloud https://www.vmware.com/products/sd-wan.html

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/

Template tooling version used: 0.41</description><groups><group><name>Templates/Network devices</name></group></groups><items><item><uuid>3d96f6e755934bc8a4ee7300a165adae</uuid><name>Velocloud: Get data</name><type>SCRIPT</type><key>velocloud.get</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><params>var params = JSON.parse(value);

var request = new HttpRequest();

request.addHeader('Content-Type: application/json');
request.addHeader('Authorization: Token ' + params.token);

var response,
    output,
    error_msg = '',
    enterprises = [],
    edges = [],
    links = [],
    gateways = [],
    version = [],
    apps = [],
    appsLinks = [],
    edgeSDWan = [],
    edgeSDWanPath = [];

function getHttpData(url, body) {
    response = request.post(url, body);
    Zabbix.log(4, '[ SD-WAN API ] [ ' + url + ' ] Received response with status code ' + request.getStatus() + ': ' + response);

    if (response !== null) {
        try {
            response = JSON.parse(response);
        }
        catch (error) {
            throw 'Failed to parse response received from SD-WAN API. Check debug log for more information.';
        }
    }

    if (request.getStatus() !== 200) {
        if (response.error &amp;&amp; response.error.message) {
            throw response.error.message;
        } else {
            throw 'Failed to receive data: invalid response status code.';
        }
    }

    if (typeof (response) !== 'object' || response === null) {
        throw 'Cannot process response data: received data is not an object.';
    }

    return response;
};

try {

    if (params.token === '{' + '$VELOCLOUD.TOKEN}') {
        throw 'Please change {' + '$VELOCLOUD.TOKEN} macro with the proper value.';
    }

    if (params.url.indexOf('http://') === -1 &amp;&amp; params.url.indexOf('https://') === -1) {
        params.url = 'https://' + params.url;
    }

    if (!params.url.endsWith('/')) {
        params.url += '/';
    }

    enterprises = getHttpData(params.url + 'portal/rest/monitoring/getAggregates', '{}').enterprises;

    if (!Array.isArray(enterprises)) {
        throw 'Cannot process edges: enterprises is not an array.';
    }

    links = getHttpData(params.url + 'portal/rest/monitoring/getAggregateEdgeLinkMetrics', '{}');
    gateways = getHttpData(params.url + 'portal/rest/network/getNetworkGateways', JSON.stringify({ with: ['site'] }));
    version = getHttpData(params.url + 'portal/rest/system/getVersionInfo', '{}');

    for (var i in enterprises) {
        responseEdges = getHttpData(params.url + 'portal/rest/enterprise/getEnterpriseEdges', JSON.stringify({ enterpriseId: enterprises[i].id, with: ['site'] }));
        edges = edges.concat(responseEdges);
    }

    if (!Array.isArray(edges)) {
        throw 'Cannot process edges SDWans: edges is not an array.';
    }

    for (var i in edges) {
        responseEdgeSDWan = getHttpData(params.url + 'portal/rest/edge/getEdgeSDWANPeers', JSON.stringify({ enterpriseId: edges[i].enterpriseId, edgeId: edges[i].id }));

        if (!Array.isArray(responseEdgeSDWan)) {
            throw 'Cannot process edges SDWan Path: edges SDWans is not an array.';
        }

        for (var e in responseEdgeSDWan) {
            data = {
                'enterpriseId': edges[i].enterpriseId,
                'edgeId': edges[i].id,
                'peerLogicalId': responseEdgeSDWan[e].deviceLogicalId
            };
            responseEdgeSDWanPath = getHttpData(params.url + 'portal/rest/metrics/getEdgeSDWANPeerPathMetrics', JSON.stringify(data));
            edgeSDWanPath = edgeSDWanPath.concat(responseEdgeSDWanPath);

            responseEdgeSDWan[e].edgeId = edges[i].id;
            responseEdgeSDWan[e].edgeName = edges[i].name;
            responseEdgeSDWan[e].enterpriseId = edges[i].enterpriseId;
        }

        edgeSDWan = edgeSDWan.concat(responseEdgeSDWan);
    }

} catch (error) {
    error_msg = error;
};

return JSON.stringify({
    'enterprises': enterprises,
    'edges': edges,
    'links': links,
    'gateways': gateways,
    'edgeSDWan': edgeSDWan,
    'edgeSDWanPath': edgeSDWanPath,
    'info': version,
    'error': error_msg.toString()
});</params><description>The JSON with result of Velocloud API requests.</description><timeout>10s</timeout><parameters><parameter><name>token</name><value>{$VELOCLOUD.TOKEN}</value></parameter><parameter><name>url</name><value>{$VELOCLOUD.URL}</value></parameter></parameters><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>9df4ba5324d94d0fb54d3231311016a6</uuid><name>Velocloud: Clear data</name><type>DEPENDENT</type><key>velocloud.get.clear_metrics</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Clear metrics for data without errors.</description><preprocessing><step><type>CHECK_JSON_ERROR</type><parameters><parameter>$.error</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>velocloud.get</key></master_item><tags><tag><tag>component</tag><value>orchestrator</value></tag></tags></item><item><uuid>8a54309d8abc4fc7816b168329243de4</uuid><name>Velocloud: Get data collection errors</name><type>DEPENDENT</type><key>velocloud.get.error</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Errors of aggregate script item.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.error</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>a0623655a2fa4f60962ad560b8bb5a13</uuid><expression>length(last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.get.error))&gt;0</expression><name>Velocloud: There are errors in aggregate script item</name><priority>WARNING</priority><description>There are errors in aggregate script item.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>3f589e2191c5419fb89cc33639595ae9</uuid><name>Velocloud: Orchestrator API version</name><type>DEPENDENT</type><key>velocloud.orchestrator.api_version</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Version of VMware SD-WAN Orchestrator API.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.info.apiVersion</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.clear_metrics</key></master_item><tags><tag><tag>component</tag><value>orchestrator</value></tag></tags><triggers><trigger><uuid>5a95d9c614e74c2c8b6181fc8dff2226</uuid><expression>nodata(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.api_version,30m)=1</expression><name>Velocloud: Failed to fetch aggregate data</name><event_name>Velocloud: Failed to fetch aggregate data (or no data for 30m)</event_name><priority>AVERAGE</priority><description>Zabbix has not received data for items for the last 30 minutes.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>ab24d8fc4c2a4130bca1b4b6d4f311ae</uuid><name>Velocloud: Orchestrator build</name><type>DEPENDENT</type><key>velocloud.orchestrator.build</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Build of VMware SD-WAN Orchestrator API.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.info.build</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>12h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.clear_metrics</key></master_item><tags><tag><tag>component</tag><value>orchestrator</value></tag></tags><triggers><trigger><uuid>37c16b3cbd8b4680ab85a1fea819611f</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.build,#1)&lt;&gt;last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.build,#2) and length(last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.build))&gt;0</expression><name>Velocloud: Orchestrator build has been changed</name><priority>INFO</priority><description>Velocloud Orchestrator build has been changed.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>1f60b61051494ab495de4dfe2cd83450</uuid><name>Velocloud: Orchestrator version</name><type>DEPENDENT</type><key>velocloud.orchestrator.version</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Version of VMware SD-WAN Orchestrator API.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.info.version</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>12h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.clear_metrics</key></master_item><tags><tag><tag>component</tag><value>orchestrator</value></tag></tags><triggers><trigger><uuid>a1d8e4d61a804c8fb11b33f590f0885c</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.version,#1)&lt;&gt;last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.version,#2) and length(last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.orchestrator.version))&gt;0</expression><name>Velocloud: Orchestrator version has been changed</name><priority>INFO</priority><description>Velocloud Orchestrator version has been changed.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>1206789df5b44af7ba1c5416662344dd</uuid><name>Velocloud: System properties</name><type>HTTP_AGENT</type><key>velocloud.system.properties</key><delay>6h</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>System properties of VMware SD-WAN.</description><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>12h</parameter></parameters></step></preprocessing><url>https://{$VELOCLOUD.URL}/portal/rest/systemProperty/getSystemProperties</url><posts>{ &quot;normalize&quot;: true }</posts><headers><header><name>Content-Type</name><value>application/json</value></header><header><name>Authorization</name><value>Token {$VELOCLOUD.TOKEN}</value></header></headers><request_method>POST</request_method><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>58541dfe798843fa822276e84a32b919</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.system.properties,#1)&lt;&gt;last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.system.properties,#2)</expression><name>Velocloud: System properties have changed</name><priority>INFO</priority><description>System properties have changed.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item></items><discovery_rules><discovery_rule><uuid>522ba6551cc64094b60a136d07c9921d</uuid><name>Edges metrics discovery</name><type>DEPENDENT</type><key>velocloud.edges.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#NAME}</macro><value>{$VELOCLOUD.LLD.EDGES.FILTER.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>A</formulaid></condition><condition><macro>{#NAME}</macro><value>{$VELOCLOUD.LLD.EDGES.FILTER.MATCHES}</value><formulaid>B</formulaid></condition></conditions></filter><description>Metrics for edges statistics.</description><item_prototypes><item_prototype><uuid>79aa9ebb1ce64944a78a7c8d7603f53b</uuid><name>Edge [{#NAME}]: Activation state</name><type>DEPENDENT</type><key>velocloud.edge.activation[{#ID}]</key><delay>0</delay><history>7d</history><description>Edge activation state.</description><valuemap><name>Edge activation state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.activationState</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>switch (value) {
    case 'PENDING':
        return 0
    case 'ACTIVATED':
        return 1
    default:
        return 10
}</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.edge[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>edge</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>cecb2a3698704c4c89ef12eb3bb39222</uuid><name>Edge [{#NAME}]: Description</name><type>DEPENDENT</type><key>velocloud.edge.description[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Edge description.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.description</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>12h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.edge[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>edge</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>490afb422d0f457595343d49536470b7</uuid><name>Edge [{#NAME}]: HA state</name><type>DEPENDENT</type><key>velocloud.edge.ha_state[{#ID}]</key><delay>0</delay><history>7d</history><description>Edge high availability state.</description><valuemap><name>Edge HA status</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.haState</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>switch (value) {
    case 'UNCONFIGURED':
        return 0
    case 'READY':
        return 1
    case 'PENDING_INIT':
        return 2
    case 'FAILED':
        return 3
    default:
        return 10
}</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.edge[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>edge</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>075d35e3ed074b9daf01864b111945c7</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.edge.ha_state[{#ID}])=3</expression><name>Edge [{#NAME}]: HA state is in &quot;FAILED&quot; state</name><priority>WARNING</priority><description>High availability state is &quot;FAILED&quot;.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>fdb55947147249109da453009d6bd443</uuid><name>Edge [{#NAME}]: Model number</name><type>DEPENDENT</type><key>velocloud.edge.model[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Edge model number.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.modelNumber</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>12h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.edge[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>edge</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>0af44b485ae54de49a0385923c897bee</uuid><name>Edge [{#NAME}]: Service uptime</name><type>DEPENDENT</type><key>velocloud.edge.service_uptime[{#ID}]</key><delay>0</delay><history>7d</history><units>uptime</units><description>Edge service uptime.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.serviceUpSince</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>value == '0000-00-00 00:00:00' ? value = 0 : value = Math.round((Date.now() - new Date(value).valueOf()) / 1000)
return value</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.edge[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>edge</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>e12fe7584fbd40268e7c16ed044aa4db</uuid><name>Edge [{#NAME}]: Software version</name><type>DEPENDENT</type><key>velocloud.edge.software_version[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Edge software version.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.softwareVersion</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>12h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.edge[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>edge</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>74b49eac72574daab1b727045be118ca</uuid><name>Edge [{#NAME}]: State</name><type>DEPENDENT</type><key>velocloud.edge.state[{#ID}]</key><delay>0</delay><history>7d</history><description>Edge state.</description><valuemap><name>Edge states</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.edgeState</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>switch (value) {
    case 'OFFLINE':
        return 0
    case 'CONNECTED':
        return 1
    case 'NEVER_ACTIVATED':
        return 2
    default:
        return 10
}</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.edge[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>edge</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>962d2d0c6f124424b2e5a7aca89d293f</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.edge.state[{#ID}])=0</expression><name>Edge [{#NAME}]: Edge is in &quot;OFFLINE&quot; state</name><priority>WARNING</priority><description>Edge state is &quot;OFFLINE&quot;.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>a86c1fa26d4d4481bdfb099338c27989</uuid><name>Edge [{#NAME}]: System uptime</name><type>DEPENDENT</type><key>velocloud.edge.system_uptime[{#ID}]</key><delay>0</delay><history>7d</history><units>uptime</units><description>Edge system uptime.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.systemUpSince</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>value == '0000-00-00 00:00:00' ? value = 0 : value = Math.round((Date.now() - new Date(value).valueOf()) / 1000)
return value</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.edge[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>edge</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>156d96052fd54606828cc53484794bb2</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.edge.system_uptime[{#ID}])&gt;0 and last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.edge.system_uptime[{#ID}])&lt;600</expression><name>Edge [{#NAME}]: Edge has been restarted</name><event_name>Edge [{#NAME}]: Edge has been restarted (uptime &lt; 10m)</event_name><priority>WARNING</priority><description>Edge was restarted.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>95e2e7f9b89a4c958c3fd2909a181cd9</uuid><name>Edge [{#NAME}]: Raw data</name><type>DEPENDENT</type><key>velocloud.get.edge[{#ID}]</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Raw data for velocloud edge.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.edges[?(@.id=='{#ID}')].first()</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.clear_metrics</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype></item_prototypes><master_item><key>velocloud.get.clear_metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#CITY}</lld_macro><path>$.site.city</path></lld_macro_path><lld_macro_path><lld_macro>{#ID}</lld_macro><path>$.id</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.name</path></lld_macro_path><lld_macro_path><lld_macro>{#STATE}</lld_macro><path>$.site.state</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.edges</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>e2879e0ce6e44203b0615c36ba626cc0</uuid><name>Gateways metrics discovery</name><type>DEPENDENT</type><key>velocloud.gateways.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#NAME}</macro><value>{$VELOCLOUD.LLD.GATEWAYS.FILTER.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>A</formulaid></condition><condition><macro>{#NAME}</macro><value>{$VELOCLOUD.LLD.GATEWAYS.FILTER.MATCHES}</value><formulaid>B</formulaid></condition></conditions></filter><description>Metrics for gateways statistics.</description><item_prototypes><item_prototype><uuid>52859166849d4cdf860664f8d3b8088d</uuid><name>Gateway [{#NAME}]: Connected edges</name><type>DEPENDENT</type><key>velocloud.gateway.connected_edges[{#ID}]</key><delay>0</delay><history>7d</history><description>Gateway connected edges.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.connectedEdges</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>f0d7bdb2ac3540258ab6a276b43a382c</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.gateway.connected_edges[{#ID}],#1)&lt;&gt;last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.gateway.connected_edges[{#ID}],#2)</expression><name>Gateway [{#NAME}]: The number of connected edges is changed</name><priority>WARNING</priority><description>The number of connected edges is changed.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>5e588efb83be4dc2bc29eaa0a6630718</uuid><name>Gateway [{#NAME}]: Description</name><type>DEPENDENT</type><key>velocloud.gateway.description[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Gateway description.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.description</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>12h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>7f2a0a68386744cb84fab35df8c55a07</uuid><name>Gateway [{#NAME}]: IP address</name><type>DEPENDENT</type><key>velocloud.gateway.ip_address[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Gateway ip address.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.ipAddress</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>b304460854f0485189f88df12483b5ac</uuid><name>Gateway [{#NAME}]: Service uptime</name><type>DEPENDENT</type><key>velocloud.gateway.service_uptime[{#ID}]</key><delay>0</delay><history>7d</history><units>uptime</units><description>Gateway service uptime.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.serviceUpSince</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>value == '0000-00-00 00:00:00' ? value = 0 : value = Math.round((Date.now() - new Date(value).valueOf()) / 1000)
return value</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>91784583eda943a7ace430413450391c</uuid><name>Gateway [{#NAME}]: State</name><type>DEPENDENT</type><key>velocloud.gateway.state[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Gateway state.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.gatewayState</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>d902600ef51640ffaaa4384ce505bcc2</uuid><name>Gateway [{#NAME}]: System uptime</name><type>DEPENDENT</type><key>velocloud.gateway.system_uptime[{#ID}]</key><delay>0</delay><history>7d</history><units>uptime</units><description>Gateway system uptime.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.systemUpSince</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>value == '0000-00-00 00:00:00' ? value = 0 : value = Math.round((Date.now() - new Date(value).valueOf()) / 1000)
return value</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>e51ea2da27284067bd3ec8fa4faffdde</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.gateway.system_uptime[{#ID}])&gt;0 and last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.gateway.system_uptime[{#ID}])&lt;600</expression><name>Gateway [{#NAME}]: Gateway has been restarted</name><event_name>Gateway [{#NAME}]: Gateway has been restarted (uptime &lt; 10m)</event_name><priority>WARNING</priority><description>Gateway was restarted.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>66c8fe8095724fb38966b05ef5d77a37</uuid><name>Gateway [{#NAME}]: Utilization CPU</name><type>DEPENDENT</type><key>velocloud.gateway.utilization.cpu[{#ID}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Gateway CPU utilization.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.utilizationDetail.cpu</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>cpu</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>b510c38771464024a66dc20ce9d75505</uuid><name>Gateway [{#NAME}]: Utilization load</name><type>DEPENDENT</type><key>velocloud.gateway.utilization.load[{#ID}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Gateway load.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.utilizationDetail.load</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>ad83565ae40f480dacd56e63bd475ddc</uuid><name>Gateway [{#NAME}]: Utilization memory</name><type>DEPENDENT</type><key>velocloud.gateway.utilization.memory[{#ID}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Gateway memory utilization.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.utilizationDetail.memory</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>component</tag><value>memory</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>b10c51350f604a8195e9c0176ca2de85</uuid><name>Gateway [{#NAME}]: Utilization overall</name><type>DEPENDENT</type><key>velocloud.gateway.utilization.overall[{#ID}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Gateway overall utilization.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.utilizationDetail.overall</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.gateway[{#ID}]</key></master_item><tags><tag><tag>city</tag><value>{#CITY}</value></tag><tag><tag>component</tag><value>gateway</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>state</tag><value>{#STATE}</value></tag></tags></item_prototype><item_prototype><uuid>5c11969073ab415abe08c74626bd5dd1</uuid><name>Gateway [{#NAME}]: Raw data</name><type>DEPENDENT</type><key>velocloud.get.gateway[{#ID}]</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Raw data for velocloud gateway.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.gateways[?(@.id=='{#ID}')].first()</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.clear_metrics</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>d8d9b176f439436ba6fe69ec8bc6409e</uuid><name>Gateway [{#NAME}]: Utilization</name><graph_items><graph_item><color>1A7C11</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.gateway.utilization.cpu[{#ID}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.gateway.utilization.load[{#ID}]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.gateway.utilization.memory[{#ID}]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.gateway.utilization.overall[{#ID}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>velocloud.get.clear_metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#CITY}</lld_macro><path>$.site.city</path></lld_macro_path><lld_macro_path><lld_macro>{#ID}</lld_macro><path>$.id</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.name</path></lld_macro_path><lld_macro_path><lld_macro>{#STATE}</lld_macro><path>$.site.state</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.gateways</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>b951193feec6495cbd446f6d5097a868</uuid><name>Links metrics discovery</name><type>DEPENDENT</type><key>velocloud.links.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#ID}</macro><value>{$VELOCLOUD.LLD.LINKS.FILTER.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>A</formulaid></condition><condition><macro>{#ID}</macro><value>{$VELOCLOUD.LLD.LINKS.FILTER.MATCHES}</value><formulaid>B</formulaid></condition></conditions></filter><description>Metrics for links statistics.</description><item_prototypes><item_prototype><uuid>37988766bc694c699bfde578174c6623</uuid><name>Link [{#NAME}]:[{#IP}]: Raw data</name><type>DEPENDENT</type><key>velocloud.get.link[{#ID}]</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Raw data for velocloud link.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.links[?(@.linkId=='{#ID}')].first()</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.clear_metrics</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype><item_prototype><uuid>6b3351b9187d47ba804e5fcd8c6f474f</uuid><name>Link [{#NAME}]:[{#IP}]: Best loss rx, %</name><type>DEPENDENT</type><key>velocloud.link.best_loss_rx.pct[{#ID}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Link receive best loss.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.bestLossPctRx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>897c9055d51a4e75ba7bae1160c7303e</uuid><name>Link [{#NAME}]:[{#IP}]: Best loss tx, %</name><type>DEPENDENT</type><key>velocloud.link.best_loss_tx.pct[{#ID}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Link transmit best loss.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.bestLossPctTx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>5602191f2e0f4cb2b2340a4cfc77cfc7</uuid><name>Link [{#NAME}]:[{#IP}]: Bytes in</name><type>DEPENDENT</type><key>velocloud.link.bytes_rx[{#ID}]</key><delay>0</delay><history>7d</history><units>B</units><description>Link received bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.bytesRx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>758b71f1692c46a8bb0611566b00031b</uuid><name>Link [{#NAME}]:[{#IP}]: Bytes out</name><type>DEPENDENT</type><key>velocloud.link.bytes_tx[{#ID}]</key><delay>0</delay><history>7d</history><units>B</units><description>Link transmitted bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.bytesTx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>3320d368036b460091b3f20e3c5cebd9</uuid><name>Link [{#NAME}]:[{#IP}]: Last active</name><type>DEPENDENT</type><key>velocloud.link.last_active[{#ID}]</key><delay>0</delay><history>7d</history><units>s</units><description>Link last active in seconds ago.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.link.linkLastActive</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>return Math.round((Date.now() - new Date(value).valueOf()) / 1000)</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>cf66e401adc6432e8052baf0128d6877</uuid><name>Link [{#NAME}]:[{#IP}]: Packets in</name><type>DEPENDENT</type><key>velocloud.link.packets_rx[{#ID}]</key><delay>0</delay><history>7d</history><units>!packets</units><description>Link received packets.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.packetsRx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>152d25185f3e4e8b80ffea7d8ba25775</uuid><name>Link [{#NAME}]:[{#IP}]: Packets out</name><type>DEPENDENT</type><key>velocloud.link.packets_tx[{#ID}]</key><delay>0</delay><history>7d</history><units>!packets</units><description>Link transmitted packets.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.packetsTx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>b1d5964d030841e28a8b9e80c8152e7a</uuid><name>Link [{#NAME}]:[{#IP}]: State</name><type>DEPENDENT</type><key>velocloud.link.state[{#ID}]</key><delay>0</delay><history>7d</history><description>Link state.</description><valuemap><name>Link states</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.link.linkState</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>switch (value) {
    case 'UNSTABLE':
        return 0
    case 'STABLE':
        return 1
    case 'DISCONNECTED':
        return 2
    default:
        return 10
}</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>abceaab09aea4cb482dc4b554502429b</uuid><expression>last(/VMWare SD-WAN VeloCloud by HTTP/velocloud.link.state[{#ID}])&lt;&gt;1</expression><name>Link [{#NAME}]:[{#IP}]: Link state is not &quot;STABLE&quot;</name><priority>WARNING</priority><description>Link state is not &quot;STABLE&quot;.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>43deb16e85644937a182b01eadb875d0</uuid><name>Link [{#NAME}]:[{#IP}]: Total bytes</name><type>DEPENDENT</type><key>velocloud.link.total_bytes[{#ID}]</key><delay>0</delay><history>7d</history><units>B</units><description>Link Total bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totalBytes</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>622408bd703040339d1b4bdebed3280e</uuid><name>Link [{#NAME}]:[{#IP}]: Total packets</name><type>DEPENDENT</type><key>velocloud.link.total_packets[{#ID}]</key><delay>0</delay><history>7d</history><units>!packets</units><description>Link total packets.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totalPackets</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.link[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>link</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>enterprise</tag><value>{#ENTERPRISE}</value></tag><tag><tag>interface</tag><value>{#IF}</value></tag><tag><tag>ip</tag><value>{#IP}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>d117ffc6c5f245099209ca3a471cc63f</uuid><name>Link [{#NAME}]:[{#IP}]: Best loss</name><graph_items><graph_item><color>1A7C11</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.link.best_loss_rx.pct[{#ID}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.link.best_loss_tx.pct[{#ID}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>951febf02caa4d4aa1417f8b8d11d89c</uuid><name>Link [{#NAME}]:[{#IP}]: Bytes summary</name><graph_items><graph_item><color>1A7C11</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.link.bytes_rx[{#ID}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.link.bytes_tx[{#ID}]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.link.total_bytes[{#ID}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>c656365e5c77496fac4c0a7d80d6cfd3</uuid><name>Link [{#NAME}]:[{#IP}]: Packets summary</name><graph_items><graph_item><color>1A7C11</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.link.packets_rx[{#ID}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.link.packets_tx[{#ID}]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.link.total_packets[{#ID}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>velocloud.get.clear_metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#EDGE}</lld_macro><path>$.link.edgeName</path></lld_macro_path><lld_macro_path><lld_macro>{#ENTERPRISE}</lld_macro><path>$.link.enterpriseName</path></lld_macro_path><lld_macro_path><lld_macro>{#ID}</lld_macro><path>$.link.linkId</path></lld_macro_path><lld_macro_path><lld_macro>{#IF}</lld_macro><path>$.link.interface</path></lld_macro_path><lld_macro_path><lld_macro>{#IP}</lld_macro><path>$.link.linkIpAddress</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.link.displayName</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.links</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>23ae8832dee54e7087b8c4d3c970a9ea</uuid><name>SDWAN peers path metrics discovery</name><type>DEPENDENT</type><key>velocloud.sdwanpath.discovery</key><delay>0</delay><description>Metrics for SDWAN peers path.</description><item_prototypes><item_prototype><uuid>d82c61b41c8744e9bfb39993faadeb67</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Raw data</name><type>DEPENDENT</type><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Raw data for velocloud sdwan peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.edgeSDWanPath[?(@.source.linkName=='{#NAME}' &amp;&amp; @.source.deviceName=='{#SOURCE}' &amp;&amp; @.destination.deviceName=='{#DESTINATION}')].first()</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.clear_metrics</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype><item_prototype><uuid>2fafb7d1b4c1429381f2f46c60dafa28</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Bytes in</name><type>DEPENDENT</type><key>velocloud.sdwanpath.bytes_rx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>7d</history><units>B</units><description>Bytes received of SDWAN peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.bytesRx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-path</value></tag><tag><tag>destination</tag><value>{#DESTINATION}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>source</tag><value>{#SOURCE}</value></tag></tags></item_prototype><item_prototype><uuid>2fa176affa6b46ffae3682ea7cb96866</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Bytes out</name><type>DEPENDENT</type><key>velocloud.sdwanpath.bytes_tx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>7d</history><units>B</units><description>Bytes transmitted of SDWAN peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.bytesTx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-path</value></tag><tag><tag>destination</tag><value>{#DESTINATION}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>source</tag><value>{#SOURCE}</value></tag></tags></item_prototype><item_prototype><uuid>cf8f3d0c61994e49b493d79160da27bf</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Packets in</name><type>DEPENDENT</type><key>velocloud.sdwanpath.packets_rx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>7d</history><units>!packets</units><description>Packets received of SDWAN peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.packetsRx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-path</value></tag><tag><tag>destination</tag><value>{#DESTINATION}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>source</tag><value>{#SOURCE}</value></tag></tags></item_prototype><item_prototype><uuid>49fc4e85c5a5415793fc89f2c3cdec8f</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Packets out</name><type>DEPENDENT</type><key>velocloud.sdwanpath.packets_tx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>7d</history><units>!packets</units><description>Packets transmitted of SDWAN peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.packetsTx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-path</value></tag><tag><tag>destination</tag><value>{#DESTINATION}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>source</tag><value>{#SOURCE}</value></tag></tags></item_prototype><item_prototype><uuid>98a0c2c3a3be47e9bd32cf719069cad2</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Packet Loss in</name><type>DEPENDENT</type><key>velocloud.sdwanpath.packet_loss_rx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Received packet loss of SDWAN peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.packetLossRx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-path</value></tag><tag><tag>destination</tag><value>{#DESTINATION}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>source</tag><value>{#SOURCE}</value></tag></tags></item_prototype><item_prototype><uuid>0f2ef8113a3644feae7b827675362485</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Packet Loss out</name><type>DEPENDENT</type><key>velocloud.sdwanpath.packet_loss_tx[{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Transmitted packet loss of SDWAN peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.packetLossTx</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-path</value></tag><tag><tag>destination</tag><value>{#DESTINATION}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>source</tag><value>{#SOURCE}</value></tag></tags></item_prototype><item_prototype><uuid>3a7ed14c13874c3088f28253a25a0c10</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Bytes total</name><type>DEPENDENT</type><key>velocloud.sdwanpath.total_bytes[{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>7d</history><units>B</units><description>Total bytes of SDWAN peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.totalBytes</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-path</value></tag><tag><tag>destination</tag><value>{#DESTINATION}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>source</tag><value>{#SOURCE}</value></tag></tags></item_prototype><item_prototype><uuid>1f7bbdd7c1e24429878538b3b6bbddc4</uuid><name>Path [{#NAME}]:[{#SOURCE} =&gt; {#DESTINATION}]: Total packets</name><type>DEPENDENT</type><key>velocloud.sdwanpath.total_packets[{#NAME}/{#SOURCE}/{#DESTINATION}]</key><delay>0</delay><history>7d</history><units>!packets</units><description>Total packets of SDWAN peer path.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.totalPackets</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_path[{{#NAME}/{#SOURCE}/{#DESTINATION}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-path</value></tag><tag><tag>destination</tag><value>{#DESTINATION}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>source</tag><value>{#SOURCE}</value></tag></tags></item_prototype></item_prototypes><master_item><key>velocloud.get.clear_metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#DESTINATION}</lld_macro><path>$.destination.deviceName</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.source.linkName</path></lld_macro_path><lld_macro_path><lld_macro>{#SOURCE}</lld_macro><path>$.source.deviceName</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.edgeSDWanPath</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>5695baeff9f64b9b8850dbc6f98566ef</uuid><name>SDWAN peers metrics discovery</name><type>DEPENDENT</type><key>velocloud.sdwanpeers.discovery</key><delay>0</delay><description>Metrics for SDWAN peers.</description><item_prototypes><item_prototype><uuid>26fde8ba5568406cabd29464505c4715</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Raw data</name><type>DEPENDENT</type><key>velocloud.get.sdwan_peer[{#EDGE.ID}/{#ID}]</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Raw data for velocloud sdwan peer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.edgeSDWan[?(@.deviceLogicalId=='{#ID}' &amp;&amp; @.edgeId=='{#EDGE.ID}')].first()</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.clear_metrics</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype><item_prototype><uuid>25f6dc87f6014502a5eeb36ed3ddd7ed</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Dead path</name><type>DEPENDENT</type><key>velocloud.sdwanpeer.dead_path[{#EDGE.ID}/{#ID}]</key><delay>0</delay><history>7d</history><description>Count of dead path of SDWAN peer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.pathStatusCount.dead</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_peer[{#EDGE.ID}/{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-peer</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>08fb5b9cf8464e4382224515ba75953d</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Description</name><type>DEPENDENT</type><key>velocloud.sdwanpeer.description[{#EDGE.ID}/{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>Description of SDWAN peer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.description</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>12h</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_peer[{#EDGE.ID}/{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-peer</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>ece78f083d55413ab82a33f03c0204ef</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Stable path</name><type>DEPENDENT</type><key>velocloud.sdwanpeer.stable_path[{#EDGE.ID}/{#ID}]</key><delay>0</delay><history>7d</history><description>Count of stable path of SDWAN peer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.pathStatusCount.stable</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_peer[{#EDGE.ID}/{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-peer</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>3884e4bf4e8a46508c04a6cd06ae1513</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Standby path</name><type>DEPENDENT</type><key>velocloud.sdwanpeer.standby_path[{#EDGE.ID}/{#ID}]</key><delay>0</delay><history>7d</history><description>Count of standby path of SDWAN peer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.pathStatusCount.standby</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_peer[{#EDGE.ID}/{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-peer</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>39389b7b594e4b5da678ff985da0ba2a</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Total path</name><type>DEPENDENT</type><key>velocloud.sdwanpeer.total_path[{#EDGE.ID}/{#ID}]</key><delay>0</delay><history>7d</history><description>Count of total path of SDWAN peer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.pathStatusCount.total</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_peer[{#EDGE.ID}/{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-peer</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>474e118fa98340f68c73f4ddc5f54f5e</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Unknown path</name><type>DEPENDENT</type><key>velocloud.sdwanpeer.unknown_path[{#EDGE.ID}/{#ID}]</key><delay>0</delay><history>7d</history><description>Count of unknown path of SDWAN peer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.pathStatusCount.unknown</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_peer[{#EDGE.ID}/{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-peer</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>4e93b5e2f88747b093aba97d94d433f2</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: Unstable path</name><type>DEPENDENT</type><key>velocloud.sdwanpeer.unstable_path[{#EDGE.ID}/{#ID}]</key><delay>0</delay><history>7d</history><description>Count of unstable path of SDWAN peer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.pathStatusCount.unstable</parameter></parameters></step></preprocessing><master_item><key>velocloud.get.sdwan_peer[{#EDGE.ID}/{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sdwan-peer</value></tag><tag><tag>edge</tag><value>{#EDGE}</value></tag><tag><tag>name</tag><value>{#NAME}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>36438b5369794ea8a9147ec7675bc1a6</uuid><name>SDWAN Peer [{#NAME}]:[{#TYPE}]: {#EDGE.ID}: Path overview</name><graph_items><graph_item><color>1A7C11</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.sdwanpeer.stable_path[{#EDGE.ID}/{#ID}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.sdwanpeer.dead_path[{#EDGE.ID}/{#ID}]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.sdwanpeer.standby_path[{#EDGE.ID}/{#ID}]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.sdwanpeer.unknown_path[{#EDGE.ID}/{#ID}]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>VMWare SD-WAN VeloCloud by HTTP</host><key>velocloud.sdwanpeer.unstable_path[{#EDGE.ID}/{#ID}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>velocloud.get.clear_metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#EDGE.ID}</lld_macro><path>$.edgeId</path></lld_macro_path><lld_macro_path><lld_macro>{#EDGE}</lld_macro><path>$.edgeName</path></lld_macro_path><lld_macro_path><lld_macro>{#ID}</lld_macro><path>$.deviceLogicalId</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.peerName</path></lld_macro_path><lld_macro_path><lld_macro>{#TYPE}</lld_macro><path>$.peerType</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.edgeSDWan</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>network</value></tag><tag><tag>target</tag><value>vmware-sd-wan-velocloud</value></tag></tags><macros><macro><macro>{$VELOCLOUD.LLD.EDGES.FILTER.MATCHES}</macro><value>.*</value><description>Filter for discoverable edges.</description></macro><macro><macro>{$VELOCLOUD.LLD.EDGES.FILTER.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter to exclude discovered edges.</description></macro><macro><macro>{$VELOCLOUD.LLD.GATEWAYS.FILTER.MATCHES}</macro><value>.*</value><description>Filter for discoverable gateways.</description></macro><macro><macro>{$VELOCLOUD.LLD.GATEWAYS.FILTER.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter to exclude discovered gateways.</description></macro><macro><macro>{$VELOCLOUD.LLD.LINKS.FILTER.MATCHES}</macro><value>.*</value><description>Filter for discoverable links.</description></macro><macro><macro>{$VELOCLOUD.LLD.LINKS.FILTER.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter to exclude discovered links.</description></macro><macro><macro>{$VELOCLOUD.TOKEN}</macro><description>VMware SD-WAN Orchestrator API Token.</description></macro><macro><macro>{$VELOCLOUD.URL}</macro><description>VMware SD-WAN Orchestrator URL. e.g vco.velocloud.net.</description></macro></macros><valuemaps><valuemap><uuid>6ac13cd1206145919ae7c9776ef5e76b</uuid><name>Edge activation state</name><mappings><mapping><value>0</value><newvalue>PENDING</newvalue></mapping><mapping><value>1</value><newvalue>ACTIVATED</newvalue></mapping><mapping><value>10</value><newvalue>UNKNOWN</newvalue></mapping></mappings></valuemap><valuemap><uuid>cd8d83dc329144d9925a5c52db95df96</uuid><name>Edge HA status</name><mappings><mapping><value>0</value><newvalue>UNCONFIGURED</newvalue></mapping><mapping><value>1</value><newvalue>READY</newvalue></mapping><mapping><value>2</value><newvalue>PENDING_INIT</newvalue></mapping><mapping><value>3</value><newvalue>FAILED</newvalue></mapping><mapping><value>10</value><newvalue>UNKNOWN</newvalue></mapping></mappings></valuemap><valuemap><uuid>87f150cd23e14448b35980b546dc2cd8</uuid><name>Edge states</name><mappings><mapping><value>0</value><newvalue>OFFLINE</newvalue></mapping><mapping><value>1</value><newvalue>CONNECTED</newvalue></mapping><mapping><value>2</value><newvalue>NEVER_ACTIVATED</newvalue></mapping><mapping><value>10</value><newvalue>UNKNOWN</newvalue></mapping></mappings></valuemap><valuemap><uuid>249b93828946422c9ef8870a915661ca</uuid><name>Link states</name><mappings><mapping><value>0</value><newvalue>UNSTABLE</newvalue></mapping><mapping><value>1</value><newvalue>STABLE</newvalue></mapping><mapping><value>2</value><newvalue>DISCONNECTED</newvalue></mapping><mapping><value>10</value><newvalue>UNKNOWN</newvalue></mapping></mappings></valuemap></valuemaps></template></templates></zabbix_export>
