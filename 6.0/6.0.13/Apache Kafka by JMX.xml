<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:49Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>2eb43a3c9666467683b9ce09d2bd26d7</uuid><template>Apache Kafka by JMX</template><name>Apache Kafka by JMX</name><description>Official JMX Template for Apache Kafka.
  The metrics are collected by JMX.
  You can set {$KAFKA.USER} and {$KAFKA.PASSWORD} macros in the template for using on the host level.


You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>cf096fad8b83431a968095ce8f5d3029</uuid><name>Kafka: Leader election per second</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Number of leader elections per second.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>controller</value></tag></tags></item><item><uuid>57efca0b4b1e4d1298d7cf77d8d04c98</uuid><name>Kafka: Unclean leader election per second</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Number of “unclean” elections per second.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>controller</value></tag></tags><triggers><trigger><uuid>d984a7834d7846f787ca6649bacebf7b</uuid><expression>last(/Apache Kafka by JMX/jmx[&quot;kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec&quot;,&quot;Count&quot;])&gt;0</expression><name>Kafka: Unclean leader election detected</name><priority>AVERAGE</priority><description>Unclean leader elections occur when there is no qualified partition leader among Kafka brokers. If Kafka is configured to allow an unclean leader election, a leader is chosen from the out-of-sync replicas, and any messages that were not synced prior to the loss of the former leader are lost forever. Essentially, unclean leader elections sacrifice consistency for availability.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>9b3ae38007db4fd5a4e0d3baf026b732</uuid><name>Kafka: Controller state on broker</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=KafkaController,name=ActiveControllerCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>One indicates that the broker is the controller for the cluster.</description><valuemap><name>Kafka controller state</name></valuemap><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>controller</value></tag></tags></item><item><uuid>765a10af1fa6444bbeaa7b1669e3c8b2</uuid><name>Kafka: Offline partitions count</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=KafkaController,name=OfflinePartitionsCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Number of partitions that don't have an active leader.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>controller</value></tag></tags><triggers><trigger><uuid>5eef377125814830be8167d4d74b0d05</uuid><expression>last(/Apache Kafka by JMX/jmx[&quot;kafka.controller:type=KafkaController,name=OfflinePartitionsCount&quot;,&quot;Value&quot;]) &gt; 0</expression><name>Kafka: One or more partitions have no leader</name><priority>WARNING</priority><description>Any partition without an active leader will be completely inaccessible, and both consumers and producers of that partition will be blocked until a leader becomes available.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>6f4b742f64a04254b607fd49fd7fbfa3</uuid><name>Kafka: Ineligible pending replica deletes</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=KafkaController,name=ReplicasIneligibleToDeleteCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of ineligible pending replica deletes.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>controller</value></tag></tags></item><item><uuid>77069f977a4b4277a13ef329c4cc810f</uuid><name>Kafka: Pending replica deletes</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=KafkaController,name=ReplicasToDeleteCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of pending replica deletes.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>controller</value></tag></tags></item><item><uuid>ddfd3ce0b846434fb4dddf391b956d6f</uuid><name>Kafka: Ineligible pending topic deletes</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=KafkaController,name=TopicsIneligibleToDeleteCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of ineligible pending topic deletes.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>controller</value></tag></tags></item><item><uuid>96c5cb8b0647481e90e0878c8bbc4d4b</uuid><name>Kafka: Pending topic deletes</name><type>JMX</type><key>jmx[&quot;kafka.controller:type=KafkaController,name=TopicsToDeleteCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of pending topic deletes.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>controller</value></tag></tags></item><item><uuid>c11c8666c0ba4f03b8ba15573b7a6ffd</uuid><name>Kafka: Offline log directory count</name><type>JMX</type><key>jmx[&quot;kafka.log:type=LogManager,name=OfflineLogDirectoryCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of offline log directories (for example, after a hardware failure).</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>logmanager</value></tag></tags><triggers><trigger><uuid>03fa9ceadba34643b4d3baa7be7c6bb7</uuid><expression>last(/Apache Kafka by JMX/jmx[&quot;kafka.log:type=LogManager,name=OfflineLogDirectoryCount&quot;,&quot;Value&quot;]) &gt; 0</expression><name>Kafka: There are offline log directories</name><priority>WARNING</priority><description>The offline log directory count metric indicate the number of log directories which are offline (due to a hardware failure for example) so that the broker cannot store incoming messages anymore.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>4fd9235510964af99e3c174c6a18773b</uuid><name>Kafka: Fetch-Consumer response send time, p95</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchConsumer&quot;,&quot;95thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The time taken, in milliseconds, to send the response for 95th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>3674bdbc6d7742399478a960c1a24647</uuid><name>Kafka: Fetch-Consumer response send time, p99</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchConsumer&quot;,&quot;99thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The time taken, in milliseconds, to send the response for 99th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>04dea48528bb4f56bfcbf93576ba328f</uuid><name>Kafka: Fetch-Consumer response send time, mean</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchConsumer&quot;,&quot;Mean&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Average time taken, in milliseconds, to send the response.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>57af4d4b76f548e897d9e66459928b40</uuid><name>Kafka: Fetch-Follower response send time, p95</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchFollower&quot;,&quot;95thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The time taken, in milliseconds, to send the response for 95th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>5222217c516a4ab9926afd9ddbe6bfdb</uuid><name>Kafka: Fetch-Follower response send time, p99</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchFollower&quot;,&quot;99thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The time taken, in milliseconds, to send the response for 99th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>b11586ce79e846b495ed15a112959685</uuid><name>Kafka: Fetch-Follower response send time, mean</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=FetchFollower&quot;,&quot;Mean&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Average time taken, in milliseconds, to send the response.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>410c2ecf84fa4f67a9d0b0ca69d77338</uuid><name>Kafka: Produce response send time, p95</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=Produce&quot;,&quot;95thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The time taken, in milliseconds, to send the response for 95th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>e5d7139fbd5a4688bba04d5837a21d3b</uuid><name>Kafka: Produce response send time, p99</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=Produce&quot;,&quot;99thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The time taken, in milliseconds, to send the response for 99th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>6e51118940ed4bd192774b8fa44aeb26</uuid><name>Kafka: Produce response send time, mean</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=ResponseSendTimeMs,request=Produce&quot;,&quot;Mean&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Average time taken, in milliseconds, to send the response.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>10cd80d9dd0e4b918138aa99dcd28b2a</uuid><name>Kafka: Temporary memory size in bytes (Fetch), max</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Fetch&quot;,&quot;Max&quot;]</key><history>7d</history><units>B</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The maximum of temporary memory used for converting message formats and decompressing messages.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>9034049c16424d81a22b0f0063657ed6</uuid><name>Kafka: Temporary memory size in bytes (Fetch), min</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Fetch&quot;,&quot;Mean&quot;]</key><history>7d</history><units>B</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The minimum of temporary memory used for converting message formats and decompressing messages.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>57a5c2d51b4f424baf34ab963eed45a4</uuid><name>Kafka: Temporary memory size in bytes (Produce), max</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Produce&quot;,&quot;Max&quot;]</key><history>7d</history><units>B</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The maximum of temporary memory used for converting message formats and decompressing messages.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>f28dcdf12db44b30a82b7a1bead52521</uuid><name>Kafka: Temporary memory size in bytes (Produce), avg</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Produce&quot;,&quot;Mean&quot;]</key><history>7d</history><units>B</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The amount of temporary memory used for converting message formats and decompressing messages.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>eddaa3dce4be472ba2133674c845a53f</uuid><name>Kafka: Temporary memory size in bytes (Produce), min</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Produce&quot;,&quot;Min&quot;]</key><history>7d</history><units>B</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The minimum of temporary memory used for converting message formats and decompressing messages.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>36b32cc516ce48859fda10b348564446</uuid><name>Kafka: Fetch-Consumer request total time, p95</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer&quot;,&quot;95thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Time in ms to serve the Fetch-Consumer request for 95th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>e08291248e4e42858303c27de441aa1b</uuid><name>Kafka: Fetch-Consumer request total time, p99</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer&quot;,&quot;99thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Time in ms to serve the specified Fetch-Consumer for 99th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>16c3eb799dca4ed7b167e1127406766e</uuid><name>Kafka: Fetch-Consumer request total time, mean</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer&quot;,&quot;Mean&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Average time in ms to serve the Fetch-Consumer request.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>01704212d78343c597f92fa151f3372a</uuid><name>Kafka: Fetch-Follower request total time, p95</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower&quot;,&quot;95thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Time in ms to serve the Fetch-Follower request for 95th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>c7d9215ee14a4d86b5ad38dbad26c247</uuid><name>Kafka: Fetch-Follower request total time, p99</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower&quot;,&quot;99thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Time in ms to serve the Fetch-Follower request for 99th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>487274528ec646afb5e04f6edd6619b5</uuid><name>Kafka: Fetch-Follower request total time, mean</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower&quot;,&quot;Mean&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Average time in ms to serve the Fetch-Follower request.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>3680508a52524de08819abc3d81056be</uuid><name>Kafka: Produce request total time, p95</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce&quot;,&quot;95thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Time in ms  to serve the Produce requests for 95th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>b59938aa9192429890367ca1dc2e74b7</uuid><name>Kafka: Produce request total time, p99</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce&quot;,&quot;99thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Time in ms  to serve the Produce requests for 99th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>5bcb9ecd5d77460fb25d2afa5173832b</uuid><name>Kafka: Produce request total time, mean</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce&quot;,&quot;Mean&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Average time in ms to serve the Produce request.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>230f713f85c748bd9d29d8d086fcc80a</uuid><name>Kafka: UpdateMetadata request total time, p95</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=UpdateMetadata&quot;,&quot;95thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Time for update metadata requests for 95th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>8e654055b20748a085178882d7b5bed9</uuid><name>Kafka: UpdateMetadata request total time, p99</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=UpdateMetadata&quot;,&quot;99thPercentile&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Time for update metadata requests for 99th percentile.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>c66e750dccd0461e82f8a3b5bd432333</uuid><name>Kafka: Fetch-Consumer request total time, mean</name><type>JMX</type><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=UpdateMetadata&quot;,&quot;Mean&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Average time for a request to update metadata.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>46a7230e12f8404c813e60fae1eaf91d</uuid><name>Kafka: Network processor average idle percent</name><type>JMX</type><key>jmx[&quot;kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent&quot;,&quot;Value&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>%</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The average percentage of time that the network processors are idle.</description><preprocessing><step><type>MULTIPLIER</type><parameters><parameter>100</parameter></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>network</value></tag></tags><triggers><trigger><uuid>39bfa825d88145d5a687ba07f6b5596e</uuid><expression>nodata(/Apache Kafka by JMX/jmx[&quot;kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent&quot;,&quot;Value&quot;],15m)=1</expression><name>Kafka: Failed to fetch info data</name><event_name>Kafka: Failed to fetch info data (or no data for 15m)</event_name><priority>WARNING</priority><description>Zabbix has not received data for items for the last 15 minutes</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger><trigger><uuid>91c95d4543ae436d986881e76f090aec</uuid><expression>max(/Apache Kafka by JMX/jmx[&quot;kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent&quot;,&quot;Value&quot;],15m)&lt;{$KAFKA.NET_PROC_AVG_IDLE.MIN.WARN}</expression><name>Kafka: Network processor average idle percent is too low</name><event_name>Kafka: Network processor average idle percent is too low (under {$KAFKA.NET_PROC_AVG_IDLE.MIN.WARN} for 15m)</event_name><priority>AVERAGE</priority><description>The network processor idle ratio metric indicates the percentage of time the network processor are not in use. The lower this number, the more loaded the broker is.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>deca38d699f44dea90961be921d096e4</uuid><name>Kafka: Uptime</name><type>JMX</type><key>jmx[&quot;kafka.server:type=app-info&quot;,&quot;start-time-ms&quot;]</key><history>7d</history><units>s</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Service uptime in seconds.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>return (Math.floor((Date.now()-Number(value))/1000))</parameter></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>system</value></tag></tags><triggers><trigger><uuid>b2fa6148a2b24fa6890b4078c235dcd8</uuid><expression>last(/Apache Kafka by JMX/jmx[&quot;kafka.server:type=app-info&quot;,&quot;start-time-ms&quot;])&lt;10m</expression><name>Kafka: has been restarted</name><event_name>Kafka: has been restarted (uptime &lt; 10m)</event_name><priority>INFO</priority><description>Uptime is less than 10 minutes</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>75bf053e436e4bb8bb2a94e86a0b194c</uuid><name>Kafka: Version</name><type>JMX</type><key>jmx[&quot;kafka.server:type=app-info&quot;,&quot;version&quot;]</key><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Current version of broker.</description><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>inventory</value></tag></tags><triggers><trigger><uuid>92ecd7eb1eae49d9886ecac7b8f2084a</uuid><expression>last(/Apache Kafka by JMX/jmx[&quot;kafka.server:type=app-info&quot;,&quot;version&quot;],#1)&lt;&gt;last(/Apache Kafka by JMX/jmx[&quot;kafka.server:type=app-info&quot;,&quot;version&quot;],#2) and length(last(/Apache Kafka by JMX/jmx[&quot;kafka.server:type=app-info&quot;,&quot;version&quot;]))&gt;0</expression><name>Kafka: Version has changed</name><event_name>Kafka: Version has changed (new version: {ITEM.VALUE})</event_name><priority>INFO</priority><description>Kafka version has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>47dcd92e0ca64833af8d8112b7c66731</uuid><name>Kafka: Bytes in per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The rate at which data sent from producers is consumed by the broker.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag></tags></item><item><uuid>d71ed49d3a1f4599b239105ab7435724</uuid><name>Kafka: Bytes out per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The rate at which data is fetched and read from the broker by consumers.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag></tags></item><item><uuid>15d9fe23872541f0bb3dd1ce33598a61</uuid><name>Kafka: Bytes rejected per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesRejectedPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The rate at which bytes rejected per second by the broker.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag></tags></item><item><uuid>2ce7bb5db0674cb1a9504c4d8af72a00</uuid><name>Kafka: Client fetch request failed per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=FailedFetchRequestsPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Number of client fetch request failures per second.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag></tags></item><item><uuid>a26150db6e464090910b837b69e6df8f</uuid><name>Kafka: Produce requests failed per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=FailedProduceRequestsPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Number of failed produce requests per second.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag></tags></item><item><uuid>28e488bbe6544d688e741b2ab0397275</uuid><name>Kafka: Messages in per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The rate at which individual messages are consumed by the broker.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag></tags></item><item><uuid>a3d88b98436040e494911b94ce72de8b</uuid><name>Kafka: Requests in producer purgatory</name><type>JMX</type><key>jmx[&quot;kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation=Fetch&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Number of requests waiting in producer purgatory.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>d68c2995725745a5b1f3f4507a5fe49c</uuid><name>Kafka: Requests in fetch purgatory</name><type>JMX</type><key>jmx[&quot;kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation=Produce&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Number of requests waiting in fetch purgatory.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>2e7433fbf07d415ea40251a29364264c</uuid><name>Kafka: Request handler average idle percent</name><type>JMX</type><key>jmx[&quot;kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent&quot;,&quot;OneMinuteRate&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>%</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Indicates the percentage of time that the request handler (IO) threads are not in use.</description><preprocessing><step><type>MULTIPLIER</type><parameters><parameter>100</parameter></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags><triggers><trigger><uuid>8f070e06520b4b299fcfffa952d318fc</uuid><expression>max(/Apache Kafka by JMX/jmx[&quot;kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent&quot;,&quot;OneMinuteRate&quot;],15m)&lt;{$KAFKA.REQUEST_HANDLER_AVG_IDLE.MIN.WARN}</expression><name>Kafka: Request handler average idle percent is too low</name><event_name>Kafka: Request handler average idle percent is too low (under {$KAFKA.REQUEST_HANDLER_AVG_IDLE.MIN.WARN} for 15m)</event_name><priority>AVERAGE</priority><description>The request handler idle ratio metric indicates the percentage of time the request handlers are not in use. The lower this number, the more loaded the broker is.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>fb83a988422c40b792e23b10a0f2ba64</uuid><name>Kafka: Replication maximum lag</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaFetcherManager,name=MaxLag,clientId=Replica&quot;,&quot;Value&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The maximum lag between the time that messages are received by the leader replica and by the follower replicas.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>replica</value></tag></tags></item><item><uuid>6125c4144c42452ea20c53c5365ad970</uuid><name>Kafka: ISR expands per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=IsrExpandsPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The rate at which the number of ISRs in the broker increases.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>replica</value></tag></tags></item><item><uuid>81eb0364269b40988404bd902ba409f4</uuid><name>Kafka: ISR shrink per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=IsrShrinksPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Rate of replicas leaving the ISR pool.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>replica</value></tag></tags></item><item><uuid>9489608614ac4d96810362fc52901c55</uuid><name>Kafka: Leader count</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=LeaderCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of replicas for which this broker is the leader.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>replica</value></tag></tags></item><item><uuid>1a737ce50a274c3696beade89187afd1</uuid><name>Kafka: Partition count</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=PartitionCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of partitions in the broker.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>replica</value></tag></tags></item><item><uuid>05fb33b225264059a2eef04a91963dbb</uuid><name>Kafka: Number of reassigning partitions</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=ReassigningPartitions&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of reassigning leader partitions on a broker.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>replica</value></tag></tags></item><item><uuid>b22cee3e3aa849a1b5098e18f42b3b3d</uuid><name>Kafka: Under minimum ISR partition count</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=UnderMinIsrPartitionCount&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of partitions under the minimum In-Sync Replica (ISR) count.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>replica</value></tag></tags><triggers><trigger><uuid>b401a90e75cd4a478d4f8b8cc4f15dc2</uuid><expression>last(/Apache Kafka by JMX/jmx[&quot;kafka.server:type=ReplicaManager,name=UnderMinIsrPartitionCount&quot;,&quot;Value&quot;])&gt;0</expression><name>Kafka: There are partitions under the min ISR</name><priority>AVERAGE</priority><description>The Under min ISR partitions metric displays the number of partitions, where the number of In-Sync Replicas (ISR) is less than the minimum number of in-sync replicas specified. The two most common causes of under-min ISR partitions are that one or more brokers is unresponsive, or the cluster is experiencing performance issues and one or more brokers are falling behind.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>f55e42503d7d4091bd4487a30bb144b9</uuid><name>Kafka: Under replicated partitions</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions&quot;,&quot;Value&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The number of partitions that have not been fully replicated in the follower replicas (the number of non-reassigning replicas - the number of ISR &gt; 0).</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>replica</value></tag></tags><triggers><trigger><uuid>0ecd8b4b3db6489b83d4a1f78faee03c</uuid><expression>last(/Apache Kafka by JMX/jmx[&quot;kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions&quot;,&quot;Value&quot;])&gt;0</expression><name>Kafka: There are under replicated partitions</name><priority>AVERAGE</priority><description>The Under replicated partitions metric displays the number of partitions that do not have enough replicas to meet the desired replication factor. A partition will also be considered under-replicated if the correct number of replicas exist, but one or more of the replicas have fallen significantly behind the partition leader. The two most common causes of under-replicated partitions are that one or more brokers is unresponsive, or the cluster is experiencing performance issues and one or more brokers have fallen behind.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>c2086b19fcf84c1f948ec80726054dcd</uuid><name>Kafka: Request queue size</name><type>JMX</type><key>jmx[&quot;kafka.server:type=Request&quot;,&quot;queue-size&quot;]</key><history>7d</history><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The size of the delay queue.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>request</value></tag></tags></item><item><uuid>e96464452c844cb7bdeaab62f7c7e5ed</uuid><name>Kafka: ZooKeeper connection status</name><type>JMX</type><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=SessionState&quot;,&quot;Value&quot;]</key><history>7d</history><trends>0</trends><value_type>CHAR</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Connection status of broker's ZooKeeper session.</description><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>component</tag><value>zookeeper</value></tag></tags><triggers><trigger><uuid>423144ac14694a71b9ab563eacfa840d</uuid><expression>find(/Apache Kafka by JMX/jmx[&quot;kafka.server:type=SessionExpireListener,name=SessionState&quot;,&quot;Value&quot;],,&quot;regexp&quot;,&quot;CONNECTED&quot;)=0</expression><name>Kafka: Broker is not connected to ZooKeeper</name><priority>AVERAGE</priority><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>9852aa0bf3074a319b83f695a9d0deca</uuid><name>Kafka: ZooKeeper disconnect rate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=ZooKeeperDisconnectsPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>rps</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>ZooKeeper client disconnect per second.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>zookeeper</value></tag></tags></item><item><uuid>3e612950b2c5476e9634ce11f93dfd61</uuid><name>Kafka: ZooKeeper session expiration rate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=ZooKeeperExpiresPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>rps</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>ZooKeeper client session expiration per second.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>zookeeper</value></tag></tags></item><item><uuid>e9f647cf41214ef7aab480d349f48c21</uuid><name>Kafka: ZooKeeper readonly rate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=ZooKeeperReadOnlyConnectsPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>rps</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>ZooKeeper client readonly per second.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>zookeeper</value></tag></tags></item><item><uuid>b156305285bf4d508afd1d9c91ae34c0</uuid><name>Kafka: ZooKeeper sync rate</name><type>JMX</type><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=ZooKeeperSyncConnectsPerSec&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>rps</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>ZooKeeper client sync per second.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>zookeeper</value></tag></tags></item><item><uuid>3b6de5f72ed94b928684083fbb65b6cb</uuid><name>Kafka: ZooKeeper client request latency</name><type>JMX</type><key>jmx[&quot;kafka.server:type=ZooKeeperClientMetrics,name=ZooKeeperRequestLatencyMs&quot;,&quot;Count&quot;]</key><history>7d</history><units>ms</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Latency in milliseconds for ZooKeeper requests from broker.</description><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>zookeeper</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>c4421eb9f9ab4bf2b6d4ba101c897ca7</uuid><name>Topic Metrics (read)</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic=*&quot;]</key><delay>1h</delay><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><filter><evaltype>AND</evaltype><conditions><condition><macro>{#JMXTOPIC}</macro><value>{$KAFKA.TOPIC.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#JMXTOPIC}</macro><value>{$KAFKA.TOPIC.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><item_prototypes><item_prototype><uuid>42ad85334b524973afa2fd8f2a135e77</uuid><name>Kafka {#JMXTOPIC}: Bytes out per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic={#JMXTOPIC}&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The rate at which data is fetched and read from the broker by consumers (by topic).</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag><tag><tag>component</tag><value>topic</value></tag><tag><tag>topic</tag><value>{#JMXTOPIC}</value></tag></tags></item_prototype></item_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule><discovery_rule><uuid>82037c202489462fa9c4afbb23618315</uuid><name>Topic Metrics (errors)</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.server:type=BrokerTopicMetrics,name=BytesRejectedPerSec,topic=*&quot;]</key><delay>1h</delay><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><filter><evaltype>AND</evaltype><conditions><condition><macro>{#JMXTOPIC}</macro><value>{$KAFKA.TOPIC.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#JMXTOPIC}</macro><value>{$KAFKA.TOPIC.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><item_prototypes><item_prototype><uuid>abaf2616581a46158a13a71ffcf67634</uuid><name>Kafka {#JMXTOPIC}: Bytes rejected per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesRejectedPerSec,topic={#JMXTOPIC}&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>Rejected bytes rate by topic.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag><tag><tag>component</tag><value>topic</value></tag><tag><tag>topic</tag><value>{#JMXTOPIC}</value></tag></tags></item_prototype></item_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule><discovery_rule><uuid>d5ec81baadad41f29882757979443b5b</uuid><name>Topic Metrics (write)</name><type>JMX</type><key>jmx.discovery[beans,&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic=*&quot;]</key><delay>1h</delay><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><filter><evaltype>AND</evaltype><conditions><condition><macro>{#JMXTOPIC}</macro><value>{$KAFKA.TOPIC.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#JMXTOPIC}</macro><value>{$KAFKA.TOPIC.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><item_prototypes><item_prototype><uuid>61bb29999ea1465c8125b518507d9e5d</uuid><name>Kafka {#JMXTOPIC}: Bytes in per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic={#JMXTOPIC}&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The rate at which data sent from producers is consumed by topic.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag><tag><tag>component</tag><value>topic</value></tag><tag><tag>topic</tag><value>{#JMXTOPIC}</value></tag></tags></item_prototype><item_prototype><uuid>5c18b5eca61b4ed2ae1aae197b7c9958</uuid><name>Kafka {#JMXTOPIC}: Messages in per second</name><type>JMX</type><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic={#JMXTOPIC}&quot;,&quot;Count&quot;]</key><history>7d</history><value_type>FLOAT</value_type><username>{$KAFKA.USER}</username><password>{$KAFKA.PASSWORD}</password><description>The rate at which individual messages are consumed by topic.</description><preprocessing><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint><tags><tag><tag>component</tag><value>broker</value></tag><tag><tag>component</tag><value>topic</value></tag><tag><tag>topic</tag><value>{#JMXTOPIC}</value></tag></tags></item_prototype></item_prototypes><jmx_endpoint>service:jmx:rmi:///jndi/rmi://{HOST.CONN}:{HOST.PORT}/jmxrmi</jmx_endpoint></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>application</value></tag><tag><tag>target</tag><value>apache-kafka</value></tag></tags><macros><macro><macro>{$KAFKA.NET_PROC_AVG_IDLE.MIN.WARN}</macro><value>30</value><description>The minimum Network processor average idle percent for trigger expression.</description></macro><macro><macro>{$KAFKA.PASSWORD}</macro><value>zabbix</value></macro><macro><macro>{$KAFKA.REQUEST_HANDLER_AVG_IDLE.MIN.WARN}</macro><value>30</value><description>The minimum Request handler average idle percent for trigger expression.</description></macro><macro><macro>{$KAFKA.TOPIC.MATCHES}</macro><value>.*</value><description>Filter of discoverable topics</description></macro><macro><macro>{$KAFKA.TOPIC.NOT_MATCHES}</macro><value>__consumer_offsets</value><description>Filter to exclude discovered topics</description></macro><macro><macro>{$KAFKA.USER}</macro><value>zabbix</value></macro></macros><valuemaps><valuemap><uuid>cf2440fb69c24371b231cb0a69002333</uuid><name>Kafka controller state</name><mappings><mapping><value>0</value><newvalue>Inactive</newvalue></mapping><mapping><value>1</value><newvalue>Active</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><graphs><graph><uuid>0371c1e9aa924fb89bffa87c26e88481</uuid><name>Kafka: Broker throughput</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>7a7ce78d88bc483ca07efb5c4e639c1f</uuid><name>Kafka: ISR shrinks/expands rate</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=ReplicaManager,name=IsrShrinksPerSec&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=ReplicaManager,name=IsrExpandsPerSec&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>bd0b892058df48d5939f2ab9de9c2768</uuid><name>Kafka: Leader election rate</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>de66fc0c0dc44fbca5fa44f9cd4716ff</uuid><name>Kafka: Pending deletes</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.controller:type=KafkaController,name=TopicsIneligibleToDeleteCount&quot;,&quot;Value&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.controller:type=KafkaController,name=TopicsToDeleteCount&quot;,&quot;Value&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.controller:type=KafkaController,name=ReplicasIneligibleToDeleteCount&quot;,&quot;Value&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.controller:type=KafkaController,name=ReplicasToDeleteCount&quot;,&quot;Value&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>451bd85a6db249f1a43ac38d4361f925</uuid><name>Kafka: Purgatory size</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation=Fetch&quot;,&quot;Value&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=DelayedOperationPurgatory,name=PurgatorySize,delayedOperation=Produce&quot;,&quot;Value&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>aaef8edde7e34c33acad4e0820991bd6</uuid><name>Kafka: Requests failed rate</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=FailedFetchRequestsPerSec&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=BrokerTopicMetrics,name=FailedProduceRequestsPerSec&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>35b4211374b74b68aceec66cc875816d</uuid><name>Kafka: Requests performance</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=UpdateMetadata&quot;,&quot;95thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>BOLD_LINE</drawtype><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=UpdateMetadata&quot;,&quot;99thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=UpdateMetadata&quot;,&quot;Mean&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce&quot;,&quot;95thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>4</sortorder><drawtype>BOLD_LINE</drawtype><color>FC6EA3</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce&quot;,&quot;99thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce&quot;,&quot;Mean&quot;]</key></item></graph_item><graph_item><sortorder>6</sortorder><color>AC8C14</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer&quot;,&quot;95thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>7</sortorder><drawtype>BOLD_LINE</drawtype><color>611F27</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer&quot;,&quot;99thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>8</sortorder><color>F230E0</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer&quot;,&quot;Mean&quot;]</key></item></graph_item><graph_item><sortorder>9</sortorder><color>FFAD40</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower&quot;,&quot;95thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>10</sortorder><drawtype>BOLD_LINE</drawtype><color>40CDFF</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower&quot;,&quot;99thPercentile&quot;]</key></item></graph_item><graph_item><sortorder>11</sortorder><color>40FFA0</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower&quot;,&quot;Mean&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>3b531111e8194edd87d497b9fee7084c</uuid><name>Kafka: Temporary memory size</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Produce&quot;,&quot;Min&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>BOLD_LINE</drawtype><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Produce&quot;,&quot;Mean&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Produce&quot;,&quot;Max&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Fetch&quot;,&quot;Mean&quot;]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.network:type=RequestMetrics,name=TemporaryMemoryBytes,request=Fetch&quot;,&quot;Max&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>e5f69b35415b49168fba4ffa10e75f25</uuid><name>Kafka: ZooKeeper connections rate</name><graph_items><graph_item><color>1A7C11</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=ZooKeeperReadOnlyConnectsPerSec&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=ZooKeeperSyncConnectsPerSec&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=ZooKeeperExpiresPerSec&quot;,&quot;Count&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>Apache Kafka by JMX</host><key>jmx[&quot;kafka.server:type=SessionExpireListener,name=ZooKeeperDisconnectsPerSec&quot;,&quot;Count&quot;]</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
