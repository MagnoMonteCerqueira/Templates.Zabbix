<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:43Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>8c8474148c2a4eaeabe5a9331ea99d77</uuid><template>RabbitMQ cluster by HTTP</template><name>RabbitMQ cluster by HTTP</name><description>Get cluster metrics from RabbitMQ management plugin provided an HTTP-based API using HTTP agent.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387226-discussion-thread-for-official-zabbix-template-rabbitmq

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>dd74265fcc2d48e2b160e749706c9a6c</uuid><name>RabbitMQ: Get exchanges</name><type>HTTP_AGENT</type><key>rabbitmq.get_exchanges</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><authtype>BASIC</authtype><username>{$RABBITMQ.API.USER}</username><password>{$RABBITMQ.API.PASSWORD}</password><description>The HTTP API endpoint that returns exchanges metrics</description><url>{$RABBITMQ.API.SCHEME}://{HOST.CONN}:{$RABBITMQ.API.PORT}/api/exchanges</url><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>c0d7c1940dea4cd4a01a94b9629db3ce</uuid><name>RabbitMQ: Get overview</name><type>HTTP_AGENT</type><key>rabbitmq.get_overview</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><authtype>BASIC</authtype><username>{$RABBITMQ.API.USER}</username><password>{$RABBITMQ.API.PASSWORD}</password><description>The HTTP API endpoint that returns cluster-wide metrics</description><url>{$RABBITMQ.API.SCHEME}://{HOST.CONN}:{$RABBITMQ.API.PORT}/api/overview</url><tags><tag><tag>component</tag><value>raw</value></tag></tags><triggers><trigger><uuid>ae7f1953f9b94c9c907d7bd7627d389d</uuid><expression>nodata(/RabbitMQ cluster by HTTP/rabbitmq.get_overview,30m)=1</expression><name>RabbitMQ: Failed to fetch overview data</name><event_name>RabbitMQ: Failed to fetch overview data (or no data for 30m)</event_name><priority>WARNING</priority><description>Zabbix has not received data for items for the last 30 minutes</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>94ffc83030e84d93a2bcafc9fc1b307b</uuid><name>RabbitMQ: Messages acknowledged</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.ack</key><delay>0</delay><history>7d</history><description>Number of messages delivered to clients and acknowledged</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.ack</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>b7c9ca566af64e62bc450752d5cd7777</uuid><name>RabbitMQ: Messages acknowledged per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.ack.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages delivered to clients and acknowledged per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.ack_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>5f2ae9a4ca0643c6b3d3e7b1ed36f3e4</uuid><name>RabbitMQ: Messages confirmed</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.confirm</key><delay>0</delay><history>7d</history><description>Count of messages confirmed</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.confirm</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>302caaded1ec40a984c13c3eab6f7509</uuid><name>RabbitMQ: Messages confirmed per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.confirm.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages confirmed per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.confirm_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>fa4dcdd9a76c47fb8b3e0e238077f591</uuid><name>RabbitMQ: Messages delivered</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.deliver_get</key><delay>0</delay><history>7d</history><description>Sum of messages delivered in acknowledgement mode to consumers, in no-acknowledgement mode to consumers, in acknowledgement mode in response to basic.get, and in no-acknowledgement mode in response to basic.get</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.deliver_get</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>483b3ccd192a4f7a8142da5fc3303d63</uuid><name>RabbitMQ: Messages delivered per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.deliver_get.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate per second of the sum of messages delivered in acknowledgement mode to consumers, in no-acknowledgement mode to consumers, in acknowledgement mode in response to basic.get, and in no-acknowledgement mode in response to basic.get</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.deliver_get_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>af401642e23241f38b453ce65439a3fb</uuid><name>RabbitMQ: Messages published</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish</key><delay>0</delay><history>7d</history><description>Count of messages published</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>e386d202d87c442c94ea6151af8f1c45</uuid><name>RabbitMQ: Messages published per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>ebe18f0f04fe4c098283cfeab6ebb716</uuid><name>RabbitMQ: Messages publish_in</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish_in</key><delay>0</delay><history>7d</history><description>Count of messages published from channels into this overview</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_in</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>8078d1269b0f4650b2a2c8d0f7de8bfd</uuid><name>RabbitMQ: Messages publish_in per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish_in.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published from channels into this overview per sec</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_in_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>8d5523cd5120462f903af9b67e2abb10</uuid><name>RabbitMQ: Messages publish_out</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish_out</key><delay>0</delay><history>7d</history><description>Count of messages published from this overview into queues</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_out</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>c1a7ca5a475449b4b4d916693acd515b</uuid><name>RabbitMQ: Messages publish_out per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish_out.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published from this overview into queues per second,0,rabbitmq,total msgs pub out rate</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_out_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>6c0d428069a84443affba5b1a7f886bc</uuid><name>RabbitMQ: Messages returned redeliver</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.redeliver</key><delay>0</delay><history>7d</history><description>Count of subset of messages in deliver_get which had the redelivered flag set</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.redeliver</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>7d239c3cb6604521b1291bce0dbdf10c</uuid><name>RabbitMQ: Messages returned redeliver per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.redeliver.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of subset of messages in deliver_get which had the redelivered flag set per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.redeliver_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>70ab0718b7784a8280c99b6af21d909a</uuid><name>RabbitMQ: Messages returned unroutable</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.return_unroutable</key><delay>0</delay><history>7d</history><description>Count of messages returned to publisher as unroutable</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.return_unroutable</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>e2983b5d27294b92b658070e0ef0a2ca</uuid><name>RabbitMQ: Messages returned unroutable per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.return_unroutable.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages returned to publisher as unroutable per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.return_unroutable_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>787ea966afd741b99bbdce665aebf15a</uuid><name>RabbitMQ: Channels total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.channels</key><delay>0</delay><history>7d</history><description>Total number of channels</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.channels</parameter></parameters></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>channels</value></tag></tags></item><item><uuid>3b488cdb79ac4b95abe55ddec9f74dd1</uuid><name>RabbitMQ: Connections total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.connections</key><delay>0</delay><history>7d</history><description>Total number of connections</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.connections</parameter></parameters></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>4b02b27b8091430eb80e6451935848d8</uuid><name>RabbitMQ: Consumers total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.consumers</key><delay>0</delay><history>7d</history><description>Total number of consumers</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.consumers</parameter></parameters></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>consumers</value></tag></tags></item><item><uuid>1b98a03a243c4b698faa93228cb9cfb0</uuid><name>RabbitMQ: Exchanges total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.exchanges</key><delay>0</delay><history>7d</history><description>Total number of exchanges</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.exchanges</parameter></parameters></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>exchanges</value></tag></tags></item><item><uuid>011491d6f5954cf3bf37ee45a62a4d86</uuid><name>RabbitMQ: Queues total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.queues</key><delay>0</delay><history>7d</history><description>Total number of queues</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.queues</parameter></parameters></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>queues</value></tag></tags></item><item><uuid>c9bc0b0a61be4412bfc31cb725bbe837</uuid><name>RabbitMQ: Messages total</name><type>DEPENDENT</type><key>rabbitmq.overview.queue_totals.messages</key><delay>0</delay><history>7d</history><description>Total number of messages (ready plus unacknowledged)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.queue_totals.messages</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>7c7e5c4111ff464b913a43b59fcb2e9b</uuid><name>RabbitMQ: Messages ready for delivery</name><type>DEPENDENT</type><key>rabbitmq.overview.queue_totals.messages.ready</key><delay>0</delay><history>7d</history><description>Number of messages ready for deliver</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.queue_totals.messages_ready</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>3403648d6b964edd8c390e2c175b068a</uuid><name>RabbitMQ: Messages unacknowledged</name><type>DEPENDENT</type><key>rabbitmq.overview.queue_totals.messages.unacknowledged</key><delay>0</delay><history>7d</history><description>Number of unacknowledged messages</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.queue_totals.messages_unacknowledged</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_overview</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>689cf8096c0c49099e2b56c5b639d3c6</uuid><name>Exchanges discovery</name><type>DEPENDENT</type><key>rabbitmq.exchanges.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#EXCHANGE}</macro><value>{$RABBITMQ.LLD.FILTER.EXCHANGE.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#EXCHANGE}</macro><value>{$RABBITMQ.LLD.FILTER.EXCHANGE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Individual exchange metrics</description><item_prototypes><item_prototype><uuid>d8cdcef7ad324aebb597e9d2cd32bdf2</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages acknowledged per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.ack.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages delivered to clients and acknowledged per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.ack_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>fd3d7de712d84721a09248670a7504f1</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages acknowledged</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.ack[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Number of messages delivered to clients and acknowledged</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.ack</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>bc57ae1a1c1d4e9c96a268906d88dbf8</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages confirmed per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.confirm.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages confirmed per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.confirm_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>8fac23c225d449b3a01d495b52131f5c</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages confirmed</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.confirm[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages confirmed</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.confirm</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>18916e7d0fce41d698f57f0f1be5dab1</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages delivered per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.deliver_get.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate per second of the sum of messages delivered in acknowledgement mode to consumers, in no-acknowledgement mode to consumers, in acknowledgement mode in response to basic.get, and in no-acknowledgement mode in response to basic.get</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.deliver_get_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>b86cc017bbb247b79e5b0522cf895d33</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages delivered</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.deliver_get[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Sum of messages delivered in acknowledgement mode to consumers, in no-acknowledgement mode to consumers, in acknowledgement mode in response to basic.get, and in no-acknowledgement mode in response to basic.get</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.deliver_get</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>a4a890d6cbdc40528dee488d8649343d</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages published per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>24515b4712014fbeb857592664624be3</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages published</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages published</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>d7ecda9c49ee479481b0b96d92113064</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_in per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish_in.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published from channels into this overview per sec</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_in_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>02ebc8dacc0b44cd81bd9a83394359ff</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_in</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish_in[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages published from channels into this overview</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_in</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>46a5efc69f2e4928b5744b5ea0cd6ae3</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_out per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish_out.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published from this overview into queues per second,0,rabbitmq,total msgs pub out rate</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_out_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>c83921ac67074e169e247dc3392213cf</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_out</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish_out[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages published from this overview into queues</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_out</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>64bc6c65cc2f46b1841bd9852020bf44</uuid><name>RabbitMQ: Exchange {#VHOST}/{#EXCHANGE}/{#TYPE}: Messages redelivered per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.redeliver.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of subset of messages in deliver_get which had the redelivered flag set per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.redeliver_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>3203320d008d484d917827f93b213725</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages redelivered</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.redeliver[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of subset of messages in deliver_get which had the redelivered flag set</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.redeliver</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>1aad46c39cc347f59ed953aa6bc23fbe</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages returned unroutable per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.return_unroutable.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages returned to publisher as unroutable per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.return_unroutable_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>caaaf925f72e42d2b3112098bd05b3d1</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages returned unroutable</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.return_unroutable[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages returned to publisher as unroutable</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.return_unroutable</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>54ec0943af1b4c0c807bcc222f5d70c7</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Get data</name><type>DEPENDENT</type><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>The HTTP API endpoint that returns [{#VHOST}][{#EXCHANGE}][{#TYPE}] exchanges metrics</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;{#EXCHANGE}&quot; &amp;&amp; @.vhost == &quot;{#VHOST}&quot; &amp;&amp; @.type ==&quot;{#TYPE}&quot;)].first()</parameter></parameters></step></preprocessing><master_item><key>rabbitmq.get_exchanges</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype></item_prototypes><master_item><key>rabbitmq.get_exchanges</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#EXCHANGE}</lld_macro><path>$.name</path></lld_macro_path><lld_macro_path><lld_macro>{#TYPE}</lld_macro><path>$.type</path></lld_macro_path><lld_macro_path><lld_macro>{#VHOST}</lld_macro><path>$.vhost</path></lld_macro_path></lld_macro_paths></discovery_rule><discovery_rule><uuid>8655f85b65cc4eb0a0470db45ca1c963</uuid><name>Health Check 3.8.10+ discovery</name><type>DEPENDENT</type><key>rabbitmq.healthcheck.v3810.discovery</key><delay>0</delay><description>Version 3.8.10+ specific metrics</description><item_prototypes><item_prototype><uuid>90db70de99454f7b924d84174a5951fb</uuid><name>RabbitMQ: Healthcheck: alarms in effect in the cluster{#SINGLETON}</name><type>HTTP_AGENT</type><key>rabbitmq.healthcheck.alarms[{#SINGLETON}]</key><history>7d</history><authtype>BASIC</authtype><username>{$RABBITMQ.API.USER}</username><password>{$RABBITMQ.API.PASSWORD}</password><description>Responds a 200 OK if there are no alarms in effect in the cluster, otherwise responds with a 503 Service Unavailable.</description><valuemap><name>RabbitMQ healthcheck</name></valuemap><preprocessing><step><type>REGEX</type><parameters><parameter>HTTP\/1\.1\b\s(\d+)</parameter><parameter>\1</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>switch(value){ 
case '200': return 1 
case '503': return 0 
default: 2}</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><url>{$RABBITMQ.API.SCHEME}://{HOST.CONN}:{$RABBITMQ.API.PORT}/api/health/checks/alarms</url><status_codes>200,503,404</status_codes><retrieve_mode>HEADERS</retrieve_mode><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>component</tag><value>system</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>58592bb4d473497e9942634db2001823</uuid><expression>last(/RabbitMQ cluster by HTTP/rabbitmq.healthcheck.alarms[{#SINGLETON}])=0</expression><name>RabbitMQ: There are active alarms in the cluster</name><opdata>Current state: {ITEM.LASTVALUE1}</opdata><priority>AVERAGE</priority><description>http://{HOST.CONN}:{$RABBITMQ.API.PORT}/api/index.html</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><master_item><key>rabbitmq.get_overview</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.management_version</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>var rabbit_version = parseInt(value.split('.')[0]) * 10000 +
                     parseInt(value.split('.')[1]) * 100 +
                     parseInt(value.split('.')[2])
return JSON.stringify(rabbit_version &gt;= 30810 ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>software</value></tag><tag><tag>target</tag><value>rabbitmq</value></tag></tags><macros><macro><macro>{$RABBITMQ.API.PASSWORD}</macro><value>zabbix</value></macro><macro><macro>{$RABBITMQ.API.PORT}</macro><value>15672</value><description>The port of RabbitMQ API endpoint</description></macro><macro><macro>{$RABBITMQ.API.SCHEME}</macro><value>http</value><description>Request scheme which may be http or https</description></macro><macro><macro>{$RABBITMQ.API.USER}</macro><value>zbx_monitor</value></macro><macro><macro>{$RABBITMQ.LLD.FILTER.EXCHANGE.MATCHES}</macro><value>.*</value><description>Filter of discoverable exchanges</description></macro><macro><macro>{$RABBITMQ.LLD.FILTER.EXCHANGE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter to exclude discovered exchanges</description></macro></macros><dashboards><dashboard><uuid>1b64af348f284f74a1f7f03de1d55f7b</uuid><name>RabbitMQ overview</name><pages><page><widgets><widget><type>GRAPH_CLASSIC</type><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by HTTP</host><name>RabbitMQ: Messages</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><x>12</x><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by HTTP</host><name>RabbitMQ: Connections</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><y>5</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by HTTP</host><name>RabbitMQ: Messages status</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><x>12</x><y>5</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by HTTP</host><name>RabbitMQ: Queues</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><y>10</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by HTTP</host><name>RabbitMQ: Messages per second</name></value></field></fields></widget></widgets></page></pages></dashboard></dashboards><valuemaps><valuemap><uuid>3380e05a15774dad92e77c983448698b</uuid><name>RabbitMQ healthcheck</name><mappings><mapping><value>0</value><newvalue>Failed</newvalue></mapping><mapping><value>1</value><newvalue>Ok</newvalue></mapping><mapping><value>2</value><newvalue>Error</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><graphs><graph><uuid>2d72cf70b71a414680cc667c27141653</uuid><name>RabbitMQ: Connections</name><graph_items><graph_item><color>1A7C11</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.object_totals.connections</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.object_totals.channels</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.object_totals.consumers</key></item></graph_item></graph_items></graph><graph><uuid>6a66846adab54906800f80ac025b2003</uuid><name>RabbitMQ: Messages</name><graph_items><graph_item><color>1A7C11</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.queue_totals.messages</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.queue_totals.messages.ready</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.queue_totals.messages.unacknowledged</key></item></graph_item></graph_items></graph><graph><uuid>fe3139da95aa4fc7a7db4aac87c52c03</uuid><name>RabbitMQ: Messages per second</name><graph_items><graph_item><color>1A7C11</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.publish.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.ack.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.confirm.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.deliver_get.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.publish_in.rate</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.publish_out.rate</key></item></graph_item><graph_item><sortorder>6</sortorder><color>AC8C14</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.redeliver.rate</key></item></graph_item><graph_item><sortorder>7</sortorder><color>611F27</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.return_unroutable.rate</key></item></graph_item></graph_items></graph><graph><uuid>a4a33e6004f34a8cb2709aae632f456d</uuid><name>RabbitMQ: Messages status</name><graph_items><graph_item><color>1A7C11</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.publish</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.ack</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.confirm</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.deliver_get</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.publish_in</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.publish_out</key></item></graph_item><graph_item><sortorder>6</sortorder><color>AC8C14</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.redeliver</key></item></graph_item><graph_item><sortorder>7</sortorder><color>611F27</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.messages.return_unroutable</key></item></graph_item></graph_items></graph><graph><uuid>987d5621410d4dc6b66fb72e9aca2357</uuid><name>RabbitMQ: Queues</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>RabbitMQ cluster by HTTP</host><key>rabbitmq.overview.object_totals.queues</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
