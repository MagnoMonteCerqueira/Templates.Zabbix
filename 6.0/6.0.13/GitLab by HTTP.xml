<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:49Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>f445dac89ff74deabaae9dcb84815998</uuid><template>GitLab by HTTP</template><name>GitLab by HTTP</name><description>Get GitLab metrics by HTTP agent from Prometheus metrics endpoint.

To access the metrics, the client IP address must be explicitly allowed. See https://docs.gitlab.com/ee/administration/monitoring/ip_whitelist.html.
Or second method, using token variable from http://your.gitlab.address/admin/health_check (fill {$GITLAB.HEALTH.TOKEN} macro with variable path like &quot;?token=your_token&quot;).
Don't forget change macros {$GITLAB.URL}.
Some metrics may not be collected depending on your Gitlab instance version and configuration. See (Gitlab's documentation[)https://docs.gitlab.com/ee/administration/monitoring/prometheus/gitlab_metrics.html] for further information about its metric collection.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>43a26551b0a6460cac3c43138ec5fd33</uuid><name>GitLab: Cache: Misses rate, total</name><type>DEPENDENT</type><key>gitlab.cache.misses_total.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The cache read miss count.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_cache_misses_total&quot;)].value.sum()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag></tags></item><item><uuid>9c507412d4544a37bdad49ba47c48302</uuid><name>GitLab: Cache: Operations rate, total</name><type>DEPENDENT</type><key>gitlab.cache.operations_total.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The count of cache operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_cache_operations_total&quot;)].value.sum()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag></tags></item><item><uuid>2d46dc855ca741839cfe1a19e0dc892f</uuid><name>GitLab: Database: Connection pool, busy</name><type>DEPENDENT</type><key>gitlab.database.connection_pool_busy</key><delay>0</delay><history>7d</history><description>Connections to the main database in use where the owner is still alive.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_database_connection_pool_busy&quot; &amp;&amp; @.labels.class == &quot;ActiveRecord::Base&quot;)].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>database</value></tag></tags></item><item><uuid>6ee7a1d3ab20463d83602b751381d821</uuid><name>GitLab: Database: Connection pool, current</name><type>DEPENDENT</type><key>gitlab.database.connection_pool_connections</key><delay>0</delay><history>7d</history><description>Current connections to the main database in the pool.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_database_connection_pool_connections&quot; &amp;&amp; @.labels.class == &quot;ActiveRecord::Base&quot;)].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>database</value></tag></tags></item><item><uuid>561a1f54c98d4a2b828fe644961404be</uuid><name>GitLab: Database: Connection pool, dead</name><type>DEPENDENT</type><key>gitlab.database.connection_pool_dead</key><delay>0</delay><history>7d</history><description>Connections to the main database in use where the owner is not alive.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_database_connection_pool_dead&quot; &amp;&amp; @.labels.class == &quot;ActiveRecord::Base&quot;)].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>database</value></tag></tags></item><item><uuid>3a0b5c8de88b41fa9ebf6f3fca63833e</uuid><name>GitLab: Database: Connection pool, idle</name><type>DEPENDENT</type><key>gitlab.database.connection_pool_idle</key><delay>0</delay><history>7d</history><description>Connections to the main database not in use.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_database_connection_pool_idle&quot; &amp;&amp; @.labels.class == &quot;ActiveRecord::Base&quot;)].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>database</value></tag></tags></item><item><uuid>fd1458232de34981a9a00be820e123f1</uuid><name>GitLab: Database: Connection pool, size</name><type>DEPENDENT</type><key>gitlab.database.connection_pool_size</key><delay>0</delay><history>7d</history><description>Total connection to the main database pool capacity.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_database_connection_pool_size&quot; &amp;&amp; @.labels.class == &quot;ActiveRecord::Base&quot;)].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>database</value></tag></tags></item><item><uuid>501a2f646ced4207a32a24e900310440</uuid><name>GitLab: Database: Connection pool, waiting</name><type>DEPENDENT</type><key>gitlab.database.connection_pool_waiting</key><delay>0</delay><history>7d</history><description>Threads currently waiting on this queue.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_database_connection_pool_waiting&quot; &amp;&amp; @.labels.class == &quot;ActiveRecord::Base&quot;)].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>database</value></tag></tags></item><item><uuid>71a5f82d11914b12a86008bfd488fb1e</uuid><name>GitLab: Version</name><type>DEPENDENT</type><key>gitlab.deployments.version</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Version of the GitLab instance.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;deployments&quot;)].labels.version.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>88d7ceb3a683436da666e8802b2d29b5</uuid><expression>last(/GitLab by HTTP/gitlab.deployments.version,#1)&lt;&gt;last(/GitLab by HTTP/gitlab.deployments.version,#2) and length(last(/GitLab by HTTP/gitlab.deployments.version))&gt;0</expression><name>GitLab: Version has changed</name><event_name>GitLab: Version has changed (new version: {ITEM.VALUE})</event_name><priority>INFO</priority><description>The GitLab version has changed. Perform Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>3e409938aba24445a11012bcbf8aa113</uuid><name>GitLab: User CAPTCHA logins failed, total</name><type>DEPENDENT</type><key>gitlab.failed_login_captcha_total</key><delay>0</delay><history>7d</history><description>Counter of failed CAPTCHA attempts during login.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;failed_login_captcha_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag></tags></item><item><uuid>2aa509b84dc14026b8ff8ed473add2d2</uuid><name>GitLab: Get instance metrics</name><type>HTTP_AGENT</type><key>gitlab.get_metrics</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters></step><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter/></parameters></step></preprocessing><url>{$GITLAB.URL}/-/metrics{$GITLAB.HEALTH.TOKEN}</url><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>3ff4d9793af94d339ca225aaf9200554</uuid><name>GitLab: HTTP requests rate, 4xx</name><type>DEPENDENT</type><key>gitlab.http.requests.4xx.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of handle failures of requests with code 4XX.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_requests_total&quot; &amp;&amp; @.labels.status =~ '4..' )].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag><tag><tag>http-code</tag><value>4xx</value></tag></tags></item><item><uuid>d0fa18012d6a4b0ba6620b0ef6cb9aef</uuid><name>GitLab: HTTP requests rate, 5xx</name><type>DEPENDENT</type><key>gitlab.http.requests.5xx.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of handle failures of requests with HTTP-code 5xx.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_requests_total&quot; &amp;&amp; @.labels.status =~ '5..' )].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag><tag><tag>http-code</tag><value>5xx</value></tag></tags><triggers><trigger><uuid>7021e3b0b49a4990a1d8ce356b7ae130</uuid><expression>min(/GitLab by HTTP/gitlab.http.requests.5xx.rate,5m)&gt;{$GITLAB.HTTP.FAIL.MAX.WARN}</expression><name>GitLab: Too many HTTP requests failures</name><event_name>GitLab: Too many HTTP requests failures (over {$GITLAB.HTTP.FAIL.MAX.WARN} for 5m)'</event_name><priority>WARNING</priority><description>&quot;Too many requests failed on GitLab instance with 5xx HTTP code&quot;</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>2d739e4bedb24b50ab6adfdfdeb39da9</uuid><name>GitLab: HTTP requests rate, total</name><type>DEPENDENT</type><key>gitlab.http.requests.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of requests received into the system.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_requests_total&quot;)].value.sum()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag></tags></item><item><uuid>c48920e302ff4b9ab16f45b67775b440</uuid><name>GitLab: Application server status</name><type>HTTP_AGENT</type><key>gitlab.liveness</key><history>7d</history><description>Checks whether the application server is running. This probe is used to know if Rails Controllers are not deadlocked due to a multi-threading.</description><valuemap><name>GitLab healthcheck</name></valuemap><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>{&quot;status&quot;: &quot;failed&quot;}</error_handler_params></step><step><type>JSONPATH</type><parameters><parameter>$.status</parameter></parameters></step><step><type>BOOL_TO_DECIMAL</type><parameters><parameter/></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><url>{$GITLAB.URL}/-/liveness{$GITLAB.HEALTH.TOKEN}</url><tags><tag><tag>component</tag><value>health</value></tag></tags><triggers><trigger><uuid>2f1eb8d6c89a4d8cbda0e951d3f6a109</uuid><expression>last(/GitLab by HTTP/gitlab.liveness)=0</expression><name>GitLab: Liveness check was failed</name><priority>HIGH</priority><description>The application server is not running or Rails Controllers are deadlocked.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>7ef7142babfd4bc2b5b25be541c0511f</uuid><name>GitLab: Pipelines: Auto DevOps pipelines, total</name><type>DEPENDENT</type><key>gitlab.pipeline.auto_devops_completed.total</key><delay>0</delay><history>7d</history><description>Counter of completed Auto DevOps pipelines.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;auto_devops_pipelines_completed_total&quot;)].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>pipelines</value></tag></tags></item><item><uuid>0ffa0a5c108644508252a03469e4f394</uuid><name>GitLab: Pipelines: Auto DevOps pipelines, failed</name><type>DEPENDENT</type><key>gitlab.pipeline.auto_devops_completed_total.failed</key><delay>0</delay><history>7d</history><description>Counter of completed Auto DevOps pipelines with status &quot;failed&quot;.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;auto_devops_pipelines_completed_total&quot; &amp;&amp; @.labels.status == &quot;failed&quot;)].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>pipelines</value></tag></tags></item><item><uuid>f4265a3167a245c4998958106f6ee265</uuid><name>GitLab: Pipelines: Created, total</name><type>DEPENDENT</type><key>gitlab.pipeline.created_total</key><delay>0</delay><history>7d</history><description>Counter of pipelines created.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;pipelines_created_total&quot;)].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>pipelines</value></tag></tags></item><item><uuid>23cb22f8f81e461c86f72a92cdfde7a5</uuid><name>GitLab: Pipelines: CI/CD creation duration</name><type>DEPENDENT</type><key>gitlab.pipeline.pipeline_creation</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>The sum of the time in seconds it takes to create a CI/CD pipeline.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_ci_pipeline_creation_duration_seconds_sum&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>pipelines</value></tag></tags></item><item><uuid>91c3acbb82524244a1ac400587641ffa</uuid><name>GitLab: Pipelines: Pipelines: CI/CD creation count</name><type>DEPENDENT</type><key>gitlab.pipeline.pipeline_creation.count</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The count of the time it takes to create a CI/CD pipeline.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_ci_pipeline_creation_duration_seconds_count&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>pipelines</value></tag></tags></item><item><uuid>c80453c338814951a9e97d9f37e7d68f</uuid><name>GitLab: Pipelines: Processing events, total</name><type>DEPENDENT</type><key>gitlab.pipeline.processing_events_total</key><delay>0</delay><history>7d</history><description>Total amount of pipeline processing events.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_ci_pipeline_processing_events_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>pipelines</value></tag></tags></item><item><uuid>794a8d7f474d490c96e714dac810140d</uuid><name>GitLab: Instance readiness check</name><type>HTTP_AGENT</type><key>gitlab.readiness</key><history>7d</history><description>The readiness probe checks whether the GitLab instance is ready to accept traffic via Rails Controllers.</description><valuemap><name>GitLab healthcheck</name></valuemap><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>{&quot;master_check&quot;:[{&quot;status&quot;:&quot;failed&quot;}]}</error_handler_params></step><step><type>JSONPATH</type><parameters><parameter>$.master_check[0].status</parameter></parameters></step><step><type>BOOL_TO_DECIMAL</type><parameters><parameter/></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><url>{$GITLAB.URL}/-/readiness{$GITLAB.HEALTH.TOKEN}</url><tags><tag><tag>component</tag><value>health</value></tag></tags><triggers><trigger><uuid>11ff325698534dcd8bbaa12c86704069</uuid><expression>last(/GitLab by HTTP/gitlab.readiness)=0</expression><name>GitLab: Gitlab instance is not able to accept traffic</name><priority>HIGH</priority><dependencies><dependency><name>GitLab: Liveness check was failed</name><expression>last(/GitLab by HTTP/gitlab.liveness)=0</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>173b8d5e108f471fbf4c1267dcb9cc37</uuid><name>GitLab: Redis: Client exceptions rate, cache</name><type>DEPENDENT</type><key>gitlab.redis.client_exceptions.cache.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of Redis client exceptions per second. (Instance: cache)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_redis_client_exceptions_total&quot; &amp;&amp; @.labels.storage == &quot;cache&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>redis</value></tag></tags><triggers><trigger><uuid>a7e460f174fd4e16b2358fd3867390b4</uuid><expression>min(/GitLab by HTTP/gitlab.redis.client_exceptions.cache.rate,5m)&gt;{$GITLAB.REDIS.FAIL.MAX.WARN}</expression><name>GitLab: Too many Redis cache client exceptions</name><event_name>GitLab: Too many Redis cache client exceptions (over {$GITLAB.REDIS.FAIL.MAX.WARN} for 5m)</event_name><priority>WARNING</priority><description>&quot;Too many  Redis client exceptions during the requests to  Redis instance cache.&quot;</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>0bff591252dc4cc497527afb1f7d96b2</uuid><name>GitLab: Redis: Client exceptions rate, queues</name><type>DEPENDENT</type><key>gitlab.redis.client_exceptions.queues.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of Redis client exceptions per second. (Instance: queues)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_redis_client_exceptions_total&quot; &amp;&amp; @.labels.storage == &quot;queues&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>redis</value></tag></tags><triggers><trigger><uuid>36ec79901f324f27992ea68274eedb71</uuid><expression>min(/GitLab by HTTP/gitlab.redis.client_exceptions.queues.rate,5m)&gt;{$GITLAB.REDIS.FAIL.MAX.WARN}</expression><name>GitLab: Too many Redis queues client exceptions</name><event_name>GitLab: Too many Redis queues client exceptions (over {$GITLAB.REDIS.FAIL.MAX.WARN} for 5m)</event_name><priority>WARNING</priority><description>&quot;Too many  Redis client exceptions during the requests to  Redis instance queues.&quot;</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>800b429ea1d044e6a685bc51706f8547</uuid><name>GitLab: Redis: client exceptions rate, shared_state</name><type>DEPENDENT</type><key>gitlab.redis.client_exceptions.shared_state.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of Redis client exceptions per second. (Instance: shared_state)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_redis_client_exceptions_total&quot; &amp;&amp; @.labels.storage == &quot;shared_state&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>redis</value></tag></tags><triggers><trigger><uuid>b475d6ecbc564f9b8f7fe9b24bcdf013</uuid><expression>min(/GitLab by HTTP/gitlab.redis.client_exceptions.shared_state.rate,5m)&gt;{$GITLAB.REDIS.FAIL.MAX.WARN}</expression><name>GitLab: Too many Redis shared_state client exceptions</name><event_name>GitLab: Too many Redis shared_state client exceptions (over {$GITLAB.REDIS.FAIL.MAX.WARN} for 5m)</event_name><priority>WARNING</priority><description>&quot;Too many  Redis client exceptions during the requests to  Redis instance shared_state.&quot;</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>7dcc638e1c174dd5975f85551211a3ba</uuid><name>GitLab: Redis: Client requests rate, cache</name><type>DEPENDENT</type><key>gitlab.redis.client_requests.cache.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of Redis client requests per second. (Instance: cache)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_redis_client_requests_total&quot; &amp;&amp; @.labels.storage == &quot;cache&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>redis</value></tag></tags></item><item><uuid>f613303925db46958d181c379e22f942</uuid><name>GitLab: Redis: Client requests rate, queues</name><type>DEPENDENT</type><key>gitlab.redis.client_requests.queues.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of Redis client requests per second. (Instance: queues)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_redis_client_requests_total&quot; &amp;&amp; @.labels.storage == &quot;queues&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>redis</value></tag></tags></item><item><uuid>3ae46654b46e4c769a7308879bc64890</uuid><name>GitLab: Redis: Client requests rate, shared_state</name><type>DEPENDENT</type><key>gitlab.redis.client_requests.shared_state.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of Redis client requests per second. (Instance: shared_state)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_redis_client_requests_total&quot; &amp;&amp; @.labels.storage == &quot;shared_state&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>redis</value></tag></tags></item><item><uuid>950d48c3b5034e769b2bf6a7110ece02</uuid><name>GitLab: Ruby: File descriptors opened, avg</name><type>DEPENDENT</type><key>gitlab.ruby.file_descriptors.avg</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Average number of opened file descriptors.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_file_descriptors&quot;)].value.avg()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>fds</value></tag></tags></item><item><uuid>67ed35c3f5f444b2b10fb462838758ac</uuid><name>GitLab: Ruby: File descriptors opened, max</name><type>DEPENDENT</type><key>gitlab.ruby.file_descriptors.max</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Maximum number of opened file descriptors.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_file_descriptors&quot;)].value.max()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>fds</value></tag></tags></item><item><uuid>b1576e2b47bd448293c3e88885bfc87e</uuid><name>GitLab: Ruby: File descriptors opened, min</name><type>DEPENDENT</type><key>gitlab.ruby.file_descriptors.min</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Minimum number of opened file descriptors.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_file_descriptors&quot;)].value.min()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>fds</value></tag></tags></item><item><uuid>98feff3bfe0d4a9ea88733ae8fef8769</uuid><name>GitLab: Ruby: CPU  usage per second</name><type>DEPENDENT</type><key>gitlab.ruby.process_cpu_seconds.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Average CPU time util in seconds.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_process_cpu_seconds_total&quot;)].value.avg()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cpu</value></tag></tags></item><item><uuid>91ed44c1738745119e892eadb88b417f</uuid><name>GitLab: Ruby: File descriptors, max</name><type>DEPENDENT</type><key>gitlab.ruby.process_max_fds</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Maximum number of open file descriptors per process.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_process_max_fds&quot;)].value.avg()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>fds</value></tag></tags></item><item><uuid>8de84a159b864ed791c07835aa0ec39a</uuid><name>GitLab: Ruby: RSS memory, avg</name><type>DEPENDENT</type><key>gitlab.ruby.process_resident_memory_bytes.avg</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Average RSS Memory usage in bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_process_resident_memory_bytes&quot;)].value.avg()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>27285f7d3c344d68b7945edde3cb8ecf</uuid><name>GitLab: Ruby: RSS memory, max</name><type>DEPENDENT</type><key>gitlab.ruby.process_resident_memory_bytes.max</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Maximum RSS Memory usage in bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_process_resident_memory_bytes&quot;)].value.max()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>0cf8d21bcb8d4fb7880784dc82ba8229</uuid><name>GitLab: Ruby: RSS memory, min</name><type>DEPENDENT</type><key>gitlab.ruby.process_resident_memory_bytes.min</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Minimum RSS Memory usage in bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_process_resident_memory_bytes&quot;)].value.min()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>68267621a5e14494bf57225e71e05ff4</uuid><name>GitLab: Ruby: First process start time</name><type>DEPENDENT</type><key>gitlab.ruby.process_start_time_seconds.first</key><delay>0</delay><history>7d</history><units>unixtime</units><description>Minimum UNIX timestamp of ruby processes start time.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_process_start_time_seconds&quot;)].value.min()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>be88084e9b544af68f78c013caf6b59a</uuid><name>GitLab: Ruby: Last process start time</name><type>DEPENDENT</type><key>gitlab.ruby.process_start_time_seconds.last</key><delay>0</delay><history>7d</history><units>unixtime</units><description>Maximum UNIX timestamp ruby processes start time.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;ruby_process_start_time_seconds&quot;)].value.max()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>f23849bd9716444f8bf65d3964e3be15</uuid><name>GitLab: Ruby: Running_threads</name><type>DEPENDENT</type><key>gitlab.ruby.threads_running</key><delay>0</delay><history>7d</history><description>Number of running Ruby threads.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;gitlab_ruby_threads_running_threads&quot;)].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>system</value></tag></tags><triggers><trigger><uuid>e24496a9499447b2bbdf70f85bbf2113</uuid><expression>nodata(/GitLab by HTTP/gitlab.ruby.threads_running,30m)=1</expression><name>GitLab: Failed to fetch info data</name><event_name>GitLab: Failed to fetch info data (or no data for 30m)</event_name><priority>WARNING</priority><description>Zabbix has not received a metrics data for the last 30 minutes</description><manual_close>YES</manual_close><dependencies><dependency><name>GitLab: Liveness check was failed</name><expression>last(/GitLab by HTTP/gitlab.liveness)=0</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>56af56ccc23d44bcb636871229fbcde2</uuid><name>GitLab: User CAPTCHA logins, total</name><type>DEPENDENT</type><key>gitlab.successful_login_captcha_total</key><delay>0</delay><history>7d</history><description>Counter of successful CAPTCHA attempts during login.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;successful_login_captcha_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag></tags></item><item><uuid>95deb1dc93d34935930b154d1222c8a4</uuid><name>GitLab: Transactions per second</name><type>DEPENDENT</type><key>gitlab.transactions.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Transactions per second (gitlab_transaction_* metrics).</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=~&quot;gitlab_transaction_.*_count_total&quot;)].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag></tags></item><item><uuid>d1a346edc81d487da115105333e8992d</uuid><name>GitLab: Upload file does not exist</name><type>DEPENDENT</type><key>gitlab.upload_file_does_not_exist</key><delay>0</delay><history>7d</history><description>Number of times an upload record could not find its file.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;upload_file_does_not_exist&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>62c9c5a8886e431bb04c40a8045fe207</uuid><name>GitLab: User logins, total</name><type>DEPENDENT</type><key>gitlab.user_session_logins_total</key><delay>0</delay><history>7d</history><description>Counter of how many users have logged in since GitLab was started or restarted.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;user_session_logins_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>acd3e31daa8f497bb1ce0f91d104d928</uuid><name>Puma metrics discovery</name><type>HTTP_AGENT</type><key>gitlab.puma.discovery</key><delay>3h</delay><description>Discovery Puma specific metrics, when Puma is used.</description><item_prototypes><item_prototype><uuid>6b6ebfe9326247c8a57fb8c96125bcee</uuid><name>GitLab: Active connections</name><type>DEPENDENT</type><key>gitlab.puma.active_connections[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of puma threads processing a request.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_active_connections')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype><item_prototype><uuid>14194f273b4e47d98cfdcbefff64cc68</uuid><name>GitLab: Idle threads</name><type>DEPENDENT</type><key>gitlab.puma.idle_threads[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of spawned puma threads which are not processing a request.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_idle_threads')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype><item_prototype><uuid>33a1be2938e24ce2a3fb650efa4f98d6</uuid><name>GitLab: Killer terminations, total</name><type>DEPENDENT</type><key>gitlab.puma.killer_terminations_total[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of workers terminated by PumaWorkerKiller.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_killer_terminations_total')].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype><item_prototype><uuid>7d93438afd73422d90b03e78b1c0f998</uuid><name>GitLab: Max threads</name><type>DEPENDENT</type><key>gitlab.puma.max_threads[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The maximum number of puma worker threads.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_max_threads')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype><item_prototype><uuid>fe381c99c2464e95bac63da2df994b8a</uuid><name>GitLab: Pool capacity</name><type>DEPENDENT</type><key>gitlab.puma.pool_capacity[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of requests the puma worker is capable of taking right now.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_pool_capacity')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype><item_prototype><uuid>8c375d8323f9459a8b2a6254b7afed5b</uuid><name>GitLab: Queued connections</name><type>DEPENDENT</type><key>gitlab.puma.queued_connections[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of connections in that puma worker's &quot;todo&quot; set waiting for a worker thread.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_queued_connections')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>356c8dc915d84382b3f8dfe45b901f46</uuid><expression>min(/GitLab by HTTP/gitlab.puma.queued_connections[{#SINGLETON}],15m)&gt;{$GITLAB.PUMA.QUEUE.MAX.WARN}</expression><name>GitLab: Puma is queueing requests</name><event_name>GitLab: Puma is queueing requests (over {$GITLAB.PUMA.QUEUE.MAX.WARN}% for 15m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>02b27e8a68884f399a8359ed6967d614</uuid><name>GitLab: Running threads</name><type>DEPENDENT</type><key>gitlab.puma.running[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of running puma threads.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_running')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype><item_prototype><uuid>b43e4275dd64427bb6eb4890c556c513</uuid><name>GitLab: Running workers</name><type>DEPENDENT</type><key>gitlab.puma.running_workers[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of booted puma workers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_running_workers')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype><item_prototype><uuid>0169db2581ba48579edc911cad4b41d7</uuid><name>GitLab: Stale workers</name><type>DEPENDENT</type><key>gitlab.puma.stale_workers[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of old puma workers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_stale_workers')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype><item_prototype><uuid>19e0149a6de846c7a39b305037469ecb</uuid><name>GitLab: Workers</name><type>DEPENDENT</type><key>gitlab.puma.workers[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Total number of puma workers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='puma_workers')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>puma</value></tag></tags></item_prototype></item_prototypes><trigger_prototypes><trigger_prototype><uuid>b69fe81449bd4b6cb6dfddeb333e8898</uuid><expression>min(/GitLab by HTTP/gitlab.puma.active_connections[{#SINGLETON}],5m)/last(/GitLab by HTTP/gitlab.puma.max_threads[{#SINGLETON}])*100&gt;{$GITLAB.PUMA.UTILIZATION.MAX.WARN}</expression><name>GitLab: Puma instance thread utilization is too high</name><event_name>GitLab: Puma instance thread utilization is too high (over {$GITLAB.PUMA.UTILIZATION.MAX.WARN}% for 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger_prototype></trigger_prototypes><url>{$GITLAB.URL}/-/metrics{$GITLAB.HEALTH.TOKEN}</url><preprocessing><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter>puma_workers</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(value != &quot;[]&quot; ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>912723d1837641cf9b84996788bd6b54</uuid><name>Unicorn metrics discovery</name><type>HTTP_AGENT</type><key>gitlab.unicorn.discovery</key><delay>3h</delay><description>DiscoveryUnicorn specific metrics, when Unicorn is used.</description><item_prototypes><item_prototype><uuid>7461ee7fad7f4597825644b80cce2ec2</uuid><name>GitLab: Unicorn: Active connections</name><type>DEPENDENT</type><key>gitlab.unicorn.active_connections[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of active Unicorn connections.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='unicorn_active_connections')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>unicorn</value></tag></tags></item_prototype><item_prototype><uuid>31e0f545c6c6428c8f9f46426cb97ca7</uuid><name>GitLab: Unicorn: Queued connections</name><type>DEPENDENT</type><key>gitlab.unicorn.queued_connections[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of queued Unicorn connections.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='unicorn_queued_connections')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>unicorn</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>84142d0996c0420c8b07c7e17d1b9a47</uuid><expression>min(/GitLab by HTTP/gitlab.unicorn.queued_connections[{#SINGLETON}],5m)&gt;{$GITLAB.UNICORN.QUEUE.MAX.WARN}</expression><name>GitLab: Unicorn is queueing requests</name><event_name>GitLab: Unicorn is queueing requests (over {$GITLAB.UNICORN.QUEUE.MAX.WARN}% for 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>44a12fd548b742069cae53a78f7f8ab0</uuid><name>GitLab: Unicorn: Workers</name><type>DEPENDENT</type><key>gitlab.unicorn.unicorn_workers[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of Unicorn workers</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name=='unicorn_workers')].value.sum()</parameter></parameters></step></preprocessing><master_item><key>gitlab.get_metrics</key></master_item><tags><tag><tag>component</tag><value>unicorn</value></tag></tags></item_prototype></item_prototypes><trigger_prototypes><trigger_prototype><uuid>731bf8eb456c49739a3fcd7aec24c7d7</uuid><expression>min(/GitLab by HTTP/gitlab.unicorn.active_connections[{#SINGLETON}],5m)/last(/GitLab by HTTP/gitlab.unicorn.unicorn_workers[{#SINGLETON}])*100&gt;{$GITLAB.UNICORN.UTILIZATION.MAX.WARN}</expression><name>GitLab: Unicorn worker utilization is too high</name><event_name>GitLab: Unicorn worker utilization is too high (over {$GITLAB.UNICORN.UTILIZATION.MAX.WARN}% for 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger_prototype></trigger_prototypes><url>{$GITLAB.URL}/-/metrics{$GITLAB.HEALTH.TOKEN}</url><preprocessing><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter>unicorn_workers</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(value != &quot;[]&quot; ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>application</value></tag><tag><tag>target</tag><value>gitlab</value></tag></tags><macros><macro><macro>{$GITLAB.HEALTH.TOKEN}</macro><description>The token path for Gitlab health check. Example `?token=your_token`</description></macro><macro><macro>{$GITLAB.HTTP.FAIL.MAX.WARN}</macro><value>2</value><description>The maximum number of HTTP request failures for a trigger expression.</description></macro><macro><macro>{$GITLAB.OPEN.FDS.MAX.WARN}</macro><value>90</value><description>The maximum percentage of used file descriptors for a trigger expression.</description></macro><macro><macro>{$GITLAB.PUMA.QUEUE.MAX.WARN}</macro><value>1</value><description>The maximum number of Puma queued requests for a trigger expression.</description></macro><macro><macro>{$GITLAB.PUMA.UTILIZATION.MAX.WARN}</macro><value>90</value><description>The maximum percentage of Puma thread utilization for a trigger expression.</description></macro><macro><macro>{$GITLAB.REDIS.FAIL.MAX.WARN}</macro><value>2</value><description>The maximum number of Redis client exceptions for a trigger expression.</description></macro><macro><macro>{$GITLAB.UNICORN.QUEUE.MAX.WARN}</macro><value>1</value><description>The maximum number of Unicorn queued requests for a trigger expression.</description></macro><macro><macro>{$GITLAB.UNICORN.UTILIZATION.MAX.WARN}</macro><value>90</value><description>The maximum percentage of Unicorn workers utilization for a trigger expression.</description></macro><macro><macro>{$GITLAB.URL}</macro><value>http://localhost</value><description>URL of a GitLab instance.</description></macro></macros><valuemaps><valuemap><uuid>3b40391bb8b6472e9c3fd8e1f001fe04</uuid><name>GitLab healthcheck</name><mappings><mapping><value>0</value><newvalue>Failed</newvalue></mapping><mapping><value>1</value><newvalue>Ok</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><triggers><trigger><uuid>4ac37991b2ca4edd9329fff1e752b05b</uuid><expression>min(/GitLab by HTTP/gitlab.ruby.file_descriptors.max,5m)/last(/GitLab by HTTP/gitlab.ruby.process_max_fds)*100&gt;{$GITLAB.OPEN.FDS.MAX.WARN}</expression><name>GitLab: Current number of open files is too high</name><event_name>GitLab: Current number of open files is too high (over {$GITLAB.OPEN.FDS.MAX.WARN}% for 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger></triggers><graphs><graph><uuid>f6c30e56b54e478ea2708e302197b83b</uuid><name>GitLab: Database: Connection pool</name><graph_items><graph_item><color>1A7C11</color><item><host>GitLab by HTTP</host><key>gitlab.database.connection_pool_busy</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>GitLab by HTTP</host><key>gitlab.database.connection_pool_connections</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>GitLab by HTTP</host><key>gitlab.database.connection_pool_dead</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>GitLab by HTTP</host><key>gitlab.database.connection_pool_idle</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>GitLab by HTTP</host><key>gitlab.database.connection_pool_waiting</key></item></graph_item><graph_item><sortorder>5</sortorder><drawtype>BOLD_LINE</drawtype><color>6C59DC</color><item><host>GitLab by HTTP</host><key>gitlab.database.connection_pool_waiting</key></item></graph_item></graph_items></graph><graph><uuid>ebffb6f63cf5400ab6a518612c5e857f</uuid><name>GitLab: HTTP requests rate</name><graph_items><graph_item><color>1A7C11</color><item><host>GitLab by HTTP</host><key>gitlab.http.requests.4xx.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>GitLab by HTTP</host><key>gitlab.http.requests.5xx.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>GitLab by HTTP</host><key>gitlab.http.requests.rate</key></item></graph_item></graph_items></graph><graph><uuid>14d4a4cc843e4c15bd72b680c18ffdd6</uuid><name>GitLab: Redis requests rate</name><graph_items><graph_item><drawtype>BOLD_LINE</drawtype><color>1A7C11</color><item><host>GitLab by HTTP</host><key>gitlab.redis.client_requests.shared_state.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>BOLD_LINE</drawtype><color>2774A4</color><item><host>GitLab by HTTP</host><key>gitlab.redis.client_requests.cache.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><drawtype>BOLD_LINE</drawtype><color>F63100</color><item><host>GitLab by HTTP</host><key>gitlab.redis.client_requests.queues.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><yaxisside>RIGHT</yaxisside><item><host>GitLab by HTTP</host><key>gitlab.redis.client_exceptions.shared_state.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><yaxisside>RIGHT</yaxisside><item><host>GitLab by HTTP</host><key>gitlab.redis.client_exceptions.cache.rate</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><yaxisside>RIGHT</yaxisside><item><host>GitLab by HTTP</host><key>gitlab.redis.client_exceptions.queues.rate</key></item></graph_item></graph_items></graph><graph><uuid>2eafabff82a240258c50a77655f77fd9</uuid><name>GitLab: Ruby: File descriptors</name><graph_items><graph_item><color>1A7C11</color><item><host>GitLab by HTTP</host><key>gitlab.ruby.file_descriptors.avg</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>GitLab by HTTP</host><key>gitlab.ruby.file_descriptors.max</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>GitLab by HTTP</host><key>gitlab.ruby.file_descriptors.min</key></item></graph_item><graph_item><sortorder>3</sortorder><drawtype>BOLD_LINE</drawtype><color>A54F10</color><item><host>GitLab by HTTP</host><key>gitlab.ruby.process_max_fds</key></item></graph_item></graph_items></graph><graph><uuid>1c6b8a24e76f4b7390e8e8742afbedec</uuid><name>GitLab: Ruby: RSS memory</name><graph_items><graph_item><color>1A7C11</color><item><host>GitLab by HTTP</host><key>gitlab.ruby.process_resident_memory_bytes.avg</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>GitLab by HTTP</host><key>gitlab.ruby.process_resident_memory_bytes.min</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>GitLab by HTTP</host><key>gitlab.ruby.process_resident_memory_bytes.max</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
