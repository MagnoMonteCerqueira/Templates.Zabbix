<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:15:07Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>e785916967c14544b59c3644c3edda3a</uuid><template>Kubernetes Kubelet by HTTP</template><name>Kubernetes Kubelet by HTTP</name><description>Get Kubernetes kubelet metrics by HTTP agent from Prometheus metrics endpoint.

Don't forget change macros {$KUBE.KUBELET.URL}, {$KUBE.API.TOKEN}.
Some metrics may not be collected depending on your Kubernetes API server instance version and configuration.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>1f94bbb521cb41dfa093e1408efbb15a</uuid><name>Kubernetes: Get cadvisor metrics</name><type>HTTP_AGENT</type><key>kube.cadvisor.metrics</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Collecting raw Kubelet metrics from /metrics/cadvisor endpoint.</description><timeout>10s</timeout><url>{$KUBE.KUBELET.URL}{$KUBE.KUBELET.CADVISOR.ENDPOINT}</url><status_codes>200, 403</status_codes><headers><header><name>Authorization</name><value>Bearer {$KUBE.API.TOKEN}</value></header></headers><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>bc395860d45b45cb89401fc7e50bc015</uuid><name>Kubernetes: Containers restarts</name><type>DEPENDENT</type><key>kube.kubelet.containers.restarts</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of times the container has been restarted.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.items[*].status.containerStatuses[*].restartCount.sum()</parameter></parameters></step></preprocessing><master_item><key>kube.pods</key></master_item><tags><tag><tag>component</tag><value>containers</value></tag></tags></item><item><uuid>e524234eea87438d9ee2a1db9f24cfbb</uuid><name>Kubernetes: Containers running</name><type>DEPENDENT</type><key>kube.kubelet.containers.running</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of running containers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.items[*].status.containerStatuses[*].restartCount.sum()</parameter></parameters></step></preprocessing><master_item><key>kube.pods</key></master_item><tags><tag><tag>component</tag><value>containers</value></tag></tags></item><item><uuid>cff44957e9a54d5d887d4f92b3e4da72</uuid><name>Kubernetes: CPU cores, total</name><type>DEPENDENT</type><key>kube.kubelet.cpu.cores</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of cores in this machine (available until kubernetes v1.18).</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>machine_cpu_cores</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>containers</value></tag></tags></item><item><uuid>6735723da30d41dcb7bd46c954b2998f</uuid><name>Kubernetes: Machine memory, bytes</name><type>DEPENDENT</type><key>kube.kubelet.machine.memory</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Resident memory size in bytes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_resident_memory_bytes</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>kube.kubelet.metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>c71fc79a77104ef4a0d6b89d5f7b7bad</uuid><name>Kubernetes: Get kubelet metrics</name><type>HTTP_AGENT</type><key>kube.kubelet.metrics</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Collecting raw Kubelet metrics from /metrics endpoint.</description><timeout>10s</timeout><url>{$KUBE.KUBELET.URL}{$KUBE.KUBELET.METRIC.ENDPOINT}</url><status_codes>200, 403</status_codes><headers><header><name>Authorization</name><value>Bearer {$KUBE.API.TOKEN}</value></header></headers><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>46635d3fee04488caa4b07de7709f71e</uuid><name>Kubernetes: Pods running</name><type>DEPENDENT</type><key>kube.kubelet.pods.running</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of running pods.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.items[?(@.status.phase == &quot;Running&quot;)].length()</parameter></parameters></step></preprocessing><master_item><key>kube.pods</key></master_item><tags><tag><tag>component</tag><value>pods</value></tag></tags></item><item><uuid>d1388216cb384ff08c984919572b0ffb</uuid><name>Kubernetes: File descriptors, max</name><type>DEPENDENT</type><key>kube.kubelet.process_max_fds</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Maximum number of open file descriptors.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_max_fds</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>kube.kubelet.metrics</key></master_item><tags><tag><tag>component</tag><value>descriptors</value></tag></tags></item><item><uuid>dc3a6371dcb34ae5b65cbf5224d4712c</uuid><name>Kubernetes: File descriptors, open</name><type>DEPENDENT</type><key>kube.kubelet.process_open_fds</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of open file descriptors.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_open_fds</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>kube.kubelet.metrics</key></master_item><tags><tag><tag>component</tag><value>descriptors</value></tag></tags></item><item><uuid>c382b67cf7e947fbb9c29e86446ffac5</uuid><name>Kubernetes: Virtual memory, bytes</name><type>DEPENDENT</type><key>kube.kubelet.virtual.memory</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Virtual memory size in bytes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_virtual_memory_bytes</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>kube.kubelet.metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>11da04549bd840b0a8d5c70ff0d2b46f</uuid><name>Kubernetes: Containers last state terminated</name><type>DEPENDENT</type><key>kube.kublet.containers.terminated</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of containers that were previously terminated.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.items[*].status.containerStatuses[?(@.lastState.terminated.exitCode &gt; 0)].length()</parameter></parameters></step></preprocessing><master_item><key>kube.pods</key></master_item><tags><tag><tag>component</tag><value>containers</value></tag></tags></item><item><uuid>7c8cc6c3ed8e412eb69e7ab8e2fe7e12</uuid><name>Kubernetes: Get pods</name><type>HTTP_AGENT</type><key>kube.pods</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Collecting raw Kubelet metrics from /pods endpoint.</description><timeout>10s</timeout><url>{$KUBE.KUBELET.URL}{$KUBE.KUBELET.PODS.ENDPOINT}</url><status_codes>200, 403</status_codes><headers><header><name>Authorization</name><value>Bearer {$KUBE.API.TOKEN}</value></header></headers><tags><tag><tag>component</tag><value>raw</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>5f70768ebe62429a96e17576dd767382</uuid><name>Container memory discovery</name><type>DEPENDENT</type><key>kube.kubelet.container.memory.cache.discovery</key><delay>0</delay><lifetime>0</lifetime><item_prototypes><item_prototype><uuid>8f8b1df2a801475a92604544b2019b2e</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#POD}] Container [{#CONTAINER}]: Memory page cache</name><type>DEPENDENT</type><key>kube.kubelet.container.memory.cache[&quot;{#CONTAINER}&quot;, &quot;{#NAMESPACE}&quot;, &quot;{#POD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Number of bytes of page cache memory.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_memory_cache{container=&quot;{#CONTAINER}&quot;, namespace=&quot;{#NAMESPACE}&quot;, pod=&quot;{#POD}&quot;}</parameter><parameter>value</parameter><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>container</tag><value>{#CONTAINER}</value></tag><tag><tag>namespace</tag><value>{#NAMESPACE}</value></tag><tag><tag>pod</tag><value>{#POD}</value></tag></tags></item_prototype><item_prototype><uuid>6dcf948e79b94f3f96677a7948d2dfd4</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#POD}] Container [{#CONTAINER}]: Memory max usage</name><type>DEPENDENT</type><key>kube.kubelet.container.memory.max_usage[&quot;{#CONTAINER}&quot;, &quot;{#NAMESPACE}&quot;, &quot;{#POD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Maximum memory usage recorded in bytes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_memory_max_usage_bytes{container=&quot;{#CONTAINER}&quot;, namespace=&quot;{#NAMESPACE}&quot;, pod=&quot;{#POD}&quot;}</parameter><parameter>value</parameter><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>container</tag><value>{#CONTAINER}</value></tag><tag><tag>namespace</tag><value>{#NAMESPACE}</value></tag><tag><tag>pod</tag><value>{#POD}</value></tag></tags></item_prototype><item_prototype><uuid>47d35c31a52643c1b587efcec57f9dff</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#POD}] Container [{#CONTAINER}]: RSS</name><type>DEPENDENT</type><key>kube.kubelet.container.memory.rss[&quot;{#CONTAINER}&quot;, &quot;{#NAMESPACE}&quot;, &quot;{#POD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Size of RSS in bytes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_memory_rss{container=&quot;{#CONTAINER}&quot;, namespace=&quot;{#NAMESPACE}&quot;, pod=&quot;{#POD}&quot;}</parameter><parameter>value</parameter><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>container</tag><value>{#CONTAINER}</value></tag><tag><tag>namespace</tag><value>{#NAMESPACE}</value></tag><tag><tag>pod</tag><value>{#POD}</value></tag></tags></item_prototype><item_prototype><uuid>2cf31296f67947ec85f576773352a25b</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#POD}] Container [{#CONTAINER}]: Swap</name><type>DEPENDENT</type><key>kube.kubelet.container.memory.swap[&quot;{#CONTAINER}&quot;, &quot;{#NAMESPACE}&quot;, &quot;{#POD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Container swap usage in bytes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_memory_swap{container=&quot;{#CONTAINER}&quot;, namespace=&quot;{#NAMESPACE}&quot;, pod=&quot;{#POD}&quot;}</parameter><parameter>value</parameter><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>container</tag><value>{#CONTAINER}</value></tag><tag><tag>namespace</tag><value>{#NAMESPACE}</value></tag><tag><tag>pod</tag><value>{#POD}</value></tag></tags></item_prototype><item_prototype><uuid>146d17ecec7149efb20878d7e0466eeb</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#POD}] Container [{#CONTAINER}]: Usage</name><type>DEPENDENT</type><key>kube.kubelet.container.memory.usage[&quot;{#CONTAINER}&quot;, &quot;{#NAMESPACE}&quot;, &quot;{#POD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Current memory usage in bytes, including all memory regardless of when it was accessed.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_memory_usage_bytes{container=&quot;{#CONTAINER}&quot;, namespace=&quot;{#NAMESPACE}&quot;, pod=&quot;{#POD}&quot;}</parameter><parameter>value</parameter><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>container</tag><value>{#CONTAINER}</value></tag><tag><tag>namespace</tag><value>{#NAMESPACE}</value></tag><tag><tag>pod</tag><value>{#POD}</value></tag></tags></item_prototype><item_prototype><uuid>d3a24d207c6d4201a5e7235f246e0c59</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#POD}] Container [{#CONTAINER}]: Working set</name><type>DEPENDENT</type><key>kube.kubelet.container.memory.working_set[&quot;{#CONTAINER}&quot;, &quot;{#NAMESPACE}&quot;, &quot;{#POD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Current working set in bytes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_memory_working_set_bytes{container=&quot;{#CONTAINER}&quot;, namespace=&quot;{#NAMESPACE}&quot;, pod=&quot;{#POD}&quot;}</parameter><parameter>value</parameter><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag><tag><tag>container</tag><value>{#CONTAINER}</value></tag><tag><tag>namespace</tag><value>{#NAMESPACE}</value></tag><tag><tag>pod</tag><value>{#POD}</value></tag></tags></item_prototype></item_prototypes><master_item><key>kube.cadvisor.metrics</key></master_item><preprocessing><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter>container_memory_cache{container =~ &quot;.*&quot;, namespace =~ &quot;.*&quot;, pod =~ &quot;POD&quot;}</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>var lookup = {},
    result = [];

JSON.parse(value).forEach(function (item) {
    var container_labels = item.labels.container + item.labels.namespace + item.labels.pod;
    if (item.labels.container !== '' &amp;&amp; !lookup[container_labels]) {
        lookup[container_labels] = 1;
        result.push({
            '{#CONTAINER}': item.labels.container,
            '{#NAMESPACE}': item.labels.namespace,
            '{#POD}': item.labels.pod
        });
    }
})
return JSON.stringify(result);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>b98223fcf0ee4a558035ed23de0d2616</uuid><name>Pods discovery</name><type>DEPENDENT</type><key>kube.kubelet.pods.discovery</key><delay>0</delay><lifetime>0</lifetime><item_prototypes><item_prototype><uuid>41e8f027979a462983789f1f45a9e332</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#NAME}] CPU: Load average, 10s</name><type>DEPENDENT</type><key>kube.pod.container_cpu_load_average_10s[{#NAMESPACE}/{#NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Pods cpu load average over the last 10 seconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_cpu_load_average_10s{pod=&quot;{#NAME}&quot;, namespace=&quot;{#NAMESPACE}&quot;}</parameter><parameter>function</parameter><parameter>sum</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>pod</value></tag><tag><tag>pod</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>434c913e7547435bb74c922f81f3ff7a</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#NAME}] CPU: System seconds, total</name><type>DEPENDENT</type><key>kube.pod.container_cpu_system_seconds_total[{#NAMESPACE}/{#NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>The number of cores used for system time.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_cpu_system_seconds_total{pod=&quot;{#NAME}&quot;, namespace=&quot;{#NAMESPACE}&quot;}</parameter><parameter>function</parameter><parameter>sum</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>pod</value></tag><tag><tag>pod</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>e0b1c1edcc3c4738a71b46712a085ed0</uuid><name>Kubernetes: Namespace [{#NAMESPACE}] Pod [{#NAME}] CPU: User seconds, total</name><type>DEPENDENT</type><key>kube.pod.container_cpu_user_seconds_total[{#NAMESPACE}/{#NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>The number of cores used for user time.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>container_cpu_user_seconds_total{pod=&quot;{#NAME}&quot;, namespace=&quot;{#NAMESPACE}&quot;}</parameter><parameter>function</parameter><parameter>sum</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>kube.cadvisor.metrics</key></master_item><tags><tag><tag>component</tag><value>pod</value></tag><tag><tag>pod</tag><value>{#NAME}</value></tag></tags></item_prototype></item_prototypes><master_item><key>kube.pods</key></master_item><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var input = JSON.parse(value),
    output = [];

input.items.forEach(function (pod) {
    output.push({
        '{#NAME}': pod.metadata.name,
        '{#NAMESPACE}': pod.metadata.namespace
    });
});

return JSON.stringify(output);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>cb42f71e6bfb4661861e3601e31eeaa6</uuid><name>REST client requests discovery</name><type>DEPENDENT</type><key>kube.kubelet.rest.requests.discovery</key><delay>0</delay><item_prototypes><item_prototype><uuid>c569ce73bfb44098be3ceb8d016e3d24</uuid><name>Kubernetes: Host [{#HOST}] Request method [{#METHOD}] Code:[{#CODE}]</name><type>DEPENDENT</type><key>kube.kubelet.rest.requests[&quot;{#CODE}&quot;, &quot;{#HOST}&quot;, &quot;{#METHOD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP requests, partitioned by status code, method, and host.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>rest_client_requests_total{code=&quot;{#CODE}&quot;, host=&quot;{#HOST}&quot;, method=&quot;{#METHOD}&quot;}</parameter><parameter>value</parameter><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>kube.kubelet.metrics</key></master_item><tags><tag><tag>code</tag><value>{#CODE}</value></tag><tag><tag>component</tag><value>requests</value></tag><tag><tag>host</tag><value>{#HOST}</value></tag><tag><tag>method</tag><value>{#METHOD}</value></tag></tags></item_prototype></item_prototypes><master_item><key>kube.kubelet.metrics</key></master_item><preprocessing><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter>rest_client_requests_total{code =~ &quot;.*&quot;, host =~ &quot;.*&quot;, method =~ &quot;.*&quot;}</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>var lookup = {},
    result = [];

JSON.parse(value).forEach(function (item) {
    var request_labels = item.labels.code + item.labels.host + item.labels.method;
    if (!(lookup[request_labels])) {
        lookup[request_labels] = 1;
        result.push({
            '{#CODE}': item.labels.code,
            '{#HOST}': item.labels.host,
            '{#METHOD}': item.labels.method
        });
    }
})
return JSON.stringify(result);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>6feb0006bb364a8f9295495c92741c16</uuid><name>Runtime operations discovery</name><type>DEPENDENT</type><key>kube.kubelet.runtime_operations_bucket.discovery</key><delay>0</delay><item_prototypes><item_prototype><uuid>13de106611a347e0907dda9ff52f3a20</uuid><name>Kubernetes: [{#OP_TYPE}] Runtime operations bucket: {#LE}</name><type>DEPENDENT</type><key>kube.kublet.runtime_ops_duration_seconds_bucket[{#LE},&quot;{#OP_TYPE}&quot;]</key><delay>0</delay><history>1h</history><trends>0</trends><discover>NO_DISCOVER</discover><value_type>FLOAT</value_type><description>Duration in seconds of runtime operations. Broken down by operation type.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>kubelet_runtime_operations_duration_seconds_bucket{le=&quot;{#LE}&quot;,operation_type=&quot;{#OP_TYPE}&quot;}</parameter><parameter>function</parameter><parameter>sum</parameter></parameters></step></preprocessing><master_item><key>kube.kubelet.metrics</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item_prototype><item_prototype><uuid>3d9545d396b24ef6b87eb730ad93cda7</uuid><name>Kubernetes: [{#OP_TYPE}] Operations, p50</name><type>CALCULATED</type><key>kube.kublet.runtime_ops_duration_seconds_p50[&quot;{#OP_TYPE}&quot;]</key><history>7d</history><discover>NO_DISCOVER</discover><value_type>FLOAT</value_type><units>s</units><params>bucket_percentile(//kube.kublet.runtime_ops_duration_seconds_bucket[*,&quot;{#OP_TYPE}&quot;],5m,50)</params><description>50 percentile of operation latency distribution in seconds for each verb.</description><tags><tag><tag>component</tag><value>operations</value></tag></tags></item_prototype><item_prototype><uuid>039a47a0b20741e79701fecb924e6a08</uuid><name>Kubernetes: [{#OP_TYPE}] Operations, p90</name><type>CALCULATED</type><key>kube.kublet.runtime_ops_duration_seconds_p90[&quot;{#OP_TYPE}&quot;]</key><history>7d</history><discover>NO_DISCOVER</discover><value_type>FLOAT</value_type><units>s</units><params>bucket_percentile(//kube.kublet.runtime_ops_duration_seconds_bucket[*,&quot;{#OP_TYPE}&quot;],5m,90)</params><description>90 percentile of operation latency distribution in seconds for each verb.</description><tags><tag><tag>component</tag><value>operations</value></tag></tags></item_prototype><item_prototype><uuid>e846265636ac433ba2bce034aca1e394</uuid><name>Kubernetes: [{#OP_TYPE}] Operations, p95</name><type>CALCULATED</type><key>kube.kublet.runtime_ops_duration_seconds_p95[&quot;{#OP_TYPE}&quot;]</key><history>7d</history><discover>NO_DISCOVER</discover><value_type>FLOAT</value_type><units>s</units><params>bucket_percentile(//kube.kublet.runtime_ops_duration_seconds_bucket[*,&quot;{#OP_TYPE}&quot;],5m,95)</params><description>95 percentile of operation latency distribution in seconds for each verb.</description><tags><tag><tag>component</tag><value>operations</value></tag></tags></item_prototype><item_prototype><uuid>68f17a6132dd48deb3825efd2b83b6ce</uuid><name>Kubernetes: [{#OP_TYPE}] Operations, p99</name><type>CALCULATED</type><key>kube.kublet.runtime_ops_duration_seconds_p99[&quot;{#OP_TYPE}&quot;]</key><history>7d</history><discover>NO_DISCOVER</discover><value_type>FLOAT</value_type><units>s</units><params>bucket_percentile(//kube.kublet.runtime_ops_duration_seconds_bucket[*,&quot;{#OP_TYPE}&quot;],5m,99)</params><description>99 percentile of operation latency distribution in seconds for each verb.</description><tags><tag><tag>component</tag><value>operations</value></tag></tags></item_prototype><item_prototype><uuid>736abc78366e44b69234caf56abe8a4a</uuid><name>Kubernetes: [{#OP_TYPE}] Runtime operations total, rate</name><type>DEPENDENT</type><key>kube.kublet.runtime_ops_total.rate[&quot;{#OP_TYPE}&quot;]</key><delay>0</delay><history>7d</history><discover>NO_DISCOVER</discover><value_type>FLOAT</value_type><description>Cumulative number of runtime operations by operation type.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>kubelet_runtime_operations_total{operation_type=&quot;{#OP_TYPE}&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>kube.kubelet.metrics</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>3a32d1b4253b48078279b24fdf8f3476</uuid><name>Kubernetes: [{#OP_TYPE}] Operations latency</name><graph_items><graph_item><color>1A7C11</color><item><host>Kubernetes Kubelet by HTTP</host><key>kube.kublet.runtime_ops_duration_seconds_p90[&quot;{#OP_TYPE}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Kubernetes Kubelet by HTTP</host><key>kube.kublet.runtime_ops_duration_seconds_p95[&quot;{#OP_TYPE}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>Kubernetes Kubelet by HTTP</host><key>kube.kublet.runtime_ops_duration_seconds_p99[&quot;{#OP_TYPE}&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>Kubernetes Kubelet by HTTP</host><key>kube.kublet.runtime_ops_duration_seconds_p50[&quot;{#OP_TYPE}&quot;]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>kube.kubelet.metrics</key></master_item><preprocessing><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter>{__name__=~ &quot;kubelet_runtime_operations_*&quot;, operation_type =~ &quot;.*&quot;}</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>var lookup = {},
    lookup_histogram = {},
    result = [];

JSON.parse(value).forEach(function (item) {
    if (item.name === 'kubelet_runtime_operations_total'){
        var op_type = item.labels.operation_type;

        if (lookup[op_type]) {
            return;
        }
        lookup[op_type] = 1;
        result.push({
            '{#TYPE}': 'totals',
            '{#OP_TYPE}': op_type
        });
    }

    else if (item.name === 'kubelet_runtime_operations_duration_seconds_bucket'){
        var labels = item.labels.operation_type + item.labels.le;

        if (lookup_histogram[labels]) {
            return;
        }
        lookup_histogram[labels] = 1;
        result.push({
            '{#TYPE}': 'buckets',
            '{#OP_TYPE}': item.labels.operation_type,
            '{#LE}': item.labels.le
        });
    }
});

return JSON.stringify(result);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><overrides><override><name>bucket item</name><step>1</step><filter><conditions><condition><macro>{#TYPE}</macro><value>buckets</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>bucket</value><discover>DISCOVER</discover></operation></operations></override><override><name>total item</name><step>2</step><filter><conditions><condition><macro>{#TYPE}</macro><value>totals</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>NOT_LIKE</operator><value>bucket</value><discover>DISCOVER</discover></operation></operations></override></overrides></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>software</value></tag><tag><tag>target</tag><value>kubernetes kubelet</value></tag></tags><macros><macro><macro>{$KUBE.API.TOKEN}</macro><description>Service account bearer token</description></macro><macro><macro>{$KUBE.KUBELET.CADVISOR.ENDPOINT}</macro><value>/metrics/cadvisor</value><description>cAdvisor metrics from Kubelet /metrics/cadvisor endpoint</description></macro><macro><macro>{$KUBE.KUBELET.METRIC.ENDPOINT}</macro><value>/metrics</value><description>Kubelet /metrics endpoint</description></macro><macro><macro>{$KUBE.KUBELET.PODS.ENDPOINT}</macro><value>/pods</value><description>Kubelet /pods endpoint</description></macro><macro><macro>{$KUBE.KUBELET.URL}</macro><value>https://localhost:10250</value><description>Instance URL</description></macro></macros></template></templates></zabbix_export>
