<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:49Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>b606eda347ea4663a33ad4d12a482750</uuid><template>Zookeeper by HTTP</template><name>Zookeeper by HTTP</name><description>Get Apache Zookeeper metrics by HTTP agent.
  This template works with standalone and cluster instances. Metrics are collected from each Zookeeper node by requests to AdminServer.
  Don't forget to change macros {$ZOOKEEPER.COMMAND_URL}, {$ZOOKEEPER.PORT}, {$ZOOKEEPER.SCHEME}.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>c7e7e728371a45ef81c35929a713ab4a</uuid><name>Zookeeper: Approximate data size</name><type>DEPENDENT</type><key>zookeeper.approximate_data_size</key><delay>0</delay><history>7d</history><units>B</units><description>Data tree size in bytes.The size includes the znode path and its value.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.approximate_data_size</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag></tags></item><item><uuid>260f60267bda40099f323292d7f0b8fd</uuid><name>Zookeeper: Election time, avg</name><type>DEPENDENT</type><key>zookeeper.avg_election_time</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>Time between entering and leaving election.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var metrics = JSON.parse(value),
    res = metrics.avg_election_time || metrics['election_time{quantile=&quot;0.5&quot;}'];
if (isNaN(res)) {
    return 0;
}
return res;</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>28aa45a47df64503a9553a05794f512a</uuid><name>Zookeeper: Fsync time, avg</name><type>DEPENDENT</type><key>zookeeper.avg_fsynctime</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>Time to fsync transaction log.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var metrics = JSON.parse(value),
    res = metrics.avg_fsynctime || metrics['fsynctime{quantile=&quot;0.5&quot;}'];
if (isNaN(res)) {
    return 0;
}
return res;</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag></tags></item><item><uuid>243ea1e324d5464a88c8847e721cd38b</uuid><name>Zookeeper: Latency, avg</name><type>DEPENDENT</type><key>zookeeper.avg_latency</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The average amount of time it takes for the server to respond to a client request.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.avg_latency</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag></tags></item><item><uuid>6195a64eb23341f0964d8d9ffbf9e624</uuid><name>Zookeeper: Snapshot write time, avg</name><type>DEPENDENT</type><key>zookeeper.avg_snapshottime</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>Average time to write a snapshot.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var metrics = JSON.parse(value),
    res = metrics['snapshottime{quantile=&quot;0.5&quot;}'] || metrics.avg_snapshottime ;
if (isNaN(res)) {
    return 0;
}
return res;</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag></tags></item><item><uuid>f227c61a498f47f6ba1862a741da3789</uuid><name>Zookeeper: Bytes received per sec</name><type>DEPENDENT</type><key>zookeeper.bytes_received_count.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Number of bytes received per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.bytes_received_count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>network</value></tag></tags></item><item><uuid>b9a97ebbaf7d416998e24553cee3559c</uuid><name>Zookeeper: Elections</name><type>DEPENDENT</type><key>zookeeper.cnt_election_time</key><delay>0</delay><history>7d</history><description>Number of elections happened.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var metrics = JSON.parse(value);
if (metrics.server_state === &quot;standalone&quot;) {
    return 0
    }
else {
    return metrics.cnt_election_time || metrics.election_time_count
}</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>01d490987f954950b7ce3a107aefa200</uuid><name>Zookeeper: Fsync</name><type>DEPENDENT</type><key>zookeeper.cnt_fsynctime</key><delay>0</delay><history>7d</history><description>Count of performed fsyncs.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var metrics = JSON.parse(value)
return metrics.cnt_fsynctime || metrics.fsynctime_count</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag></tags></item><item><uuid>159bf1c1f29846a582e201c143239182</uuid><name>Zookeeper: Snapshot writes</name><type>DEPENDENT</type><key>zookeeper.cnt_snapshottime</key><delay>0</delay><history>7d</history><description>Count of performed snapshot writes.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var metrics = JSON.parse(value)
return metrics.snapshottime_count || metrics.cnt_snapshottime</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag></tags></item><item><uuid>10b17f0682c44e2391b8ee191ed355c1</uuid><name>Zookeeper: Commit per sec</name><type>DEPENDENT</type><key>zookeeper.commit_count.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of commits performed per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.commit_count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>1c0ff2c8d4844ed4b815f2a793dd6e7b</uuid><name>Zookeeper: Drop connections per sec</name><type>DEPENDENT</type><key>zookeeper.connection_drop_count.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of connection drops.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.connection_drop_count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>640195274cda47ed83faa4f0c6529818</uuid><name>Zookeeper: Rejected connections per sec</name><type>DEPENDENT</type><key>zookeeper.connection_rejected.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of connection rejected.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.connection_rejected</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>1498099b44d3424093f7cea55cb256e8</uuid><name>Zookeeper: Revalidate connections per sec</name><type>DEPENDENT</type><key>zookeeper.connection_revalidate_count.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of connection revalidations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.connection_revalidate_count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>3e8e3bc9910e4c3c898e1371790a35f0</uuid><name>Zookeeper: Diff syncs per sec</name><type>DEPENDENT</type><key>zookeeper.diff_count.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of diff syncs performed per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.diff_count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>1a581bf18a364868b6eb47bbafcaa105</uuid><name>Zookeeper: Ephemeral nodes count</name><type>DEPENDENT</type><key>zookeeper.ephemerals_count</key><delay>0</delay><history>7d</history><description>Number of ephemeral nodes that a zookeeper server has in its data tree.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.ephemerals_count</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>f682f5d6e1664f919872f309371e4079</uuid><name>Zookeeper: Get connections stats</name><type>HTTP_AGENT</type><key>zookeeper.get_connections_stats</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Get information on client connections to server. Note, depending on the number of client connections this operation may be expensive (i.e. impact server performance).</description><url>{$ZOOKEEPER.SCHEME}://{HOST.CONN}:{$ZOOKEEPER.PORT}/{$ZOOKEEPER.COMMAND_URL}/connections</url><tags><tag><tag>component</tag><value>connections</value></tag><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>cf7e83297d6343fb87dcd7848f62ce41</uuid><name>Zookeeper: Get server metrics</name><type>HTTP_AGENT</type><key>zookeeper.get_metrics</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><url>{$ZOOKEEPER.SCHEME}://{HOST.CONN}:{$ZOOKEEPER.PORT}/{$ZOOKEEPER.COMMAND_URL}/monitor</url><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>0f8e7ac6f753483d86744b2ab6aa28dd</uuid><name>Zookeeper: Global sessions</name><type>DEPENDENT</type><key>zookeeper.global_sessions</key><delay>0</delay><history>7d</history><description>Number of global sessions.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.global_sessions</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag></tags></item><item><uuid>72519325755b4c27931c674756313ebb</uuid><name>Zookeeper: Local sessions</name><type>DEPENDENT</type><key>zookeeper.local_sessions</key><delay>0</delay><history>7d</history><description>Number of local sessions.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.local_sessions</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag></tags></item><item><uuid>8a784676586d4b719a0b5c1327a0645f</uuid><name>Zookeeper: Looking per sec</name><type>DEPENDENT</type><key>zookeeper.looking_count.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of transitions into looking state.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.looking_count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>350a5b566e054e8390bb43ce0b2916c6</uuid><name>Zookeeper: File descriptors, max</name><type>DEPENDENT</type><key>zookeeper.max_file_descriptor_count</key><delay>0</delay><history>7d</history><description>Maximum number of file descriptors that a zookeeper server can open.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.max_file_descriptor_count</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>fds</value></tag></tags></item><item><uuid>185f5c3fdfde43afa55ed4c38c0878dc</uuid><name>Zookeeper: Latency, max</name><type>DEPENDENT</type><key>zookeeper.max_latency</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The maximum amount of time it takes for the server to respond to a client request.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.max_latency</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag></tags></item><item><uuid>a4b3d6d9cfb14454b83475b89fe44e06</uuid><name>Zookeeper: Latency, min</name><type>DEPENDENT</type><key>zookeeper.min_latency</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The minimum amount of time it takes for the server to respond to a client request.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.min_latency</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag></tags></item><item><uuid>86ba6a7967e8462cb6ff4be126e21a44</uuid><name>Zookeeper: Alive connections</name><type>DEPENDENT</type><key>zookeeper.num_alive_connections</key><delay>0</delay><history>7d</history><description>Number of active clients connected to a zookeeper server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.num_alive_connections</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>e441c926d2f947708b39d7615520405d</uuid><name>Zookeeper: File descriptors, open</name><type>DEPENDENT</type><key>zookeeper.open_file_descriptor_count</key><delay>0</delay><history>7d</history><description>Number of file descriptors that a zookeeper server has open.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.open_file_descriptor_count</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>fds</value></tag></tags></item><item><uuid>88ede9687323440183d665d38938212e</uuid><name>Zookeeper: Outstanding requests</name><type>DEPENDENT</type><key>zookeeper.outstanding_requests</key><delay>0</delay><history>7d</history><description>The number of queued requests when the server is under load and is receiving more sustained requests than it can process.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.outstanding_requests</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag></tags><triggers><trigger><uuid>ac27f2d8b34546d1bdc6d7ab858c04a1</uuid><expression>min(/Zookeeper by HTTP/zookeeper.outstanding_requests,5m)&gt;{$ZOOKEEPER.OUTSTANDING_REQ.MAX.WARN}</expression><name>Zookeeper: Too many queued requests</name><event_name>Zookeeper: Too many queued requests (over {$ZOOKEEPER.OUTSTANDING_REQ.MAX.WARN}% for 5 min)</event_name><priority>AVERAGE</priority><description>Number of queued requests in the server. This goes up when the server receives more requests than it can process.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>3295ed3fdb504014b351eba81bf55ccf</uuid><name>Zookeeper: Packets received per sec</name><type>DEPENDENT</type><key>zookeeper.packets_received.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of zookeeper packets received by a server per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.packets_received</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>network</value></tag></tags></item><item><uuid>ecef658cb34247e2838e0f7313dba0bf</uuid><name>Zookeeper: Packets sent per sec</name><type>DEPENDENT</type><key>zookeeper.packets_sent</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of zookeeper packets sent from a server per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.packets_sent</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>network</value></tag></tags></item><item><uuid>8295b8c4c1f44ba48987f36b54b43ab8</uuid><name>Zookeeper: Revalidate per sec</name><type>DEPENDENT</type><key>zookeeper.revalidate_count.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of revalidations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.revalidate_count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>44a1f40fb3604fcda9fedc4beeb87baf</uuid><name>Zookeeper: Server mode</name><type>DEPENDENT</type><key>zookeeper.server_state</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Mode of the server. In an ensemble, this may either be leader or follower. Otherwise, it is standalone</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.server_state</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>494624353875401eaf65f7eb0273ca35</uuid><expression>last(/Zookeeper by HTTP/zookeeper.server_state,#1)&lt;&gt;last(/Zookeeper by HTTP/zookeeper.server_state,#2) and length(last(/Zookeeper by HTTP/zookeeper.server_state))&gt;0</expression><name>Zookeeper: Server mode has changed</name><event_name>Zookeeper: Server mode has changed (new mode: {ITEM.VALUE})</event_name><priority>INFO</priority><description>Zookeeper node state has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>d143981fdaee4c51bcbb773579be25f0</uuid><name>Zookeeper: Snap syncs per sec</name><type>DEPENDENT</type><key>zookeeper.snap_count.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of snap syncs performed per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.snap_count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>cea535cfb32940f29aee3c17734e8c51</uuid><name>Zookeeper: Uptime</name><type>DEPENDENT</type><key>zookeeper.uptime</key><delay>0</delay><history>7d</history><units>s</units><description>Uptime that a peer has been in a table leading/following/observing state.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.uptime</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>db35b5c75fc543ef8ffe766a0671fd6d</uuid><expression>nodata(/Zookeeper by HTTP/zookeeper.uptime,10m)=1</expression><name>Zookeeper: Failed to fetch info data</name><event_name>Zookeeper: Failed to fetch info data (or no data for 10m)</event_name><priority>WARNING</priority><description>Zabbix has not received data for items for the last 10 minutes</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>86a65edd19e14fa9aea1ff40220f895c</uuid><name>Zookeeper: Version</name><type>DEPENDENT</type><key>zookeeper.version</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Version of Zookeeper server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.version</parameter></parameters></step><step><type>REGEX</type><parameters><parameter>([^,]+)--(.+)</parameter><parameter>\1</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>2a091bcfafe84ea9aee5238ce5e25651</uuid><expression>last(/Zookeeper by HTTP/zookeeper.version,#1)&lt;&gt;last(/Zookeeper by HTTP/zookeeper.version,#2) and length(last(/Zookeeper by HTTP/zookeeper.version))&gt;0</expression><name>Zookeeper: Version has changed</name><event_name>Zookeeper: Version has changed (new version: {ITEM.VALUE})</event_name><priority>INFO</priority><description>Zookeeper version has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>5cbc4414c19146ff87e15f21c77808c9</uuid><name>Zookeeper: Watch count</name><type>DEPENDENT</type><key>zookeeper.watch_count</key><delay>0</delay><history>7d</history><description>Number of watches currently set on the local ZooKeeper process.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.watch_count</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>07925b71e3fe421eac9b338fc23713d0</uuid><name>Zookeeper: Znode count</name><type>DEPENDENT</type><key>zookeeper.znode_count</key><delay>0</delay><history>7d</history><description>The number of znodes in the ZooKeeper namespace (the data)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.znode_count</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>e0f576ea5ae44289866fb726079ddbf8</uuid><name>Clients discovery</name><type>HTTP_AGENT</type><key>zookeeper.clients</key><delay>1h</delay><description>Get list of client connections.
Note, depending on the number of client connections this operation may be expensive (i.e. impact server performance).</description><item_prototypes><item_prototype><uuid>b5a378d3785542dca169b1bc1c02189f</uuid><name>Zookeeper client {#TYPE} [{#CLIENT}]: Latency, avg</name><type>DEPENDENT</type><key>zookeeper.avg_latency[{#TYPE},{#CLIENT}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The average amount of time it takes for the server to respond to a client request.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.{#TYPE}.[?(@.remote_socket_address == &quot;{#ADDRESS}&quot;)].avg_latency.first()</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_connections_stats</key></master_item><tags><tag><tag>client</tag><value>{#CLIENT}</value></tag><tag><tag>component</tag><value>clients</value></tag><tag><tag>component</tag><value>requests</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>2a36ecfb56754bcb8bdc91da76316fb4</uuid><name>Zookeeper client {#TYPE} [{#CLIENT}]: Latency, max</name><type>DEPENDENT</type><key>zookeeper.max_latency[{#TYPE},{#CLIENT}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The maximum amount of time it takes for the server to respond to a client request.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.{#TYPE}.[?(@.remote_socket_address == &quot;{#ADDRESS}&quot;)].max_latency.first()</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_connections_stats</key></master_item><tags><tag><tag>client</tag><value>{#CLIENT}</value></tag><tag><tag>component</tag><value>clients</value></tag><tag><tag>component</tag><value>requests</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>6a245634ec9b4aa0b2df8360b42ac8aa</uuid><name>Zookeeper client {#TYPE} [{#CLIENT}]: Latency, min</name><type>DEPENDENT</type><key>zookeeper.min_latency[{#TYPE},{#CLIENT}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The minimum amount of time it takes for the server to respond to a client request.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.{#TYPE}.[?(@.remote_socket_address == &quot;{#ADDRESS}&quot;)].min_latency.first()</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_connections_stats</key></master_item><tags><tag><tag>client</tag><value>{#CLIENT}</value></tag><tag><tag>component</tag><value>clients</value></tag><tag><tag>component</tag><value>requests</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>89805694583b453e99f833e850b5c5dc</uuid><name>Zookeeper client {#TYPE} [{#CLIENT}]: Outstanding requests</name><type>DEPENDENT</type><key>zookeeper.outstanding_requests[{#TYPE},{#CLIENT}]</key><delay>0</delay><history>7d</history><description>The number of queued requests when the server is under load and is receiving more sustained requests than it can process.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.{#TYPE}.[?(@.remote_socket_address == &quot;{#ADDRESS}&quot;)].outstanding_requests.first()</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_connections_stats</key></master_item><tags><tag><tag>client</tag><value>{#CLIENT}</value></tag><tag><tag>component</tag><value>clients</value></tag><tag><tag>component</tag><value>requests</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>e68a429aa986477e894b2a4437b6ec4a</uuid><name>Zookeeper client {#TYPE} [{#CLIENT}]: Packets received per sec</name><type>DEPENDENT</type><key>zookeeper.packets_received[{#TYPE},{#CLIENT}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of packets received.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.{#TYPE}.[?(@.remote_socket_address == &quot;{#ADDRESS}&quot;)].packets_received.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_connections_stats</key></master_item><tags><tag><tag>client</tag><value>{#CLIENT}</value></tag><tag><tag>component</tag><value>clients</value></tag><tag><tag>component</tag><value>network</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype><item_prototype><uuid>c748207b3f3e4a7ca6bb8ff3ecc8959b</uuid><name>Zookeeper client {#TYPE} [{#CLIENT}]: Packets sent per sec</name><type>DEPENDENT</type><key>zookeeper.packets_sent[{#TYPE},{#CLIENT}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of packets sent.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.{#TYPE}.[?(@.remote_socket_address == &quot;{#ADDRESS}&quot;)].packets_sent.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>zookeeper.get_connections_stats</key></master_item><tags><tag><tag>client</tag><value>{#CLIENT}</value></tag><tag><tag>component</tag><value>clients</value></tag><tag><tag>component</tag><value>network</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>9ea4e5af47124317ba7f4502af97bc9c</uuid><name>Zookeeper client {#TYPE} [{#CLIENT}]: Latency</name><graph_items><graph_item><color>1A7C11</color><item><host>Zookeeper by HTTP</host><key>zookeeper.max_latency[{#TYPE},{#CLIENT}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Zookeeper by HTTP</host><key>zookeeper.min_latency[{#TYPE},{#CLIENT}]</key></item></graph_item><graph_item><sortorder>2</sortorder><drawtype>BOLD_LINE</drawtype><color>F63100</color><item><host>Zookeeper by HTTP</host><key>zookeeper.avg_latency[{#TYPE},{#CLIENT}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>b41e4ca001fe4a6789b1b4490861bd26</uuid><name>Zookeeper client {#TYPE} [{#CLIENT}]: Packets</name><graph_items><graph_item><color>1A7C11</color><item><host>Zookeeper by HTTP</host><key>zookeeper.packets_sent[{#TYPE},{#CLIENT}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Zookeeper by HTTP</host><key>zookeeper.packets_received[{#TYPE},{#CLIENT}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><url>{$ZOOKEEPER.SCHEME}://{HOST.CONN}:{$ZOOKEEPER.PORT}/{$ZOOKEEPER.COMMAND_URL}/connections</url><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var source = JSON.parse(value),
    data = [];

source.connections.forEach(function(v){
    data.push({
        &quot;{#ADDRESS}&quot;: v.remote_socket_address,
        &quot;{#CLIENT}&quot;: v.remote_socket_address.split(':')[0],
        &quot;{#TYPE}&quot;: &quot;connections&quot;})
});

source.secure_connections.forEach(function(v){
data.push({
    &quot;{#ADDRESS}&quot;: v.remote_socket_address,
    &quot;{#CLIENT}&quot;:v.remote_socket_address.split(':')[0],
    &quot;{#TYPE}&quot;: &quot;secure_connections&quot;})
});

return JSON.stringify(data);</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>70e9fabfdfe446edae67a340f648612f</uuid><name>Leader metrics discovery</name><type>DEPENDENT</type><key>zookeeper.metrics.leader</key><delay>0</delay><description>Additional metrics for leader node</description><item_prototypes><item_prototype><uuid>3a9b38e228a0438eae354cfc885b81ab</uuid><name>Zookeeper: Learners{#SINGLETON}</name><type>DEPENDENT</type><key>zookeeper.learners[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of learners.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.learners</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag></tags></item_prototype><item_prototype><uuid>c6ae1476b69f43108f843508a02343a7</uuid><name>Zookeeper: Pending syncs{#SINGLETON}</name><type>DEPENDENT</type><key>zookeeper.pending_syncs[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of pending syncs to carry out to ZooKeeper ensemble followers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.pending_syncs</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>004e26cca4934d1992b3c894f36b5643</uuid><expression>min(/Zookeeper by HTTP/zookeeper.pending_syncs[{#SINGLETON}],5m)&gt;{$ZOOKEEPER.PENDING_SYNCS.MAX.WARN}</expression><name>Zookeeper: Too many pending syncs</name><event_name>Zookeeper: Too many pending syncs (over {$ZOOKEEPER.PENDING_SYNCS.MAX.WARN}% for 5 min)</event_name><priority>AVERAGE</priority><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>d5297a5598e94ef5acb1f6affdf51eee</uuid><name>Zookeeper: Quorum size{#SINGLETON}</name><type>DEPENDENT</type><key>zookeeper.quorum_size[{#SINGLETON}]</key><delay>0</delay><history>7d</history><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.quorum_size</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag></tags></item_prototype><item_prototype><uuid>406d13a8d38a47498e939a118ec0329a</uuid><name>Zookeeper: Synced followers{#SINGLETON}</name><type>DEPENDENT</type><key>zookeeper.synced_followers[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of synced followers reported when a node server_state is leader.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.synced_followers</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag></tags></item_prototype><item_prototype><uuid>71c9de2ed85d4a5fb2306b24b9ca67d3</uuid><name>Zookeeper: Synced non-voting follower{#SINGLETON}</name><type>DEPENDENT</type><key>zookeeper.synced_non_voting_followers[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of synced voting followers reported when a node server_state is leader.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.synced_non_voting_followers</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag></tags></item_prototype><item_prototype><uuid>299da1a6343b47a4a25efe2d8581965e</uuid><name>Zookeeper: Synced observers{#SINGLETON}</name><type>DEPENDENT</type><key>zookeeper.synced_observers[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of synced observers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.synced_observers</parameter></parameters></step></preprocessing><master_item><key>zookeeper.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag></tags></item_prototype></item_prototypes><trigger_prototypes><trigger_prototype><uuid>4b0df830eef84e78a04a6980b627b8d0</uuid><expression>last(/Zookeeper by HTTP/zookeeper.synced_followers[{#SINGLETON}]) &lt; last(/Zookeeper by HTTP/zookeeper.quorum_size[{#SINGLETON}])-1</expression><name>Zookeeper: Too few active followers</name><priority>AVERAGE</priority><description>The number of followers should equal the total size of your ZooKeeper ensemble, minus 1 (the leader is not included in the follower count). If the ensemble fails to maintain quorum, all automatic failover features are suspended.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes><master_item><key>zookeeper.get_metrics</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.server_state</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(value == 'leader' ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>application</value></tag><tag><tag>target</tag><value>zookeeper</value></tag></tags><macros><macro><macro>{$ZOOKEEPER.COMMAND_URL}</macro><value>commands</value><description>The URL for listing and issuing commands relative to the root URL (admin.commandURL).</description></macro><macro><macro>{$ZOOKEEPER.FILE_DESCRIPTORS.MAX.WARN}</macro><value>85</value><description>Maximum percentage of file descriptors usage alert threshold (for trigger expression).</description></macro><macro><macro>{$ZOOKEEPER.OUTSTANDING_REQ.MAX.WARN}</macro><value>10</value><description>Maximum number of outstanding requests (for trigger expression).</description></macro><macro><macro>{$ZOOKEEPER.PENDING_SYNCS.MAX.WARN}</macro><value>10</value><description>Maximum number of pending syncs from the followers (for trigger expression).</description></macro><macro><macro>{$ZOOKEEPER.PORT}</macro><value>8080</value><description>The port the embedded Jetty server listens on (admin.serverPort).</description></macro><macro><macro>{$ZOOKEEPER.SCHEME}</macro><value>http</value><description>Request scheme which may be http or https</description></macro></macros></template></templates><triggers><trigger><uuid>53a97045bfd8473899849e429e3e7017</uuid><expression>min(/Zookeeper by HTTP/zookeeper.open_file_descriptor_count,5m) * 100 / last(/Zookeeper by HTTP/zookeeper.max_file_descriptor_count) &gt; {$ZOOKEEPER.FILE_DESCRIPTORS.MAX.WARN}</expression><name>Zookeeper: Too many file descriptors used</name><event_name>Zookeeper: Too many file descriptors used (over {$ZOOKEEPER.FILE_DESCRIPTORS.MAX.WARN}% for 5 min)</event_name><priority>WARNING</priority><description>Number of file descriptors used more than {$ZOOKEEPER.FILE_DESCRIPTORS.MAX.WARN}% of the available number of file descriptors.</description><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger></triggers><graphs><graph><uuid>0553c91abfac4f8fb452b6b367055261</uuid><name>Zookeeper: File descriptors usage</name><graph_items><graph_item><color>1A7C11</color><item><host>Zookeeper by HTTP</host><key>zookeeper.max_file_descriptor_count</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Zookeeper by HTTP</host><key>zookeeper.open_file_descriptor_count</key></item></graph_item></graph_items></graph><graph><uuid>e4a53bcc70fa4688832dce28ca5f9c4a</uuid><name>Zookeeper: Latency</name><graph_items><graph_item><color>1A7C11</color><item><host>Zookeeper by HTTP</host><key>zookeeper.max_latency</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Zookeeper by HTTP</host><key>zookeeper.min_latency</key></item></graph_item><graph_item><sortorder>2</sortorder><drawtype>BOLD_LINE</drawtype><color>F63100</color><item><host>Zookeeper by HTTP</host><key>zookeeper.avg_latency</key></item></graph_item></graph_items></graph><graph><uuid>34d7f20585404aabac415c832c09a7ed</uuid><name>Zookeeper: Nodes</name><graph_items><graph_item><color>1A7C11</color><item><host>Zookeeper by HTTP</host><key>zookeeper.znode_count</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Zookeeper by HTTP</host><key>zookeeper.ephemerals_count</key></item></graph_item></graph_items></graph><graph><uuid>8724517184844ee79c47f36b895cd564</uuid><name>Zookeeper: Packets</name><graph_items><graph_item><color>1A7C11</color><item><host>Zookeeper by HTTP</host><key>zookeeper.packets_sent</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>Zookeeper by HTTP</host><key>zookeeper.packets_received.rate</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
