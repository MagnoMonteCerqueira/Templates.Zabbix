<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:45Z</date><groups><group><uuid>e960332b3f6c46a1956486d4f3f99fce</uuid><name>Templates/Server hardware</name></group></groups><templates><template><uuid>02f35169a5a54a5aad8b3f06e798ab1f</uuid><template>Chassis by IPMI</template><name>Chassis by IPMI</name><description>Template for monitoring servers with BMC over IPMI that work without any external scripts.
All metrics are collected at once, thanks to Zabbix's bulk data collection. The template is available starting from Zabbix version 5.0.
It collects metrics by polling BMC remotely using an IPMI agent.


Known Issues:

  Description: If the BMC has a sensor with an empty threshold value, we get the LLD error &quot;Cannot create trigger...&quot;.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/398023-discussion-thread-for-official-zabbix-template-ipmi

Template tooling version used: 0.41</description><groups><group><name>Templates/Server hardware</name></group></groups><items><item><uuid>dbcf45cb09284fc19a17e7369c8fda43</uuid><name>Get IPMI sensors</name><type>IPMI</type><key>ipmi.get</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>The master item that receives all sensors with values for LLD and dependent elements from BMC.</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>d0a3bd3c62d7438d8acde8ff0a9bb4db</uuid><name>Discrete sensors discovery</name><type>DEPENDENT</type><key>ipmi.discrete.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#SENSOR_READING_TYPE}</macro><value>threshold</value><operator>NOT_MATCHES_REGEX</operator><formulaid>A</formulaid></condition><condition><macro>{#SENSOR_TYPE}</macro><value>{$IPMI.SENSOR_TYPE.MATCHES}</value><formulaid>B</formulaid></condition><condition><macro>{#SENSOR_TYPE}</macro><value>{$IPMI.SENSOR_TYPE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>C</formulaid></condition></conditions></filter><description>Discovery of the discrete IPMI sensors.</description><item_prototypes><item_prototype><uuid>6ce86fa51c614f94b2250e14af8d9385</uuid><name>IPMI: {#SENSOR_ID}</name><type>DEPENDENT</type><key>ipmi.state_text[{#SENSOR_ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>It is a state of the discrete IPMI sensor.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.id=='{#SENSOR_ID}')].state.text.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing><master_item><key>ipmi.get</key></master_item><tags><tag><tag>component</tag><value>environment</value></tag><tag><tag>sensor</tag><value>{#SENSOR_TYPE}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>efe107571d704895bbb43c95407e6689</uuid><expression>last(/Chassis by IPMI/ipmi.state_text[{#SENSOR_ID}],#1)&lt;&gt;last(/Chassis by IPMI/ipmi.state_text[{#SENSOR_ID}],#2)</expression><name>IPMI: {#SENSOR_ID} value has changed</name><priority>INFO</priority><description>The trigger is informing about changes in a state of the discrete IPMI sensor. A problem generated by this trigger can be manually closed.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><master_item><key>ipmi.get</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#SENSOR_ID}</lld_macro><path>$.id</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_READING_TYPE}</lld_macro><path>$.reading.text</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_TYPE}</lld_macro><path>$.sensor.text</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_UNIT}</lld_macro><path>$.units</path></lld_macro_path></lld_macro_paths></discovery_rule><discovery_rule><uuid>bd5ceb5412d3462d90fa857b2d214788</uuid><name>Threshold sensors discovery</name><type>DEPENDENT</type><key>ipmi.sensors.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#SENSOR_READING_TYPE}</macro><value>threshold</value><formulaid>A</formulaid></condition><condition><macro>{#SENSOR_TYPE}</macro><value>{$IPMI.SENSOR_TYPE.MATCHES}</value><formulaid>B</formulaid></condition><condition><macro>{#SENSOR_TYPE}</macro><value>{$IPMI.SENSOR_TYPE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>C</formulaid></condition></conditions></filter><description>Discovery of the threshold IPMI sensors.</description><item_prototypes><item_prototype><uuid>77e8c8c6e2444667b5da698c802dbae0</uuid><name>IPMI: {#SENSOR_ID}, {#SENSOR_UNIT}</name><type>DEPENDENT</type><key>ipmi.value[{#SENSOR_ID}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>It is a state of the threshold IPMI sensor.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.id=='{#SENSOR_ID}')].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>ipmi.get</key></master_item><tags><tag><tag>component</tag><value>environment</value></tag><tag><tag>sensor</tag><value>{#SENSOR_TYPE}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>e9c37c1847d64920b80a20cc764b6c81</uuid><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&gt;{#SENSOR_HI_CRIT}</expression><name>IPMI: {#SENSOR_ID} value is above critical high</name><event_name>IPMI: {#SENSOR_ID} value is above critical high (greater than {#SENSOR_HI_CRIT} for 5m)</event_name><priority>HIGH</priority><description>The trigger is informing that a value higher than the upper critical threshold has been reached.</description><dependencies><dependency><name>IPMI: {#SENSOR_ID} value is above non-recoverable high</name><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&gt;{#SENSOR_HI_DISAST}</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype><trigger_prototype><uuid>0fc9d9baa3dd4d3db841e2153b6c39b2</uuid><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&gt;{#SENSOR_HI_WARN}</expression><name>IPMI: {#SENSOR_ID} value is above non-critical high</name><event_name>IPMI: {#SENSOR_ID} value is above non-critical high (greater than {#SENSOR_HI_WARN} for 5m)</event_name><priority>WARNING</priority><description>The trigger is informing that a value higher than the upper non-critical threshold has been reached.</description><dependencies><dependency><name>IPMI: {#SENSOR_ID} value is above critical high</name><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&gt;{#SENSOR_HI_CRIT}</expression></dependency><dependency><name>IPMI: {#SENSOR_ID} value is above non-recoverable high</name><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&gt;{#SENSOR_HI_DISAST}</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype><trigger_prototype><uuid>2c3dbc3f68db44f1924682a8241e0086</uuid><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&gt;{#SENSOR_HI_DISAST}</expression><name>IPMI: {#SENSOR_ID} value is above non-recoverable high</name><event_name>IPMI: {#SENSOR_ID} value is above non-recoverable high (greater than {#SENSOR_HI_DISAST} for 5m)</event_name><priority>DISASTER</priority><description>The trigger is informing that a value higher than the upper non-recoverable threshold has been reached.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype><trigger_prototype><uuid>adbb7e20a46d42329e4744548aa9d5f6</uuid><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&lt;{#SENSOR_LO_CRIT}</expression><name>IPMI: {#SENSOR_ID} value is below critical low</name><event_name>IPMI: {#SENSOR_ID} value is below critical low (less than {#SENSOR_LO_CRIT} for 5m)</event_name><priority>HIGH</priority><description>The trigger is informing that a value less than the lower critical threshold has been reached.</description><dependencies><dependency><name>IPMI: {#SENSOR_ID} value is below non-recoverable low</name><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&lt;{#SENSOR_LO_DISAST}</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype><trigger_prototype><uuid>7b712e7b11a34635948517467f77ad9d</uuid><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&lt;{#SENSOR_LO_WARN}</expression><name>IPMI: {#SENSOR_ID} value is below non-critical low</name><event_name>IPMI: {#SENSOR_ID} value is below non-critical low (less than {#SENSOR_LO_WARN} for 5m)</event_name><priority>WARNING</priority><description>The trigger is informing that a value less than the lower non-critical threshold has been reached.</description><dependencies><dependency><name>IPMI: {#SENSOR_ID} value is below critical low</name><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&lt;{#SENSOR_LO_CRIT}</expression></dependency><dependency><name>IPMI: {#SENSOR_ID} value is below non-recoverable low</name><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&lt;{#SENSOR_LO_DISAST}</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype><trigger_prototype><uuid>b078ee6b820f44f2871c2e3fcd0ce4cf</uuid><expression>min(/Chassis by IPMI/ipmi.value[{#SENSOR_ID}],5m)&lt;{#SENSOR_LO_DISAST}</expression><name>IPMI: {#SENSOR_ID} value is below non-recoverable low</name><event_name>IPMI: {#SENSOR_ID} value is below non-recoverable low (less than {#SENSOR_LO_DISAST} for 5m)</event_name><priority>DISASTER</priority><description>The trigger is informing that a value less than the lower non-recoverable threshold has been reached.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>85099badf8d547d89f498cf29bcd51a8</uuid><name>IPMI: {#SENSOR_ID}</name><graph_items><graph_item><color>1A7C11</color><item><host>Chassis by IPMI</host><key>ipmi.value[{#SENSOR_ID}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>ipmi.get</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#SENSOR_HI_CRIT}</lld_macro><path>$.threshold.upper.crit</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_HI_DISAST}</lld_macro><path>$.threshold.upper.non_recover</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_HI_WARN}</lld_macro><path>$.threshold.upper.non_crit</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_ID}</lld_macro><path>$.id</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_LO_CRIT}</lld_macro><path>$.threshold.lower.crit</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_LO_DISAST}</lld_macro><path>$.threshold.lower.non_recover</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_LO_WARN}</lld_macro><path>$.threshold.lower.non_crit</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_READING_TYPE}</lld_macro><path>$.reading.text</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_TYPE}</lld_macro><path>$.sensor.text</path></lld_macro_path><lld_macro_path><lld_macro>{#SENSOR_UNIT}</lld_macro><path>$.units</path></lld_macro_path></lld_macro_paths><overrides><override><name>trigger SENSOR_HI_CRIT</name><step>5</step><operations><operation><operationobject>TRIGGER_PROTOTYPE</operationobject><operator>LIKE</operator><value>{#SENSOR_HI_CRIT}</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override><override><name>trigger SENSOR_HI_DISAST</name><step>6</step><operations><operation><operationobject>TRIGGER_PROTOTYPE</operationobject><operator>LIKE</operator><value>{#SENSOR_HI_DISAST}</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override><override><name>trigger SENSOR_HI_WARN</name><step>4</step><operations><operation><operationobject>TRIGGER_PROTOTYPE</operationobject><operator>LIKE</operator><value>{#SENSOR_HI_WARN}</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override><override><name>trigger SENSOR_LO_CRIT</name><step>2</step><operations><operation><operationobject>TRIGGER_PROTOTYPE</operationobject><operator>LIKE</operator><value>{#SENSOR_LO_CRIT}</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override><override><name>trigger SENSOR_LO_DISAST</name><step>3</step><operations><operation><operationobject>TRIGGER_PROTOTYPE</operationobject><operator>LIKE</operator><value>{#SENSOR_LO_DISAST}</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override><override><name>trigger SENSOR_LO_WARN</name><step>1</step><operations><operation><operationobject>TRIGGER_PROTOTYPE</operationobject><operator>LIKE</operator><value>{#SENSOR_LO_WARN}</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override></overrides></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>hardware</value></tag><tag><tag>target</tag><value>server</value></tag></tags><macros><macro><macro>{$IPMI.PASSWORD}</macro><description>This macro is used for access to BMC. It can be overridden on the host or linked template level.</description></macro><macro><macro>{$IPMI.SENSOR_TYPE.MATCHES}</macro><value>.*</value><description>This macro is used in sensors discovery. It can be overridden on the host or linked template level.</description></macro><macro><macro>{$IPMI.SENSOR_TYPE.NOT_MATCHES}</macro><value>invalid</value><description>This macro is used in sensors discovery. It can be overridden on the host or linked template level.</description></macro><macro><macro>{$IPMI.USER}</macro><description>This macro is used for access to BMC. It can be overridden on the host or linked template level.</description></macro></macros></template></templates></zabbix_export>
