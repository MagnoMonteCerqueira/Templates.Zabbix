<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:52Z</date><groups><group><uuid>748ad4d098d447d492bb935c907f652f</uuid><name>Templates/Databases</name></group></groups><templates><template><uuid>81aa8c5ab5594f77a2b26fb7f5094048</uuid><template>MongoDB node by Zabbix agent 2</template><name>MongoDB node by Zabbix agent 2</name><description>Get MongoDB metrics from plugin for the zabbix-agent2.
  1. Setup and configure zabbix-agent2 compiled with the MongoDB monitoring plugin.
  2. Set the {$MONGODB.CONNSTRING} such as &lt;protocol(host:port)&gt; or named session.
  3. Set the user name and password in host macros ({$MONGODB.USER}, {$MONGODB.PASSWORD}) if you want to override parameters from the Zabbix agent configuration file.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/420659-discussion-thread-for-official-zabbix-template-db-mongodb

Template tooling version used: 0.41</description><groups><group><name>Templates/Databases</name></group></groups><items><item><uuid>bfd58d9efaf54e038f96458f68fd48af</uuid><name>MongoDB: Document: deleted, rate</name><type>DEPENDENT</type><key>mongod.document.deleted.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of documents deleted per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.document.deleted</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>documents</value></tag></tags></item><item><uuid>5ecc078aeda04e3ca34ed42d966cdf40</uuid><name>MongoDB: Document: inserted, rate</name><type>DEPENDENT</type><key>mongod.document.inserted.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of documents inserted per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.document.inserted</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>documents</value></tag></tags></item><item><uuid>56fc9870503645069a9d937ac21ab7c2</uuid><name>MongoDB: Document: returned, rate</name><type>DEPENDENT</type><key>mongod.document.returned.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of documents returned by queries per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.document.returned</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>documents</value></tag></tags></item><item><uuid>d21a95f1862b4c17b5a4ed83a67ffb1b</uuid><name>MongoDB: Document: updated, rate</name><type>DEPENDENT</type><key>mongod.document.updated.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of documents updated per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.document.updated</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>documents</value></tag></tags></item><item><uuid>d5ec0427c5ca49119f6e94211b0297bf</uuid><name>MongoDB: Active clients: readers</name><type>DEPENDENT</type><key>mongodb.active_clients.readers</key><delay>0</delay><history>7d</history><description>The number of the active client connections performing read operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.globalLock.activeClients.readers</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>clients</value></tag></tags></item><item><uuid>1c2dc0b60eb44d259e02accf2531b389</uuid><name>MongoDB: Active clients: total</name><type>DEPENDENT</type><key>mongodb.active_clients.total</key><delay>0</delay><history>7d</history><description>The total number of internal client connections to the database including system threads as well as queued readers and writers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.globalLock.activeClients.total</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>clients</value></tag></tags></item><item><uuid>9c5512c83e1844c5b4fdb675336edbf6</uuid><name>MongoDB: Active clients: writers</name><type>DEPENDENT</type><key>mongodb.active_clients.writers</key><delay>0</delay><history>7d</history><description>The number of active client connections performing write operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.globalLock.activeClients.writers</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>clients</value></tag></tags></item><item><uuid>5e6fa5d1c9fc48ada6c0bc5c8d1d3ec4</uuid><name>MongoDB: Asserts: message, rate</name><type>DEPENDENT</type><key>mongodb.asserts.msg.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of message assertions raised per second.
Check the log file for more information about these messages.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.asserts.msg</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>asserts</value></tag></tags></item><item><uuid>32d5177badac49eda8ce1f47c851ebf2</uuid><name>MongoDB: Asserts: regular, rate</name><type>DEPENDENT</type><key>mongodb.asserts.regular.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of regular assertions raised per second.
Check the log file for more information about these messages.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.asserts.regular</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>asserts</value></tag></tags></item><item><uuid>67f2ef15386a47b6b88fc95dd7fe1be6</uuid><name>MongoDB: Asserts: rollovers, rate</name><type>DEPENDENT</type><key>mongodb.asserts.rollovers.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times that the rollover counters roll over per second.
The counters rollover to zero every 2^30 assertions.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.asserts.rollovers</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>asserts</value></tag></tags></item><item><uuid>a7dfd56310d44d7dac1f3c02fa5fbc79</uuid><name>MongoDB: Asserts: user, rate</name><type>DEPENDENT</type><key>mongodb.asserts.user.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of “user asserts” that have occurred per second.
These are errors that user may generate, such as out of disk space or duplicate key.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.asserts.user</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>asserts</value></tag></tags></item><item><uuid>41638aa2b3374e56ad00ef9113e1ea61</uuid><name>MongoDB: Asserts: warning, rate</name><type>DEPENDENT</type><key>mongodb.asserts.warning.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of warnings raised per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.asserts.warning</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>asserts</value></tag></tags></item><item><uuid>46f0a53612de4448ab8e98098375656b</uuid><name>MongoDB: Get collections usage stats</name><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Returns usage statistics for each collection.</description><tags><tag><tag>component</tag><value>collections</value></tag><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>6ce4b63c962646ef91e4a705a42f36de</uuid><name>MongoDB: Connections, active</name><type>DEPENDENT</type><key>mongodb.connections.active</key><delay>0</delay><history>7d</history><description>The number of active client connections to the server.
Active client connections refers to client connections that currently have operations in progress.
Available starting in  4.0.7, 0 for older versions.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.connections.active</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>3b53fa8cf9cb4d1a9ff364cd5d8ae724</uuid><name>MongoDB: Connections, available</name><type>DEPENDENT</type><key>mongodb.connections.available</key><delay>0</delay><history>7d</history><description>The number of unused incoming connections available.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.connections.available</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>c4d86707cd124d9db195ca6afd636e71</uuid><name>MongoDB: Connections, current</name><type>DEPENDENT</type><key>mongodb.connections.current</key><delay>0</delay><history>7d</history><description>The number of incoming connections from clients to the database server.
This number includes the current shell session</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.connections.current</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>37fd836b53fa4db88aeb0faeeccc2856</uuid><name>MongoDB: New connections, rate</name><type>DEPENDENT</type><key>mongodb.connections.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>Rate of all incoming connections created to the server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.connections.totalCreated</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>0f04a5b3b0e5415185e01ecf75f426ec</uuid><name>MongoDB: Current queue: readers</name><type>DEPENDENT</type><key>mongodb.current_queue.readers</key><delay>0</delay><history>7d</history><description>The number of operations that are currently queued and waiting for the read lock.
A consistently small read-queue, particularly of shorter operations, should cause no concern.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.globalLock.currentQueue.readers</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>global-lock</value></tag></tags></item><item><uuid>47ecaffb9638429eb308572b7d7beb5a</uuid><name>MongoDB: Current queue: total</name><type>DEPENDENT</type><key>mongodb.current_queue.total</key><delay>0</delay><history>7d</history><description>The total number of operations queued waiting for the lock.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.globalLock.currentQueue.total</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>global-lock</value></tag></tags></item><item><uuid>e68ff1592a5648fc8b5475054c327ac6</uuid><name>MongoDB: Current queue: writers</name><type>DEPENDENT</type><key>mongodb.current_queue.writers</key><delay>0</delay><history>7d</history><description>The number of operations that are currently queued and waiting for the write lock.
 A consistently small write-queue, particularly of shorter operations, is no cause for concern.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.globalLock.currentQueue.writers</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>global-lock</value></tag></tags></item><item><uuid>1d2c068feba240d6b934b65249d1b5ea</uuid><name>MongoDB: Cursor: open pinned</name><type>DEPENDENT</type><key>mongodb.cursor.open.pinned</key><delay>0</delay><history>7d</history><description>Number of pinned open cursors.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.cursor.open.pinned</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cursors</value></tag></tags></item><item><uuid>f23bf716eced4ba5948b06c24c780904</uuid><name>MongoDB: Cursor: open total</name><type>DEPENDENT</type><key>mongodb.cursor.open.total</key><delay>0</delay><history>7d</history><description>Number of cursors that MongoDB is maintaining for clients.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.cursor.open.total</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cursors</value></tag></tags><triggers><trigger><uuid>ed4a0c66c76d4ca699d0f2188cc8e71f</uuid><expression>min(/MongoDB node by Zabbix agent 2/mongodb.cursor.open.total,5m)&gt;{$MONGODB.CURSOR.OPEN.MAX.WARN}</expression><name>MongoDB: Too many cursors opened by MongoDB for clients</name><event_name>MongoDB: Too many cursors opened by MongoDB for clients (over {$MONGODB.CURSOR.OPEN.MAX.WARN} in 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger></triggers></item><item><uuid>b30b4c7b6d88467bbde22db411660d6b</uuid><name>MongoDB: Cursor: timed out, rate</name><type>DEPENDENT</type><key>mongodb.cursor.timed_out.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of cursors that time out, per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.cursor.timedOut</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cursors</value></tag></tags><triggers><trigger><uuid>41d37791111b461d94da779e4b2c7e46</uuid><expression>min(/MongoDB node by Zabbix agent 2/mongodb.cursor.timed_out.rate,5m)&gt;{$MONGODB.CURSOR.TIMEOUT.MAX.WARN}</expression><name>MongoDB: Too many cursors are timing out</name><event_name>MongoDB: Too many cursors are timing out (over {$MONGODB.CURSOR.TIMEOUT.MAX.WARN} per second in 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>4d0b20f4eeca4418bb08e7e2905cc68c</uuid><name>MongoDB: Architecture</name><type>DEPENDENT</type><key>mongodb.mem.bits</key><delay>0</delay><history>7d</history><units>bit</units><description>A number, either 64 or 32, that indicates whether the MongoDB instance is compiled for 64-bit or 32-bit architecture.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.mem.bits</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>c88392536a334f9a9c907be28090424c</uuid><name>MongoDB: Memory: mapped</name><type>DEPENDENT</type><key>mongodb.mem.mapped</key><delay>0</delay><history>7d</history><units>B</units><description>Amount of mapped memory by the database.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.mem.mapped</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>MULTIPLIER</type><parameters><parameter>1048576</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>7a10ad84604246679104111e83fa762e</uuid><name>MongoDB: Memory: mapped with journal</name><type>DEPENDENT</type><key>mongodb.mem.mapped_with_journal</key><delay>0</delay><history>7d</history><units>B</units><description>The amount of mapped memory, including the memory used for journaling.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.mem.mappedWithJournal</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>MULTIPLIER</type><parameters><parameter>1048576</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>2248b869cfca42bd95140451c0974f8c</uuid><name>MongoDB: Memory: resident</name><type>DEPENDENT</type><key>mongodb.mem.resident</key><delay>0</delay><history>7d</history><units>B</units><description>Amount of memory currently used by the database process.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.mem.resident</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1048576</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>561ea7508e44443cb692b7dfe8ed3bdc</uuid><name>MongoDB: Memory: virtual</name><type>DEPENDENT</type><key>mongodb.mem.virtual</key><delay>0</delay><history>7d</history><units>B</units><description>Amount of virtual memory used by the mongod process.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.mem.virtual</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1048576</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>9c79163da0b44e39a704969ab1d6280b</uuid><name>MongoDB: Cursor: open no timeout</name><type>DEPENDENT</type><key>mongodb.metrics.cursor.open.no_timeout</key><delay>0</delay><history>7d</history><description>Number of open cursors with the option DBQuery.Option.noTimeout set to prevent timeout after a period of inactivity.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.cursor.open.noTimeout</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cursors</value></tag></tags></item><item><uuid>ba0502f80a044670993bdb63587cd282</uuid><name>MongoDB: Bytes in, rate</name><type>DEPENDENT</type><key>mongodb.network.bytes_in.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>The total number of bytes that the server has received over network connections initiated by clients or other mongod/mongos instances per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.network.bytesIn</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag></tags></item><item><uuid>0545114b39a649ef9a4b75da500031fb</uuid><name>MongoDB: Bytes out, rate</name><type>DEPENDENT</type><key>mongodb.network.bytes_out.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>The total number of bytes that the server has sent over network connections initiated by clients or other mongod/mongos instances per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.network.bytesOut</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag></tags></item><item><uuid>73aba89f9012437eb3ed843ccbe63c06</uuid><name>MongoDB: Requests, rate</name><type>DEPENDENT</type><key>mongodb.network.numRequests.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>!Rps</units><description>Number of distinct requests that the server has received per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.network.numRequests</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag></tags></item><item><uuid>532a1f4a64624434986f54b9ac2d2e3a</uuid><name>MongoDB: Operations: command, rate</name><type>DEPENDENT</type><key>mongodb.opcounters.command.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of commands issued to the database the mongod instance per second.
Counts all commands except the write commands: insert, update, and delete.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.opcounters.command</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>540f30705ced49da89a16f80828e8775</uuid><name>MongoDB: Operations: delete, rate</name><type>DEPENDENT</type><key>mongodb.opcounters.delete.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of delete operations the mongod instance per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.opcounters.delete</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>229345df70c240b5ab113b358fb738d9</uuid><name>MongoDB: Operations: getmore, rate</name><type>DEPENDENT</type><key>mongodb.opcounters.getmore.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of “getmore” operations since the mongod instance per second. This counter can be high even if the query count is low.
Secondary nodes send getMore operations as part of the replication process.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.opcounters.getmore</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>4236ad60fcef48f793ac6da4cccdb029</uuid><name>MongoDB: Operations: insert, rate</name><type>DEPENDENT</type><key>mongodb.opcounters.insert.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of insert operations received since the mongod instance per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.opcounters.insert</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>b0f7def2c62047bba0db77d18f1df920</uuid><name>MongoDB: Operations: query, rate</name><type>DEPENDENT</type><key>mongodb.opcounters.query.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of queries received the mongod instance per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.opcounters.query</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>019ed179e4e1407db799e01920280e02</uuid><name>MongoDB: Operations: update, rate</name><type>DEPENDENT</type><key>mongodb.opcounters.update.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of update operations the mongod instance per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.opcounters.update</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag></tags></item><item><uuid>8e7406e64edd4fe5ba87d4018011c958</uuid><name>MongoDB: Get oplog stats</name><key>mongodb.oplog.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Returns status of the replica set, using data polled from the oplog.</description><tags><tag><tag>component</tag><value>oplog</value></tag><tag><tag>component</tag><value>replicaset</value></tag></tags></item><item><uuid>350da28ce7ab42f9b96728ec730d4bd6</uuid><name>MongoDB: Ping</name><key>mongodb.ping[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key><delay>30s</delay><history>7d</history><description>Test if a connection is alive or not.</description><valuemap><name>Service state</name></valuemap><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>health</value></tag></tags><triggers><trigger><uuid>c4ab9bfdd6d14634870f8ebb44081655</uuid><expression>last(/MongoDB node by Zabbix agent 2/mongodb.ping[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;])=0</expression><name>MongoDB: Connection to MongoDB is unavailable</name><priority>HIGH</priority><description>Connection to MongoDB instance is currently unavailable.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>3b448eff509240faba344f7b325f3e28</uuid><name>MongoDB: Get Replica Set status</name><key>mongodb.rs.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Returns the replica set status from the point of view of the member where the method is run.</description><tags><tag><tag>component</tag><value>raw</value></tag><tag><tag>component</tag><value>replicaset</value></tag></tags></item><item><uuid>fb0cc7d44559406cada9d90a51bc999c</uuid><name>MongoDB: Get server status</name><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Returns a database's state.</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>2d1bf92792014ed8a3f8d8b13907fc7d</uuid><name>MongoDB: Uptime</name><type>DEPENDENT</type><key>mongodb.uptime</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Number of seconds that the mongod process has been active.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.uptime</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>166444342def4adc954aa35f3dc22dba</uuid><expression>nodata(/MongoDB node by Zabbix agent 2/mongodb.uptime,10m)=1</expression><name>MongoDB: Failed to fetch info data</name><event_name>MongoDB: Failed to fetch info data (or no data for 10m)</event_name><priority>WARNING</priority><description>Zabbix has not received data for items for the last 10 minutes</description><manual_close>YES</manual_close><dependencies><dependency><name>MongoDB: Connection to MongoDB is unavailable</name><expression>last(/MongoDB node by Zabbix agent 2/mongodb.ping[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;])=0</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger><trigger><uuid>992590e47a7f42dda0e074c2f7a3e5ba</uuid><expression>last(/MongoDB node by Zabbix agent 2/mongodb.uptime)&lt;10m</expression><name>MongoDB: has been restarted</name><event_name>MongoDB: has been restarted (uptime &lt; 10m)</event_name><priority>INFO</priority><description>Uptime is less than 10 minutes.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>c5679875dc254ddd833ee40ef4a2b3cf</uuid><name>MongoDB: MongoDB version</name><type>DEPENDENT</type><key>mongodb.version</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Version of the MongoDB server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.version</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>0856e13b7e7644c5b353fcfa577acb51</uuid><expression>last(/MongoDB node by Zabbix agent 2/mongodb.version,#1)&lt;&gt;last(/MongoDB node by Zabbix agent 2/mongodb.version,#2) and length(last(/MongoDB node by Zabbix agent 2/mongodb.version))&gt;0</expression><name>MongoDB: Version has changed</name><event_name>MongoDB: Version has changed (new version: {ITEM.VALUE})</event_name><priority>INFO</priority><description>MongoDB version has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item></items><discovery_rules><discovery_rule><uuid>a6398a8ae4fe4891a03bb6041bf71f53</uuid><name>Collection discovery</name><key>mongodb.collections.discovery[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key><delay>30m</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#DBNAME}</macro><value>{$MONGODB.LLD.FILTER.DB.MATCHES}</value><formulaid>C</formulaid></condition><condition><macro>{#DBNAME}</macro><value>{$MONGODB.LLD.FILTER.DB.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>D</formulaid></condition><condition><macro>{#COLLECTION}</macro><value>{$MONGODB.LLD.FILTER.COLLECTION.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#COLLECTION}</macro><value>{$MONGODB.LLD.FILTER.COLLECTION.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Collect collections metrics.
Note, depending on the number of DBs and collections this discovery operation may be expensive. Use filters with macros {$MONGODB.LLD.FILTER.DB.MATCHES}, {$MONGODB.LLD.FILTER.DB.NOT_MATCHES}, {$MONGODB.LLD.FILTER.COLLECTION.MATCHES}, {$MONGODB.LLD.FILTER.COLLECTION.NOT_MATCHES}.</description><item_prototypes><item_prototype><uuid>fbcfeba93bce4f3fa965176b9b3208b0</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Objects, avg size</name><type>DEPENDENT</type><key>mongodb.collection.avg_obj_size[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>The size of the average object in the collection in bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.avgObjSize</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>objects</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>ee5d3cefe6584900b400a4f598c84c1b</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Capped</name><type>DEPENDENT</type><key>mongodb.collection.capped[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><description>Whether or not the collection is capped.</description><valuemap><name>MongoDB flag</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.capped</parameter></parameters></step><step><type>BOOL_TO_DECIMAL</type><parameters><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>application</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>5fc5b90792054b09a651b5d41328ca56</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Objects, count</name><type>DEPENDENT</type><key>mongodb.collection.count[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><description>Total number of objects in the collection.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.count</parameter></parameters></step></preprocessing><master_item><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>objects</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>0ab52dbdcb424d759f6f717d8197cb30</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Capped: max number</name><type>DEPENDENT</type><key>mongodb.collection.max_number[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Maximum number of documents that may be present in a capped collection.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.max</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>application</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>8c0fe89cfa9f40e3bb04c92c417757df</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Capped: max size</name><type>DEPENDENT</type><key>mongodb.collection.max_size[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Maximum size of a capped collection in bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.maxSize</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>disk</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>b8ebe075b01248179d93c5d174286d2f</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Indexes</name><type>DEPENDENT</type><key>mongodb.collection.nindexes[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><description>Total number of indices on the collection.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.nindexes</parameter></parameters></step></preprocessing><master_item><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>application</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>a4d05a4ee48b4ce2aa4fbebd240b8c4c</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: commands, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.ops.commands.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].commands.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>b6d89c096fec4194bbe834e026f33178</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: commands, rate</name><type>DEPENDENT</type><key>mongodb.collection.ops.commands.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].commands.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>6375b055efe84cdaa0a42c4b9981dde7</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: getmore, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.ops.getmore.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].getmore.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>760a0a70a2674ad7acd9d551865693ef</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: getmore, rate</name><type>DEPENDENT</type><key>mongodb.collection.ops.getmore.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].getmore.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>812f76c720fe47ba9fd8764c349c4a36</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: insert, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.ops.insert.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].insert.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>c824a6a997ef4308b47cdc4118799f33</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: insert, rate</name><type>DEPENDENT</type><key>mongodb.collection.ops.insert.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].insert.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>77de05da93b34432a7c2442fc01ca624</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: queries, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.ops.queries.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].queries.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>41b1f661ceab494f81e7a4b943a07020</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: queries, rate</name><type>DEPENDENT</type><key>mongodb.collection.ops.queries.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].queries.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>a46f2c1c973d4eef8d9a7b1150702c74</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: remove, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.ops.remove.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].remove.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>89b74a8511b84f4bb8cab94fc5471632</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: remove, rate</name><type>DEPENDENT</type><key>mongodb.collection.ops.remove.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].remove.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>67eaf64e851a45afbd69303ad0256077</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: total, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.ops.total.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].total.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>1ca4ae9dcf494efdbf85d635d49d4de8</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: total, rate</name><type>DEPENDENT</type><key>mongodb.collection.ops.total.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].total.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>89b6f13894d64bdcbe0d0ec41568051a</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: update, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.ops.update.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].update.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>8d75aa686d0d4f3f93089b8b089f1d3c</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations: update, rate</name><type>DEPENDENT</type><key>mongodb.collection.ops.update.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].update.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>4d575525f749436ea4ea9098c3b164ba</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Read lock, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.read_lock.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].readLock.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>9d2d62a252054e428d9b8863a2128ad8</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Read lock, rate</name><type>DEPENDENT</type><key>mongodb.collection.read_lock.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].readLock.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>e5e471e100834da5a2e9dddaaa453227</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Size</name><type>DEPENDENT</type><key>mongodb.collection.size[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>The total size in bytes of the data in the collection plus the size of every indexes on the mongodb.collection.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.size</parameter></parameters></step></preprocessing><master_item><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>disk</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>d43709c548b84ea9b2c3c1b159bf28a3</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Get collection stats {#DBNAME}.{#COLLECTION}</name><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Returns a variety of storage statistics for a given collection.</description><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>raw</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>a2f095952fa44ed3a199b098c5fbee7a</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Storage size</name><type>DEPENDENT</type><key>mongodb.collection.storage_size[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Total storage space allocated to this collection for document storage.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.storageSize</parameter></parameters></step></preprocessing><master_item><key>mongodb.collection.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>disk</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>a4c46912b5e643be8565f2b0d32c62a9</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Write lock, ms/s</name><type>DEPENDENT</type><key>mongodb.collection.write_lock.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent to operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].writeLock.time</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>ef83d379681241eaadd8be8de755a2bd</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Write lock, rate</name><type>DEPENDENT</type><key>mongodb.collection.write_lock.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.totals[&quot;{#DBNAME}.{#COLLECTION}&quot;].writeLock.count</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.collections.usage[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>collection</tag><value>{#COLLECTION}</value></tag><tag><tag>component</tag><value>operations</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>76e921eae63a49b99102d880d5844a46</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Locks</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.read_lock.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.write_lock.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>ab97504abcc844d5a408d4b7cf85e5a5</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Locks time</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.read_lock.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.write_lock.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>dcfc8fcc0b484c8baea14525aa212dc2</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.queries.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.getmore.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.insert.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.update.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.remove.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.commands.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>6</sortorder><drawtype>BOLD_LINE</drawtype><color>AC8C14</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.total.rate[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>554ac3ac477c47cfbaaba3d6419109f0</uuid><name>MongoDB {#DBNAME}.{#COLLECTION}: Operations time</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.queries.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.getmore.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.insert.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.update.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.remove.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.commands.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item><graph_item><sortorder>6</sortorder><drawtype>BOLD_LINE</drawtype><color>AC8C14</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.collection.ops.total.ms[&quot;{#DBNAME}&quot;,&quot;{#COLLECTION}&quot;]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes></discovery_rule><discovery_rule><uuid>a2a57b40d12944ae8ee21c166706b132</uuid><name>Database discovery</name><key>mongodb.db.discovery[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key><delay>30m</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#DBNAME}</macro><value>{$MONGODB.LLD.FILTER.DB.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#DBNAME}</macro><value>{$MONGODB.LLD.FILTER.DB.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Collect database metrics.
Note, depending on the number of DBs this discovery operation may be expensive. Use filters with macros {$MONGODB.LLD.FILTER.DB.MATCHES}, {$MONGODB.LLD.FILTER.DB.NOT_MATCHES}.</description><item_prototypes><item_prototype><uuid>cbb85c1a212a49a1bbdd9336f4a8fe68</uuid><name>MongoDB {#DBNAME}: Collections</name><type>DEPENDENT</type><key>mongodb.db.collections[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Contains a count of the number of collections in that database.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.collections</parameter></parameters></step></preprocessing><master_item><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>collections</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>a9d502096d664f6da44a6ab82f8b7d36</uuid><name>MongoDB {#DBNAME}: Size, data</name><type>DEPENDENT</type><key>mongodb.db.data_size[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Total size of the data held in this database including the padding factor.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.dataSize</parameter></parameters></step></preprocessing><master_item><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>c5f4ae6a260e4c10aae0d51441fcbbf7</uuid><name>MongoDB {#DBNAME}: Extents</name><type>DEPENDENT</type><key>mongodb.db.extents[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Contains a count of the number of extents in the database across all collections.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.numExtents</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>collections</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>cecffb75221440ac957fda5d676d7714</uuid><name>MongoDB {#DBNAME}: Size, file</name><type>DEPENDENT</type><key>mongodb.db.file_size[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Total size of the data held in this database including the padding factor (only available with the mmapv1 storage engine).</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.fileSize</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>9567515baf7b46a0a685717839f4a48f</uuid><name>MongoDB {#DBNAME}: Size, index</name><type>DEPENDENT</type><key>mongodb.db.index_size[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Total size of all indexes created on this database.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.indexSize</parameter></parameters></step></preprocessing><master_item><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>cd5ecd2eafc640319aa2f049db2cf582</uuid><name>MongoDB {#DBNAME}: Objects, count</name><type>DEPENDENT</type><key>mongodb.db.objects[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Number of objects (documents) in the database across all collections.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.objects</parameter></parameters></step></preprocessing><master_item><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>objects</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>cadce6df66ec4872bd6b517233f77bfc</uuid><name>MongoDB {#DBNAME}: Objects, avg size</name><type>DEPENDENT</type><key>mongodb.db.size[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>The average size of each document in bytes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.avgObjSize</parameter></parameters></step></preprocessing><master_item><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>objects</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>829536cb5dd448d8a05a30cf6eff8599</uuid><name>MongoDB {#DBNAME}: Get db stats {#DBNAME}</name><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Returns statistics reflecting the database system's state.</description><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>component</tag><value>raw</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>197a1d1f5d14413da8fe6c93bfdcf4f3</uuid><name>MongoDB {#DBNAME}: Size, storage</name><type>DEPENDENT</type><key>mongodb.db.storage_size[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Total amount of space allocated to collections in this database for document storage.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.storageSize</parameter></parameters></step></preprocessing><master_item><key>mongodb.db.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>disk</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>e65fcfed4eca4d518b5e6b5b6085ede8</uuid><name>MongoDB {#DBNAME}: Collections stats</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.db.collections[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.db.objects[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>5dc13b4aebf24a1b8448c26d93b42d7a</uuid><name>MongoDB {#DBNAME}: Disk usage</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.db.index_size[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.db.storage_size[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.db.file_size[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.db.data_size[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes></discovery_rule><discovery_rule><uuid>eaa4b8fc535143f887673834987ce7be</uuid><name>Replication discovery</name><type>DEPENDENT</type><key>mongodb.rs.discovery</key><delay>0</delay><description>Collect metrics by Zabbix agent if it exists</description><item_prototypes><item_prototype><uuid>aed5de1374ea427185d478e87b7f1449</uuid><name>MongoDB: Apply batches, ms/s</name><type>DEPENDENT</type><key>mongodb.rs.apply.batches.ms.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) the mongod has spent applying operations from the oplog.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.apply.batches.totalMillis</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>a460d4356895439d9cf9143b38a18213</uuid><name>MongoDB: Apply batches, rate</name><type>DEPENDENT</type><key>mongodb.rs.apply.batches.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of batches applied across all databases per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.apply.batches.num</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>48970eb366f144b4b9ed3f72fbd983a7</uuid><name>MongoDB: Apply ops, rate</name><type>DEPENDENT</type><key>mongodb.rs.apply.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of oplog operations applied per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.apply.ops</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>8d8b0046f9fd409891d3d225f8a462ff</uuid><name>MongoDB: Buffer</name><type>DEPENDENT</type><key>mongodb.rs.buffer.count[{#RS_NAME}]</key><delay>0</delay><history>7d</history><description>Number of operations in the oplog buffer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.buffer.count</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>0a7522edb2a647989627de85f7e61319</uuid><name>MongoDB: Buffer, max size</name><type>DEPENDENT</type><key>mongodb.rs.buffer.max_size[{#RS_NAME}]</key><delay>0</delay><history>7d</history><units>B</units><description>Maximum size of the buffer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.buffer.maxSizeBytes</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>fd9b7ea20e1e4e91b7a3c75d5416efe8</uuid><name>MongoDB: Buffer, size</name><type>DEPENDENT</type><key>mongodb.rs.buffer.size[{#RS_NAME}]</key><delay>0</delay><history>7d</history><units>B</units><description>Current size of the contents of the oplog buffer.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.buffer.sizeBytes</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>6f07d080d01d45dfa5383640c76175c5</uuid><name>MongoDB: Replication lag</name><type>DEPENDENT</type><key>mongodb.rs.lag[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Delay between a write operation on the primary and its copy to a secondary.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.members[?(@.self == &quot;true&quot;)].lag.first()</parameter></parameters></step></preprocessing><master_item><key>mongodb.rs.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>778d0b15affe4867b3e7f3e396c2a700</uuid><expression>min(/MongoDB node by Zabbix agent 2/mongodb.rs.lag[{#RS_NAME}],5m)&gt;{$MONGODB.REPL.LAG.MAX.WARN}</expression><name>MongoDB: Replication lag with primary is too high</name><event_name>MongoDB: Replication lag with primary is too high (over {$MONGODB.REPL.LAG.MAX.WARN} in 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>be060c8d3fec46d5832f8047d3512903</uuid><name>MongoDB: Network bytes, rate</name><type>DEPENDENT</type><key>mongodb.rs.network.bytes.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Amount of data read from the replication sync source per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.network.bytes</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>68b7ac3fee984352bab02b07e0823f51</uuid><name>MongoDB: Network getmores, ms/s</name><type>DEPENDENT</type><key>mongodb.rs.network.getmores.ms.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) required to collect data from getmore operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.network.getmores.totalMillis</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>86d9ddbfc35447c7889bef826bab016f</uuid><name>MongoDB: Network getmores, rate</name><type>DEPENDENT</type><key>mongodb.rs.network.getmores.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of getmore operations per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.network.getmores.num</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>d2b3075c9728473a9dc8a0585ce43cfd</uuid><name>MongoDB: Network ops, rate</name><type>DEPENDENT</type><key>mongodb.rs.network.ops.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of operations read from the replication source per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.network.ops</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>operations</value></tag><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>7f9d03a683764e32a35b9c1d4da5ddab</uuid><name>MongoDB: Network readers created, rate</name><type>DEPENDENT</type><key>mongodb.rs.network.readers.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of oplog query processes created per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.network.readersCreated</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>341410549bfd46058a9cb289b3254639</uuid><name>MongoDB {#RS_NAME}: Oplog time diff</name><type>DEPENDENT</type><key>mongodb.rs.oplog.timediff[{#RS_NAME}]</key><delay>0</delay><history>7d</history><units>s</units><description>Oplog window: difference between the first and last operation in the oplog. Only present if there are entries in the oplog.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.timediff</parameter></parameters></step></preprocessing><master_item><key>mongodb.oplog.stats[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>f759273556f5427196c86e822dc7aa95</uuid><name>MongoDB: Preload docs, ms/s</name><type>DEPENDENT</type><key>mongodb.rs.preload.docs.ms.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) spent loading documents as part of the pre-fetch stage of replication.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.preload.docs.totalMillis</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>a364941cb8da416a84c0ca897a04c8f9</uuid><name>MongoDB: Preload docs, rate</name><type>DEPENDENT</type><key>mongodb.rs.preload.docs.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of documents loaded per second during the pre-fetch stage of replication.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.preload.docs.num</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>c78b8e62a12b466ea6f1de84d0e9080a</uuid><name>MongoDB: Preload indexes, ms/s</name><type>DEPENDENT</type><key>mongodb.rs.preload.indexes.ms.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms/s</units><description>Fraction of time (ms/s) spent loading documents as part of the pre-fetch stage of replication.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.preload.indexes.totalMillis</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>ce37bf73939041ab869e4b2faaaedae3</uuid><name>MongoDB: Preload indexes, rate</name><type>DEPENDENT</type><key>mongodb.rs.preload.indexes.rate[{#RS_NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of index entries loaded by members before updating documents as part of the pre-fetch stage of replication.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.metrics.repl.preload.indexes.num</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>49e786da687a4b36a17bf617026e3c83</uuid><name>MongoDB: Node state</name><type>DEPENDENT</type><key>mongodb.rs.state[{#RS_NAME}]</key><delay>0</delay><history>7d</history><description>An integer between 0 and 10 that represents the replica state of the current member.</description><valuemap><name>ReplicaSet node state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.myState</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>mongodb.rs.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>f9f29647a3db426c9c303fc47cfc48eb</uuid><expression>last(/MongoDB node by Zabbix agent 2/mongodb.rs.state[{#RS_NAME}],#1)&lt;&gt;last(/MongoDB node by Zabbix agent 2/mongodb.rs.state[{#RS_NAME}],#2)</expression><recovery_mode>NONE</recovery_mode><name>MongoDB: Node in ReplicaSet changed the state</name><event_name>MongoDB: Node in ReplicaSet changed the state (new state: {ITEM.VALUE})</event_name><priority>WARNING</priority><description>Node in ReplicaSet  changed the state. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>211d5f6768c044f8ac959724160d3ddc</uuid><name>MongoDB: Number of replicas</name><type>DEPENDENT</type><key>mongodb.rs.total_nodes[{#RS_NAME}]</key><delay>0</delay><history>7d</history><discover>NO_DISCOVER</discover><description>The number of replicated nodes in current ReplicaSet.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.members[?(@.self == &quot;true&quot;)].totalNodes.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>mongodb.rs.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>4b81b6e4ce1644689e5d8a4490650e6b</uuid><name>MongoDB: Unhealthy replicas</name><type>DEPENDENT</type><key>mongodb.rs.unhealthy[{#RS_NAME}]</key><delay>0</delay><history>7d</history><trends>0</trends><discover>NO_DISCOVER</discover><value_type>CHAR</value_type><description>The replicated nodes in current ReplicaSet with member health value  = 0.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.members[?(@.self == &quot;true&quot;)].unhealthyNodes.first()</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>var value = JSON.parse(value);
return value.length ? JSON.stringify(value) : '';</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>mongodb.rs.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>b8d4a32cfa9f4b4fb5177e3389d15a5a</uuid><name>MongoDB: Number of unhealthy replicas</name><type>DEPENDENT</type><key>mongodb.rs.unhealthy_count[{#RS_NAME}]</key><delay>0</delay><history>7d</history><discover>NO_DISCOVER</discover><description>The number of replicated nodes with member health value  = 0.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.members[?(@.self == &quot;true&quot;)].unhealthyCount.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>mongodb.rs.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>replication</value></tag><tag><tag>replicaset</tag><value>{#RS_NAME}</value></tag></tags></item_prototype></item_prototypes><trigger_prototypes><trigger_prototype><uuid>975c5e5817b148ba8a8d551ac42053d0</uuid><expression>last(/MongoDB node by Zabbix agent 2/mongodb.rs.unhealthy_count[{#RS_NAME}])&gt;0 and length(last(/MongoDB node by Zabbix agent 2/mongodb.rs.unhealthy[{#RS_NAME}]))&gt;0</expression><name>MongoDB: There are unhealthy replicas in ReplicaSet</name><priority>AVERAGE</priority><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes><graph_prototypes><graph_prototype><uuid>52724c49dd544470916eab1301be30da</uuid><name>MongoDB: Replication lag time [{#RS_NAME}]</name><graph_items><graph_item><drawtype>BOLD_LINE</drawtype><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.rs.lag[{#RS_NAME}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>mongodb.rs.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var status = JSON.parse(value)
return JSON.stringify(status.set
? [{'{#RS_NAME}': status.set, '{#NODE_STATE}': status.myState}]
: []);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><overrides><override><name>Arbiter metrics</name><step>2</step><filter><conditions><condition><macro>{#NODE_STATE}</macro><value>7</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Replication lag</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override><override><name>Primary metrics</name><step>1</step><filter><conditions><condition><macro>{#NODE_STATE}</macro><value>1</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Number of replicas</value><status>ENABLED</status><discover>DISCOVER</discover></operation><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Unhealthy replicas</value><status>ENABLED</status><discover>DISCOVER</discover></operation><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Number of unhealthy replicas</value><status>ENABLED</status><discover>DISCOVER</discover></operation><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Replication lag</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override></overrides></discovery_rule><discovery_rule><uuid>9b37bb1d3e244a95ac5702bcf3ab19a9</uuid><name>WiredTiger metrics</name><type>DEPENDENT</type><key>mongodb.wired_tiger.discovery</key><delay>0</delay><description>Collect metrics of WiredTiger Storage Engine if it exists</description><item_prototypes><item_prototype><uuid>918e705019734ca7a200a7c4422c6bab</uuid><name>MongoDB: WiredTiger cache: bytes</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.bytes_in_cache[{#SINGLETON}]</key><delay>0</delay><history>7d</history><units>B</units><description>Size of the data currently in cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache['bytes currently in the cache']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>20edd994c8b04e35bea96e6eacd33611</uuid><name>MongoDB: WiredTiger cache: bytes, max</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.maximum_bytes_configured[{#SINGLETON}]</key><delay>0</delay><history>7d</history><units>B</units><description>Maximum cache size.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache['maximum bytes configured']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>4e07f3e517bf41c1b42661d3bbd5237e</uuid><name>MongoDB: WiredTiger cache: max page size at eviction</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.max_page_size_eviction[{#SINGLETON}]</key><delay>0</delay><history>7d</history><units>B</units><description>Maximum page size at eviction.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache['maximum page size at eviction']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>692685a9f3d9461daa88fdfcb0771e05</uuid><name>MongoDB: WiredTiger cache: modified pages evicted</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.modified_pages_evicted[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of pages, that have been modified, evicted from the cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache['modified pages evicted']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>634060250f474f269aed1df61f709ca7</uuid><name>MongoDB: WiredTiger cache: pages evicted by application threads, rate</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.pages_evicted_threads.rate[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of page evicted by application threads per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache.['pages evicted by application threads']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>547ccf6f4c7f4629831e39f72cbcfb70</uuid><name>MongoDB: WiredTiger cache: pages held in cache</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.pages_in_cache[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of pages currently held in the cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache['pages currently held in the cache']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>c01890f434b14e998e2aea7d61d600e5</uuid><name>MongoDB: WiredTiger cache: pages read into cache</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.pages_read[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of pages read into the cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache['pages read into cache']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>0aa52db6d7684a2496fb0599139cd142</uuid><name>MongoDB: WiredTiger cache: pages written from cache</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.pages_written[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of pages written from the cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache['pages written from cache']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>851100dc722b4e74883fa469e062a2e2</uuid><name>MongoDB: WiredTiger cache: in-memory page splits</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.splits[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>In-memory page splits.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache['in-memory page splits']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>85706ecdaa0e4c789a6542cbde35e80a</uuid><name>MongoDB: WiredTiger cache: tracked dirty bytes in the cache</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.tracked_dirty_bytes[{#SINGLETON}]</key><delay>0</delay><history>7d</history><units>B</units><description>Size of the dirty data in the cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache.['tracked dirty bytes in the cache']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>7993e04be54b4dc0b663a105b7b9a3c4</uuid><name>MongoDB: WiredTiger cache: unmodified pages evicted</name><type>DEPENDENT</type><key>mongodb.wired_tiger.cache.unmodified_pages_evicted[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of pages, that were not modified, evicted from the cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.cache.['unmodified pages evicted']</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>b1a9800865db4ac8959bbdc4b2ab39ee</uuid><name>MongoDB: WiredTiger concurrent transactions: read, available</name><type>DEPENDENT</type><key>mongodb.wired_tiger.concurrent_transactions.read.available[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of available read tickets (concurrent transactions) remaining.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.concurrentTransactions.read.available</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>967928b915f64623b4416ed0dbf6ba98</uuid><expression>max(/MongoDB node by Zabbix agent 2/mongodb.wired_tiger.concurrent_transactions.read.available[{#SINGLETON}],5m)&lt;{$MONGODB.WIRED_TIGER.TICKETS.AVAILABLE.MIN.WARN}</expression><name>MongoDB: Available WiredTiger read tickets is low</name><event_name>MongoDB: Available WiredTiger read tickets less than {$MONGODB.WIRED_TIGER.TICKETS.AVAILABLE.MIN.WARN}</event_name><priority>WARNING</priority><description>&quot;Too few available read tickets.
When the number of available read tickets remaining reaches zero, new read requests will be queued until a new read ticket is available.&quot;</description><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>b9415bf5203840209e149a6be4b110a1</uuid><name>MongoDB: WiredTiger concurrent transactions: read, out</name><type>DEPENDENT</type><key>mongodb.wired_tiger.concurrent_transactions.read.out[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of read tickets (concurrent transactions) in use.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.concurrentTransactions.read.out</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>46c67d017c5040f691695fcd7645c224</uuid><name>MongoDB: WiredTiger concurrent transactions: read, total tickets</name><type>DEPENDENT</type><key>mongodb.wired_tiger.concurrent_transactions.read.totalTickets[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Total number of read tickets (concurrent transactions) available.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.concurrentTransactions.read.totalTickets</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>cb36bdd5ce0442cca03e46436f82c6a2</uuid><name>MongoDB: WiredTiger concurrent transactions: write, available</name><type>DEPENDENT</type><key>mongodb.wired_tiger.concurrent_transactions.write.available[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of available write tickets (concurrent transactions) remaining.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.concurrentTransactions.write.available</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>485e6e846f274b528902b3ffd08f2fc4</uuid><expression>max(/MongoDB node by Zabbix agent 2/mongodb.wired_tiger.concurrent_transactions.write.available[{#SINGLETON}],5m)&lt;{$MONGODB.WIRED_TIGER.TICKETS.AVAILABLE.MIN.WARN}</expression><name>MongoDB: Available WiredTiger write tickets is low</name><event_name>MongoDB: Available WiredTiger write tickets less than {$MONGODB.WIRED_TIGER.TICKETS.AVAILABLE.MIN.WARN}</event_name><priority>WARNING</priority><description>&quot;Too few available write tickets.
When the number of available write tickets remaining reaches zero, new write requests will be queued until a new write ticket is available.&quot;</description><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>b997757256e441dca58758192126ac44</uuid><name>MongoDB: WiredTiger concurrent transactions: write, out</name><type>DEPENDENT</type><key>mongodb.wired_tiger.concurrent_transactions.write.out[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Number of write tickets (concurrent transactions) in use.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.concurrentTransactions.write.out</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype><item_prototype><uuid>e9eb61954ab6462d9dbcf9206467b076</uuid><name>MongoDB: WiredTiger concurrent transactions: write, total tickets</name><type>DEPENDENT</type><key>mongodb.wired_tiger.concurrent_transactions.write.totalTickets[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Total number of write tickets (concurrent transactions) available.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.wiredTiger.concurrentTransactions.write.totalTickets</parameter></parameters></step></preprocessing><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>component</tag><value>wired-tiger</value></tag></tags></item_prototype></item_prototypes><master_item><key>mongodb.server.status[&quot;{$MONGODB.CONNSTRING}&quot;,&quot;{$MONGODB.USER}&quot;,&quot;{$MONGODB.PASSWORD}&quot;]</key></master_item><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(JSON.parse(value).wiredTiger
  ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>6h</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>database</value></tag><tag><tag>target</tag><value>mongodb-node</value></tag></tags><macros><macro><macro>{$MONGODB.CONNS.PCT.USED.MAX.WARN}</macro><value>80</value><description>Maximum percentage of used connections</description></macro><macro><macro>{$MONGODB.CONNSTRING}</macro><value>tcp://localhost:27017</value><description>Connection string in the URI format (password is not used). This param overwrites a value configured in the &quot;Server&quot; option of the configuration file (if it's set), otherwise, the plugin's default value is used: &quot;tcp://localhost:27017&quot;</description></macro><macro><macro>{$MONGODB.CURSOR.OPEN.MAX.WARN}</macro><value>10000</value><description>Maximum number of open cursors</description></macro><macro><macro>{$MONGODB.CURSOR.TIMEOUT.MAX.WARN}</macro><value>1</value><description>Maximum number of cursors timing out per second</description></macro><macro><macro>{$MONGODB.LLD.FILTER.COLLECTION.MATCHES}</macro><value>.*</value><description>Filter of discoverable collections</description></macro><macro><macro>{$MONGODB.LLD.FILTER.COLLECTION.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter to exclude discovered collections</description></macro><macro><macro>{$MONGODB.LLD.FILTER.DB.MATCHES}</macro><value>.*</value><description>Filter of discoverable databases</description></macro><macro><macro>{$MONGODB.LLD.FILTER.DB.NOT_MATCHES}</macro><value>(admin|config|local)</value><description>Filter to exclude discovered databases</description></macro><macro><macro>{$MONGODB.PASSWORD}</macro><description>MongoDB user password</description></macro><macro><macro>{$MONGODB.REPL.LAG.MAX.WARN}</macro><value>10s</value><description>Maximum replication lag in seconds</description></macro><macro><macro>{$MONGODB.USER}</macro><description>MongoDB username</description></macro><macro><macro>{$MONGODB.WIRED_TIGER.TICKETS.AVAILABLE.MIN.WARN}</macro><value>5</value><description>Minimum number of available WiredTiger read or write tickets remaining</description></macro></macros><valuemaps><valuemap><uuid>9f921e1503e74204b8f128966f9562bc</uuid><name>MongoDB flag</name><mappings><mapping><value>0</value><newvalue>False</newvalue></mapping><mapping><value>1</value><newvalue>True</newvalue></mapping></mappings></valuemap><valuemap><uuid>a99141555eff42ff8d367f10d9a7c569</uuid><name>ReplicaSet node state</name><mappings><mapping><value>0</value><newvalue>STARTUP</newvalue></mapping><mapping><value>1</value><newvalue>PRIMARY</newvalue></mapping><mapping><value>2</value><newvalue>SECONDARY</newvalue></mapping><mapping><value>3</value><newvalue>RECOVERING</newvalue></mapping><mapping><value>5</value><newvalue>STARTUP2</newvalue></mapping><mapping><value>6</value><newvalue>UNKNOWN</newvalue></mapping><mapping><value>7</value><newvalue>ARBITER</newvalue></mapping><mapping><value>8</value><newvalue>DOWN</newvalue></mapping><mapping><value>9</value><newvalue>ROLLBACK</newvalue></mapping><mapping><value>10</value><newvalue>REMOVED</newvalue></mapping></mappings></valuemap><valuemap><uuid>b37ba44823e34a13a119f86f3d58a65a</uuid><name>Service state</name><mappings><mapping><value>0</value><newvalue>Down</newvalue></mapping><mapping><value>1</value><newvalue>Up</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><triggers><trigger><uuid>58142b2a76114e69af259ea1b5c19bbc</uuid><expression>min(/MongoDB node by Zabbix agent 2/mongodb.connections.current,5m)/(last(/MongoDB node by Zabbix agent 2/mongodb.connections.available)+last(/MongoDB node by Zabbix agent 2/mongodb.connections.current))*100&gt;{$MONGODB.CONNS.PCT.USED.MAX.WARN}</expression><name>MongoDB: Total number of open connections is too high</name><event_name>MongoDB: Total number of open connections is too high (over {$MONGODB.CONNS.PCT.USED.MAX.WARN%} in 5m)</event_name><priority>WARNING</priority><description>Too few available connections. If MongoDB runs low on connections, in may not be able to handle incoming requests in a timely manner.</description><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger></triggers><graphs><graph><uuid>b018e24581464b0282df09fb9d6fc129</uuid><name>MongoDB: Active clients</name><graph_items><graph_item><drawtype>BOLD_LINE</drawtype><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.active_clients.total</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.active_clients.readers</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.active_clients.writers</key></item></graph_item></graph_items></graph><graph><uuid>815c7f2a6dd941df9bc10bc9153e0e97</uuid><name>MongoDB: Activity</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.connections.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.network.numRequests.rate</key></item></graph_item></graph_items></graph><graph><uuid>d7787063a8614cb4afdf41811a8ade59</uuid><name>MongoDB: Connections</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.connections.available</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.connections.active</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.connections.current</key></item></graph_item></graph_items></graph><graph><uuid>230bda1ddd4a45b6a2f11dbea252276e</uuid><name>MongoDB: Cursors</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.cursor.open.total</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.cursor.open.pinned</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.metrics.cursor.open.no_timeout</key></item></graph_item></graph_items></graph><graph><uuid>509211f5f33d4c57a49c5416b2f33937</uuid><name>MongoDB: Documents</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongod.document.deleted.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongod.document.inserted.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongod.document.returned.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongod.document.updated.rate</key></item></graph_item></graph_items></graph><graph><uuid>f47175a50c6f488b993d3b04ecb28af4</uuid><name>MongoDB: Memory usage</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.mem.mapped</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.mem.resident</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.mem.virtual</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.mem.mapped_with_journal</key></item></graph_item></graph_items></graph><graph><uuid>f1311a6b0d5f4564898d6679a45c438d</uuid><name>MongoDB: Network</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.network.bytes_out.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.network.bytes_in.rate</key></item></graph_item></graph_items></graph><graph><uuid>27c36a56bdca436d8a0fe43c9ee8233b</uuid><name>MongoDB: Operations</name><graph_items><graph_item><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.opcounters.query.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.opcounters.insert.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.opcounters.getmore.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.opcounters.update.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.opcounters.delete.rate</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.opcounters.command.rate</key></item></graph_item></graph_items></graph><graph><uuid>e228af86d0a34bd4b494cb6b8cda2ad8</uuid><name>MongoDB: Queued operations</name><graph_items><graph_item><drawtype>BOLD_LINE</drawtype><color>1A7C11</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.current_queue.total</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>BOLD_LINE</drawtype><color>2774A4</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.current_queue.readers</key></item></graph_item><graph_item><sortorder>2</sortorder><drawtype>BOLD_LINE</drawtype><color>F63100</color><item><host>MongoDB node by Zabbix agent 2</host><key>mongodb.current_queue.writers</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
