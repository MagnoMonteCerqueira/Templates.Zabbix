<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:43Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>812073bf8df143bcae2a84b32c3965e5</uuid><template>HAProxy by Zabbix agent</template><name>HAProxy by Zabbix agent</name><description>Get metrics from status page using Zabbix agent
https://www.haproxy.com/blog/exploring-the-haproxy-stats-page/.
Example configuration of HAProxy:
  frontend stats
      bind *:8404
      stats enable
      stats uri /stats
      stats refresh 10s

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/393527-discussion-thread-for-official-zabbix-template-haproxy

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>ca85e2fda99b42a4ad2b373211a6b07d</uuid><name>HAProxy: Get nodes</name><type>DEPENDENT</type><key>haproxy.get.nodes</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Array for LLD rules.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(JSON.parse(value),['mode','pxname','svname'])</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>29381f1e0bdc4628a82ef1b7724f2e6f</uuid><name>HAProxy: Uptime</name><type>DEPENDENT</type><key>haproxy.uptime</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>try {
    var t = value.match(/(\d+)d (\d+)h(\d+)m(\d+)s/);
    return t[1] * 86400 + t[2] * 3600 + t[3] * 60 + t[4] * 1;
}
catch (error) {
    throw &quot;HAProxy uptime is not found : &quot; + error;
}</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>e76d5b82b0ad421ea62cd1dc069e036b</uuid><expression>last(/HAProxy by Zabbix agent/haproxy.uptime)&lt;10m</expression><name>HAProxy: has been restarted</name><event_name>HAProxy: has been restarted (uptime &lt; 10m)</event_name><priority>INFO</priority><description>Uptime is less than 10 minutes</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>e930e70fb1b44d9cbe673f35133c6e77</uuid><name>HAProxy: Version</name><type>DEPENDENT</type><key>haproxy.version</key><delay>0</delay><trends>0</trends><value_type>CHAR</value_type><preprocessing><step><type>REGEX</type><parameters><parameter>HAProxy version ([^,]*),</parameter><parameter>\1</parameter></parameters><error_handler>CUSTOM_ERROR</error_handler><error_handler_params>HAProxy version is not found</error_handler_params></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>db6ef8f306f64f0f81a590e4b45b370c</uuid><expression>last(/HAProxy by Zabbix agent/haproxy.version,#1)&lt;&gt;last(/HAProxy by Zabbix agent/haproxy.version,#2) and length(last(/HAProxy by Zabbix agent/haproxy.version))&gt;0</expression><name>HAProxy: Version has changed</name><event_name>HAProxy: Version has changed (new version: {ITEM.VALUE})</event_name><priority>INFO</priority><description>HAProxy version has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>c224cfe9b7474f9e80618dde78cfcb11</uuid><name>HAProxy: Service response time</name><key>net.tcp.service.perf[&quot;{$HAPROXY.STATS.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$HAPROXY.STATS.PORT}&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>s</units><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>component</tag><value>network</value></tag></tags><triggers><trigger><uuid>4e881047bbd54c5984922d1189567ece</uuid><expression>min(/HAProxy by Zabbix agent/net.tcp.service.perf[&quot;{$HAPROXY.STATS.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$HAPROXY.STATS.PORT}&quot;],5m)&gt;{$HAPROXY.RESPONSE_TIME.MAX.WARN}</expression><name>HAProxy: Service response time is too high</name><event_name>HAProxy: Service response time is too high (over {$HAPROXY.RESPONSE_TIME.MAX.WARN} for 5m)</event_name><priority>WARNING</priority><manual_close>YES</manual_close><dependencies><dependency><name>HAProxy: Service is down</name><expression>last(/HAProxy by Zabbix agent/net.tcp.service[&quot;{$HAPROXY.STATS.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$HAPROXY.STATS.PORT}&quot;])=0</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>97e45c508f5a4df78fc783382088e233</uuid><name>HAProxy: Service status</name><key>net.tcp.service[&quot;{$HAPROXY.STATS.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$HAPROXY.STATS.PORT}&quot;]</key><history>7d</history><valuemap><name>Service state</name></valuemap><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>10m</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>component</tag><value>network</value></tag></tags><triggers><trigger><uuid>8d5c7940e5924b469b3e7804043ea7b6</uuid><expression>last(/HAProxy by Zabbix agent/net.tcp.service[&quot;{$HAPROXY.STATS.SCHEME}&quot;,&quot;{HOST.CONN}&quot;,&quot;{$HAPROXY.STATS.PORT}&quot;])=0</expression><name>HAProxy: Service is down</name><priority>AVERAGE</priority><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>e70009bd4e3041a3952738673ebb5c29</uuid><name>HAProxy: Get stats page</name><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH}&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>HAProxy Statistics Report HTML</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>aabdb5706b6744379561f269e0709141</uuid><name>HAProxy: Get stats</name><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>HAProxy Statistics Report in CSV format</description><preprocessing><step><type>REGEX</type><parameters><parameter># ([\s\S]*)</parameter><parameter>\1</parameter></parameters></step><step><type>CSV_TO_JSON</type><parameters><parameter/><parameter/><parameter>1</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>raw</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>9899f0a11ece4b9194ca44a8fc34b066</uuid><name>Backend discovery</name><type>DEPENDENT</type><key>haproxy.backend.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#SVNAME}</macro><value>BACKEND</value><formulaid>B</formulaid></condition><condition><macro>{#MODE}</macro><value>http|tcp</value><formulaid>A</formulaid></condition></conditions></filter><description>Discovery backends</description><item_prototypes><item_prototype><uuid>1ee660a3cfbd4e76a20a32524cdb707f</uuid><name>HAProxy Backend {#PXNAME}: Number of active servers</name><type>DEPENDENT</type><key>haproxy.backend.act[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Number of active servers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].act.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>servers</value></tag></tags></item_prototype><item_prototype><uuid>6c4b8a679428455aadbd307162635e6e</uuid><name>HAProxy Backend {#PXNAME}: Number of backup servers</name><type>DEPENDENT</type><key>haproxy.backend.bck[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Number of backup servers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bck.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>servers</value></tag></tags></item_prototype><item_prototype><uuid>7d5a7b04e836417b96f2301d91fabab4</uuid><name>HAProxy Backend {#PXNAME}: Incoming traffic</name><type>DEPENDENT</type><key>haproxy.backend.bin.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>bps</units><description>Number of bits received by the backend</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bin.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>8</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>network</value></tag></tags></item_prototype><item_prototype><uuid>fc353e7b680648698ecf949f784ca0ce</uuid><name>HAProxy Backend {#PXNAME}: Outgoing traffic</name><type>DEPENDENT</type><key>haproxy.backend.bout.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>bps</units><description>Number of bits sent by the backend</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bout.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>8</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>network</value></tag></tags></item_prototype><item_prototype><uuid>3df452e68f144fc3a8e5ff7644ace606</uuid><name>HAProxy Backend {#PXNAME}: Responses denied per second</name><type>DEPENDENT</type><key>haproxy.backend.dresp.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Responses denied due to security concerns (ACL-restricted).</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dresp.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>responses</value></tag></tags></item_prototype><item_prototype><uuid>5e315f24828d45b285e92971d5456234</uuid><name>HAProxy Backend {#PXNAME}: Errors connection per second</name><type>DEPENDENT</type><key>haproxy.backend.econ.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of requests that encountered an error attempting to connect to a backend server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].econ.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>connections</value></tag></tags></item_prototype><item_prototype><uuid>f1ca728c571e4cf4ac9ebc36e96df27e</uuid><name>HAProxy Backend {#PXNAME}: Response errors per second</name><type>DEPENDENT</type><key>haproxy.backend.eresp.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of requests whose responses yielded an error</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].eresp.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>responses</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>892d6f67eeff4520aadbf4f3841f8174</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.backend.eresp.rate[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.BACK_ERESP.MAX.WARN}</expression><name>HAProxy backend {#PXNAME}: Number of responses with error is high</name><event_name>HAProxy backend {#PXNAME}: Number of responses with error is more than {$HAPROXY.BACK_ERESP.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Number of requests on backend, whose responses yielded an error, is more than {$HAPROXY.BACK_ERESP.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>a32d07355a9c4e9f9f63bac4ef2ef342</uuid><name>HAProxy Backend {#PXNAME}: Number of responses with codes 1xx per second</name><type>DEPENDENT</type><key>haproxy.backend.hrsp_1xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of informational HTTP responses per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_1xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>responses</value></tag></tags></item_prototype><item_prototype><uuid>2b02a86c01a245859ad4305d25569ab0</uuid><name>HAProxy Backend {#PXNAME}: Number of responses with codes 2xx per second</name><type>DEPENDENT</type><key>haproxy.backend.hrsp_2xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of successful HTTP responses per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_2xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>responses</value></tag></tags></item_prototype><item_prototype><uuid>24de211953f8480c9e1118abde731344</uuid><name>HAProxy Backend {#PXNAME}: Number of responses with codes 3xx per second</name><type>DEPENDENT</type><key>haproxy.backend.hrsp_3xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP redirections per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_3xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>responses</value></tag></tags></item_prototype><item_prototype><uuid>221ef133420f4140a17146eb976744eb</uuid><name>HAProxy Backend {#PXNAME}: Number of responses with codes 4xx per second</name><type>DEPENDENT</type><key>haproxy.backend.hrsp_4xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP client errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_4xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>responses</value></tag></tags></item_prototype><item_prototype><uuid>3a3f40a93c184673bdbd220add5ef458</uuid><name>HAProxy Backend {#PXNAME}: Number of responses with codes 5xx per second</name><type>DEPENDENT</type><key>haproxy.backend.hrsp_5xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP server errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_5xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>responses</value></tag></tags></item_prototype><item_prototype><uuid>389e5f77b422419386c2fa21db612697</uuid><name>HAProxy Backend {#PXNAME}: Unassigned requests</name><type>DEPENDENT</type><key>haproxy.backend.qcur[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Current number of requests unassigned in queue.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qcur.first()</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>requests</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>89ccc4b4a55349c7869c2202881dcb2a</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.backend.qcur[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.BACK_QCUR.MAX.WARN}</expression><name>HAProxy backend {#PXNAME}: Current number of requests unassigned in queue is high</name><event_name>HAProxy backend {#PXNAME}: Current number of requests unassigned in queue is more than {$HAPROXY.BACK_QCUR.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Current number of requests on backend unassigned in queue is more than {$HAPROXY.BACK_QCUR.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>a58ff94387824acb81b27cab5cfc680a</uuid><name>HAProxy Backend {#PXNAME}: Time in queue</name><type>DEPENDENT</type><key>haproxy.backend.qtime[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Average time spent in queue (in ms) for the last 1,024 requests</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qtime.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>requests</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>1aff4be13f0f4aee8a512d4b962215a6</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.backend.qtime[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.BACK_QTIME.MAX.WARN}</expression><name>HAProxy backend {#PXNAME}: Average time spent in queue is high</name><event_name>HAProxy backend {#PXNAME}: Average time spent in queue is more than {$HAPROXY.BACK_QTIME.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Average time spent in queue (in ms) for the last 1,024 requests is more than {$HAPROXY.BACK_QTIME.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>7e801fd81fed448db7dd6c6eeaa398d5</uuid><name>HAProxy Backend {#PXNAME}: Responses time</name><type>DEPENDENT</type><key>haproxy.backend.rtime[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Average backend response time (in ms) for the last 1,024 requests</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rtime.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>responses</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>e0dd27ac272a4fbf9495c09f3291db8f</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.backend.rtime[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.BACK_RTIME.MAX.WARN}</expression><name>HAProxy backend {#PXNAME}: Average response time is high</name><event_name>HAProxy backend {#PXNAME}: Average response time is more than {$HAPROXY.BACK_RTIME.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Average backend response time (in ms) for the last 1,024 requests is more than {$HAPROXY.BACK_RTIME.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>5826a63314314ef297c81749561574d2</uuid><name>HAProxy Backend {#PXNAME}: Status</name><type>DEPENDENT</type><key>haproxy.backend.status[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Possible values:
UP - The server is reporting as healthy.
DOWN - The server is reporting as unhealthy and unable to receive requests.
NOLB - You've added http-check disable-on-404 to the backend and the health checked URL has returned an HTTP 404 response.
MAINT - The server has been disabled or put into maintenance mode.
DRAIN - The server has been put into drain mode.
no check - Health checks are not enabled for this server.</description><valuemap><name>Service state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].status.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>10m</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>health</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>51452fd94c12448fab0703e867f69fd2</uuid><expression>count(/HAProxy by Zabbix agent/haproxy.backend.status[{#PXNAME},{#SVNAME}],#5,&quot;eq&quot;,&quot;DOWN&quot;)=5</expression><name>HAProxy backend {#PXNAME}: Server is DOWN</name><opdata>Current value: {ITEM.LASTVALUE1}</opdata><priority>AVERAGE</priority><description>Backend is not available.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>d11c9b4c7027475e897456e712675cc9</uuid><name>HAProxy Backend {#PXNAME}: Sessions per second</name><type>DEPENDENT</type><key>haproxy.backend.stot.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Cumulative number of sessions (end-to-end connections) per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].stot.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>sessions</value></tag></tags></item_prototype><item_prototype><uuid>21cc9c7a1b7042f0bb14eeab91464ae8</uuid><name>HAProxy Backend {#PXNAME}: Weight</name><type>DEPENDENT</type><key>haproxy.backend.weight[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Total effective weight.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].weight.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>balancer</value></tag></tags></item_prototype><item_prototype><uuid>bebad9eb0731474db798eacde7771238</uuid><name>HAProxy Backend {#PXNAME}: Redispatched requests per second</name><type>DEPENDENT</type><key>haproxy.backend.wredis.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times a request was redispatched to a different backend.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wredis.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>requests</value></tag></tags></item_prototype><item_prototype><uuid>0f09a6b800d747f4beed96a25b5cfa49</uuid><name>HAProxy Backend {#PXNAME}: Retried connections per second</name><type>DEPENDENT</type><key>haproxy.backend.wretr.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times a connection was retried.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wretr.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>backend</tag><value>{#PXNAME}</value></tag><tag><tag>component</tag><value>connections</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>70bf1a17304e495dae74b86b93ac9773</uuid><name>HAProxy: Backend {#PXNAME} In/Out traffic</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.bin.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>GRADIENT_LINE</drawtype><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.bout.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>a8518997e8ce40339f5d2384a011f3ba</uuid><name>HAProxy: Backend {#PXNAME} Redispatched requests and retried connections per second</name><graph_items><graph_item><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.wredis.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.wretr.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>50d592985cd74d0a95904971dc40767d</uuid><name>HAProxy: Backend {#PXNAME} Responses by HTTP code</name><type>STACKED</type><graph_items><graph_item><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.hrsp_1xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.hrsp_2xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.hrsp_3xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.hrsp_4xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.backend.hrsp_5xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>haproxy.get.nodes</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#MODE}</lld_macro><path>$.mode</path></lld_macro_path><lld_macro_path><lld_macro>{#PXNAME}</lld_macro><path>$.pxname</path></lld_macro_path><lld_macro_path><lld_macro>{#SVNAME}</lld_macro><path>$.svname</path></lld_macro_path></lld_macro_paths><overrides><override><name>Discard HTTP status codes</name><step>1</step><filter><conditions><condition><macro>{#MODE}</macro><value>tcp</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Number of responses with codes</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override></overrides></discovery_rule><discovery_rule><uuid>69264415d8644ef597affd3dc95d42b2</uuid><name>Frontend discovery</name><type>DEPENDENT</type><key>haproxy.frontend.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#SVNAME}</macro><value>FRONTEND</value><formulaid>B</formulaid></condition><condition><macro>{#MODE}</macro><value>http|tcp</value><formulaid>A</formulaid></condition></conditions></filter><description>Discovery frontends</description><item_prototypes><item_prototype><uuid>434f9c1dd63946d3a181c42bcee94e07</uuid><name>HAProxy Frontend {#PXNAME}: Incoming traffic</name><type>DEPENDENT</type><key>haproxy.frontend.bin.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>bps</units><description>Number of bits received by the frontend</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bin.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>8</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>047ec4b444af4bc38f74eb7fabf2fb94</uuid><name>HAProxy Frontend {#PXNAME}: Outgoing traffic</name><type>DEPENDENT</type><key>haproxy.frontend.bout.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>bps</units><description>Number of bits sent by the frontend</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bout.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>8</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>4542ee3da6334468b6a146083bfa1208</uuid><name>HAProxy Frontend {#PXNAME}: Denied requests per second</name><type>DEPENDENT</type><key>haproxy.frontend.dreq.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Requests denied due to security concerns (ACL-restricted) per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dreq.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>269d5e491e3d41b6be5257c8a8a85efb</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.frontend.dreq.rate[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.FRONT_DREQ.MAX.WARN}</expression><name>HAProxy frontend {#PXNAME}: Number of requests denied is high</name><event_name>HAProxy frontend {#PXNAME}: Number of requests denied is more than {$HAPROXY.FRONT_DREQ.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Number of requests denied due to security concerns (ACL-restricted) is more than {$HAPROXY.FRONT_DREQ.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>2da48ea7b7fb4432b041b9706017778e</uuid><name>HAProxy Frontend {#PXNAME}: Request errors per second</name><type>DEPENDENT</type><key>haproxy.frontend.ereq.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of request errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].ereq.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>8361fb028aed4bd9bf3356249699d424</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.frontend.ereq.rate[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.FRONT_EREQ.MAX.WARN}</expression><name>HAProxy frontend {#PXNAME}: Number of request errors is high</name><event_name>HAProxy frontend {#PXNAME}: Number of request errors is more than {$HAPROXY.FRONT_EREQ.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Number of request errors is more than {$HAPROXY.FRONT_EREQ.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>d4d6d7092c524a4aa9ac83f9506fcb44</uuid><name>HAProxy Frontend {#PXNAME}: Number of responses with codes 1xx per second</name><type>DEPENDENT</type><key>haproxy.frontend.hrsp_1xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of informational HTTP responses per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_1xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>34bb4142cb4c48678f1136ed7a582ff7</uuid><name>HAProxy Frontend {#PXNAME}: Number of responses with codes 2xx per second</name><type>DEPENDENT</type><key>haproxy.frontend.hrsp_2xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of successful HTTP responses per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_2xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>3d6966759c864b0d94daceead022e421</uuid><name>HAProxy Frontend {#PXNAME}: Number of responses with codes 3xx per second</name><type>DEPENDENT</type><key>haproxy.frontend.hrsp_3xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP redirections per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_3xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>3fe3871812254cf0a228b6607f02ea12</uuid><name>HAProxy Frontend {#PXNAME}: Number of responses with codes 4xx per second</name><type>DEPENDENT</type><key>haproxy.frontend.hrsp_4xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP client errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_4xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>85d7aa81598b48ee9d40ce3e5b7fc7ea</uuid><name>HAProxy Frontend {#PXNAME}: Number of responses with codes 5xx per second</name><type>DEPENDENT</type><key>haproxy.frontend.hrsp_5xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP server errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_5xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>24ee024f493e47f4b4405bc469976c8e</uuid><name>HAProxy Frontend {#PXNAME}: Sessions rate</name><type>DEPENDENT</type><key>haproxy.frontend.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Number of sessions created per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rate.first()</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>2290bc0944774d54a89d5b6195f81ad4</uuid><name>HAProxy Frontend {#PXNAME}: Requests rate</name><type>DEPENDENT</type><key>haproxy.frontend.req_rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>HTTP requests per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].req_rate.first()</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>b01d1b02b9da4609acaa278cf5f2ebbd</uuid><name>HAProxy Frontend {#PXNAME}: Established sessions</name><type>DEPENDENT</type><key>haproxy.frontend.scur[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>The current number of established sessions.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].scur.first()</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>4ed338fd24e14aeda1f6058a36371455</uuid><name>HAProxy Frontend {#PXNAME}: Session limits</name><type>DEPENDENT</type><key>haproxy.frontend.slim[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>The most simultaneous sessions that are allowed, as defined by the maxconn setting in the frontend.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].slim.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>5a48a087c07c4cbbaf0332930d59244b</uuid><name>HAProxy Frontend {#PXNAME}: Status</name><type>DEPENDENT</type><key>haproxy.frontend.status[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Possible values: OPEN, STOP.
When Status is OPEN, the frontend is operating normally and ready to receive traffic.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].status.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>6h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags></item_prototype><item_prototype><uuid>4aedda0904954ade92a4aad6460d759b</uuid><name>HAProxy Frontend {#PXNAME}: Session utilization</name><type>CALCULATED</type><key>haproxy.frontend.sutil[{#PXNAME},{#SVNAME}]</key><history>7d</history><value_type>FLOAT</value_type><units>%</units><params>last(//haproxy.frontend.scur[{#PXNAME},{#SVNAME}]) / last(//haproxy.frontend.slim[{#PXNAME},{#SVNAME}]) * 100</params><description>Percentage of sessions used (scur / slim * 100).</description><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>frontend</tag><value>{#PXNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>9af44a07b1a347979492063ee756b025</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.frontend.sutil[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.FRONT_SUTIL.MAX.WARN}</expression><name>HAProxy frontend {#PXNAME}: Session utilization is high</name><event_name>HAProxy frontend {#PXNAME}: Session utilization is more than {$HAPROXY.FRONT_SUTIL.MAX.WARN}% for 5m</event_name><priority>WARNING</priority><description>Alerting on this metric is essential to ensure your server has sufficient capacity to handle all concurrent sessions. Unlike requests, upon reaching the session limit HAProxy will deny additional clients until resource consumption drops. Furthermore, if you find your session usage percentage to be hovering above 80%, it could be time to either modify HAProxy's configuration to allow more sessions, or migrate your HAProxy server to a bigger box.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>30141ef1c5bf4c4a9cca0f8ce2ea3373</uuid><name>HAProxy: Frontend {#PXNAME} Errors and denials per second</name><graph_items><graph_item><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.ereq.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.dreq.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>f6a6bb900b4e45c9af863e6e0aa9af8a</uuid><name>HAProxy: Frontend {#PXNAME} In/Out traffic</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.bin.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>GRADIENT_LINE</drawtype><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.bout.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>065d1ef09a404cf1bcc67f0e987482ab</uuid><name>HAProxy: Frontend {#PXNAME} Requests and sessions per second</name><graph_items><graph_item><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.req_rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>3ce6177d02a045219cec0d348b970860</uuid><name>HAProxy: Frontend {#PXNAME} Responses by HTTP code</name><type>STACKED</type><graph_items><graph_item><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.hrsp_1xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.hrsp_2xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.hrsp_3xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.hrsp_4xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.frontend.hrsp_5xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>haproxy.get.nodes</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#MODE}</lld_macro><path>$.mode</path></lld_macro_path><lld_macro_path><lld_macro>{#PXNAME}</lld_macro><path>$.pxname</path></lld_macro_path><lld_macro_path><lld_macro>{#SVNAME}</lld_macro><path>$.svname</path></lld_macro_path></lld_macro_paths><overrides><override><name>Discard HTTP status codes</name><step>1</step><filter><conditions><condition><macro>{#MODE}</macro><value>tcp</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Number of responses with codes</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override></overrides></discovery_rule><discovery_rule><uuid>a2f7f79b8f094afd93648f62f99d3369</uuid><name>Server discovery</name><type>DEPENDENT</type><key>haproxy.server.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#SVNAME}</macro><value>FRONTEND|BACKEND</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition><condition><macro>{#MODE}</macro><value>http|tcp</value><formulaid>A</formulaid></condition></conditions></filter><description>Discovery servers</description><item_prototypes><item_prototype><uuid>82b1f8a01ba04818a990c336eb7154e3</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Server is active</name><type>DEPENDENT</type><key>haproxy.server.act[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Shows whether the server is active (marked with a Y) or a backup (marked with a -).</description><valuemap><name>Server mode</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].act.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>role</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>3617492e9cfd49b6b5576ed231dc2614</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Server is backup</name><type>DEPENDENT</type><key>haproxy.server.bck[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Shows whether the server is a backup (marked with a Y) or active (marked with a -).</description><valuemap><name>Server mode</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bck.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>role</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>20d5a69a9aa24fc6abf21c1c317ac425</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Incoming traffic</name><type>DEPENDENT</type><key>haproxy.server.bin.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>bps</units><description>Number of bits received by the backend</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bin.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>8</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>7fbc335144b74c08ba6a79a108e8e894</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Outgoing traffic</name><type>DEPENDENT</type><key>haproxy.server.bout.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>bps</units><description>Number of bits sent by the backend</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].bout.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>8</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>network</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>c46228518a3a460b894aea999ca0feab</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Status of last health check</name><type>DEPENDENT</type><key>haproxy.server.check_status[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Status of last health check, one of:
UNK     -&gt; unknown
INI     -&gt; initializing
SOCKERR -&gt; socket error
L4OK    -&gt; check passed on layer 4, no upper layers testing enabled
L4TOUT  -&gt; layer 1-4 timeout
L4CON   -&gt; layer 1-4 connection problem, for example &quot;Connection refused&quot; (tcp rst) or &quot;No route to host&quot; (icmp)
L6OK    -&gt; check passed on layer 6
L6TOUT  -&gt; layer 6 (SSL) timeout
L6RSP   -&gt; layer 6 invalid response - protocol error
L7OK    -&gt; check passed on layer 7
L7OKC   -&gt; check conditionally passed on layer 7, for example 404 with disable-on-404
L7TOUT  -&gt; layer 7 (HTTP/SMTP) timeout
L7RSP   -&gt; layer 7 invalid response - protocol error
L7STS   -&gt; layer 7 response error, for example HTTP 5xx
Notice: If a check is currently running, the last known status will be reported, prefixed with &quot;* &quot;. e. g. &quot;* L7OK&quot;.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].check_status.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>10m</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>1378f45ad65a498aae7b571a69547352</uuid><expression>find(/HAProxy by Zabbix agent/haproxy.server.check_status[{#PXNAME},{#SVNAME}],#3,&quot;regexp&quot;,&quot;(?:L[4-7]OK|^$)&quot;)=0</expression><name>HAProxy {#PXNAME} {#SVNAME}: Health check error</name><opdata>Current value: {ITEM.LASTVALUE1}</opdata><priority>WARNING</priority><description>Please check the server for faults.</description><dependencies><dependency><name>HAProxy {#PXNAME} {#SVNAME}: Server is DOWN</name><expression>count(/HAProxy by Zabbix agent/haproxy.server.status[{#PXNAME},{#SVNAME}],#5,&quot;eq&quot;,&quot;DOWN&quot;)=5</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>537f0b807f784b6cba1032ff77fad499</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Responses denied per second</name><type>DEPENDENT</type><key>haproxy.server.dresp.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Responses denied due to security concerns (ACL-restricted).</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].dresp.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>f688e1e62fa94d1db1d59735094f0bc4</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Errors connection per second</name><type>DEPENDENT</type><key>haproxy.server.econ.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of requests that encountered an error attempting to connect to a backend server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].econ.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>bdcac24a8b1e4dd5a441edb61ca13156</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Response errors per second</name><type>DEPENDENT</type><key>haproxy.server.eresp.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of requests whose responses yielded an error.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].eresp.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>5a982a97f812468eb8e7163f06f0ee77</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.server.eresp.rate[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.SERVER_ERESP.MAX.WARN}</expression><name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with error is high</name><event_name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with error is more than {$HAPROXY.SERVER_ERESP.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Number of requests on server, whose responses yielded an error, is more than {$HAPROXY.SERVER_ERESP.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>71fbb982c23c498fb52b68b3f839c642</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with codes 1xx per second</name><type>DEPENDENT</type><key>haproxy.server.hrsp_1xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of informational HTTP responses per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_1xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>a1aa6301ea1445bdbc509ec31cc9ebfc</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with codes 2xx per second</name><type>DEPENDENT</type><key>haproxy.server.hrsp_2xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of successful HTTP responses per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_2xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>5b5576604886429ca22db333c9886c25</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with codes 3xx per second</name><type>DEPENDENT</type><key>haproxy.server.hrsp_3xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP redirections per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_3xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>3af9ae3041bb4cd588cc6048370d9be7</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with codes 4xx per second</name><type>DEPENDENT</type><key>haproxy.server.hrsp_4xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP client errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_4xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>9f2f6e181dca47ab8e1ae9064ab9fe15</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Number of responses with codes 5xx per second</name><type>DEPENDENT</type><key>haproxy.server.hrsp_5xx.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of HTTP server errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].hrsp_5xx.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>responses</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>8a7257e803b84783a8c9964807a336a5</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Server was selected per second</name><type>DEPENDENT</type><key>haproxy.server.lbtot.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times that server was selected.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].lbtot.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>03c6d54204104fa0a320ff76204fc825</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Unassigned requests</name><type>DEPENDENT</type><key>haproxy.server.qcur[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Current number of requests unassigned in queue.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qcur.first()</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>b88e0b4baa2e4738a161a7fc437d6e1c</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.server.qcur[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.SERVER_QCUR.MAX.WARN}</expression><name>HAProxy {#PXNAME} {#SVNAME}: Current number of requests unassigned in queue is high</name><event_name>HAProxy {#PXNAME} {#SVNAME}: Current number of requests unassigned in queue is more than {$HAPROXY.SERVER_QCUR.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Current number of requests unassigned in queue is more than {$HAPROXY.SERVER_QCUR.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>50a837b40d624492b0248324d8b62694</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Configured maxqueue</name><type>DEPENDENT</type><key>haproxy.server.qlimit[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Configured maxqueue for the server, or nothing in the value is 0 (default, meaning no limit).</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qlimit.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>6h</parameter></parameters></step><step><type>MATCHES_REGEX</type><parameters><parameter>^\d+$</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>queues</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>58c074ebc26145a6847d425d51f7cbca</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Time in queue</name><type>DEPENDENT</type><key>haproxy.server.qtime[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Average time spent in queue (in ms) for the last 1,024 requests.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].qtime.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>abf3d9e3f6fa43d8bf722bcc58c37388</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.server.qtime[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.SERVER_QTIME.MAX.WARN}</expression><name>HAProxy {#PXNAME} {#SVNAME}: Average time spent in queue is high</name><event_name>HAProxy {#PXNAME} {#SVNAME}: Average time spent in queue is more than {$HAPROXY.SERVER_QTIME.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Average time spent in queue (in ms) for the last 1,024 requests is more than {$HAPROXY.SERVER_QTIME.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>25c22d3eca2d4eb7b83791d36edcf470</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Responses time</name><type>DEPENDENT</type><key>haproxy.server.rtime[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Average server response time (in ms) for the last 1,024 requests.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].rtime.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>51ae2aca459b453cb433c5cc0f043a25</uuid><expression>min(/HAProxy by Zabbix agent/haproxy.server.rtime[{#PXNAME},{#SVNAME}],5m)&gt;{$HAPROXY.SERVER_RTIME.MAX.WARN}</expression><name>HAProxy {#PXNAME} {#SVNAME}: Average response time is high</name><event_name>HAProxy {#PXNAME} {#SVNAME}: Average response time is more than {$HAPROXY.SERVER_RTIME.MAX.WARN} for 5m</event_name><priority>WARNING</priority><description>Average server response time (in ms) for the last 1,024 requests is more than {$HAPROXY.SERVER_RTIME.MAX.WARN}.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>973e886a54374bd4815f71d9f9174e80</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Status</name><type>DEPENDENT</type><key>haproxy.server.status[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><valuemap><name>Service state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].status.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>10m</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>ec64ec00aa164ac09faf90794264907a</uuid><expression>count(/HAProxy by Zabbix agent/haproxy.server.status[{#PXNAME},{#SVNAME}],#5,&quot;eq&quot;,&quot;DOWN&quot;)=5</expression><name>HAProxy {#PXNAME} {#SVNAME}: Server is DOWN</name><opdata>Current value: {ITEM.LASTVALUE1}</opdata><priority>WARNING</priority><description>Server is not available.</description><tags><tag><tag>scope</tag><value>avialability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>6f5c20d65ba34afbb47cd65af1d1b368</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Sessions per second</name><type>DEPENDENT</type><key>haproxy.server.stot.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Cumulative number of sessions (end-to-end connections) per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].stot.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>02605cd644e14e2398af89433a6d976d</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Weight</name><type>DEPENDENT</type><key>haproxy.server.weight[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><description>Effective weight.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].weight.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>balancer</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>606acc119e0d4d9c934e200e037434fe</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Redispatched requests per second</name><type>DEPENDENT</type><key>haproxy.server.wredis.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times a request was redispatched to a different backend.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wredis.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>requests</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>1e2188320b834562b6b33e96f90a5b44</uuid><name>HAProxy {#PXNAME} {#SVNAME}: Retried connections per second</name><type>DEPENDENT</type><key>haproxy.server.wretr.rate[{#PXNAME},{#SVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times a connection was retried.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.[?(@.pxname == '{#PXNAME}' &amp;&amp; @.svname == '{#SVNAME}')].wretr.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$HAPROXY.STATS.SCHEME}://{HOST.CONN}:{$HAPROXY.STATS.PORT}/{$HAPROXY.STATS.PATH};csv&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag><tag><tag>server</tag><value>{#PXNAME}</value></tag><tag><tag>service</tag><value>{#SVNAME}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>15210cbf31ab459ca77d35206255f317</uuid><name>HAProxy: {#PXNAME} {#SVNAME} In/Out traffic</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.bin.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>GRADIENT_LINE</drawtype><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.bout.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>09fb856698f441b29103e3b8c8bcb8dd</uuid><name>HAProxy: {#PXNAME} {#SVNAME} Responses by HTTP code</name><type>STACKED</type><graph_items><graph_item><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.hrsp_1xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.hrsp_2xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.hrsp_3xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.hrsp_4xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.hrsp_5xx.rate[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>e3e10b66deb14b33a436481cc34eeb84</uuid><name>HAProxy: {#PXNAME} {#SVNAME} Response time and time in queue</name><graph_items><graph_item><color>1A7C11</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.rtime[{#PXNAME},{#SVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HAProxy by Zabbix agent</host><key>haproxy.server.qtime[{#PXNAME},{#SVNAME}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>haproxy.get.nodes</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#MODE}</lld_macro><path>$.mode</path></lld_macro_path><lld_macro_path><lld_macro>{#PXNAME}</lld_macro><path>$.pxname</path></lld_macro_path><lld_macro_path><lld_macro>{#SVNAME}</lld_macro><path>$.svname</path></lld_macro_path></lld_macro_paths><overrides><override><name>Discard HTTP status codes</name><step>1</step><filter><conditions><condition><macro>{#MODE}</macro><value>tcp</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Number of responses with codes</value><status>ENABLED</status><discover>NO_DISCOVER</discover></operation></operations></override></overrides></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>software</value></tag><tag><tag>target</tag><value>haproxy</value></tag></tags><macros><macro><macro>{$HAPROXY.BACK_ERESP.MAX.WARN}</macro><value>10</value><description>Maximum of responses with error on BACKEND for trigger expression.</description></macro><macro><macro>{$HAPROXY.BACK_QCUR.MAX.WARN}</macro><value>10</value><description>Maximum number of requests on BACKEND unassigned in queue for trigger expression.</description></macro><macro><macro>{$HAPROXY.BACK_QTIME.MAX.WARN}</macro><value>10s</value><description>Maximum of average time spent in queue on BACKEND for trigger expression.</description></macro><macro><macro>{$HAPROXY.BACK_RTIME.MAX.WARN}</macro><value>10s</value><description>Maximum of average BACKEND response time for trigger expression.</description></macro><macro><macro>{$HAPROXY.FRONT_DREQ.MAX.WARN}</macro><value>10</value><description>The HAProxy maximum denied requests for trigger expression.</description></macro><macro><macro>{$HAPROXY.FRONT_EREQ.MAX.WARN}</macro><value>10</value><description>The HAProxy maximum number of request errors for trigger expression.</description></macro><macro><macro>{$HAPROXY.FRONT_SUTIL.MAX.WARN}</macro><value>80</value><description>Maximum of session usage percentage on frontend for trigger expression.</description></macro><macro><macro>{$HAPROXY.RESPONSE_TIME.MAX.WARN}</macro><value>10s</value><description>The HAProxy stats page maximum response time in seconds for trigger expression.</description></macro><macro><macro>{$HAPROXY.SERVER_ERESP.MAX.WARN}</macro><value>10</value><description>Maximum of responses with error on server for trigger expression.</description></macro><macro><macro>{$HAPROXY.SERVER_QCUR.MAX.WARN}</macro><value>10</value><description>Maximum number of requests on server unassigned in queue for trigger expression.</description></macro><macro><macro>{$HAPROXY.SERVER_QTIME.MAX.WARN}</macro><value>10s</value><description>Maximum of average time spent in queue on server for trigger expression.</description></macro><macro><macro>{$HAPROXY.SERVER_RTIME.MAX.WARN}</macro><value>10s</value><description>Maximum of average server response time for trigger expression.</description></macro><macro><macro>{$HAPROXY.STATS.PATH}</macro><value>stats</value><description>The path of HAProxy stats page.</description></macro><macro><macro>{$HAPROXY.STATS.PORT}</macro><value>8404</value><description>The port of the HAProxy stats host or container.</description></macro><macro><macro>{$HAPROXY.STATS.SCHEME}</macro><value>http</value><description>The scheme of HAProxy stats page(http/https).</description></macro></macros><dashboards><dashboard><uuid>6d515de988274ac6b31938eebd175973</uuid><name>HAProxy Backend performance</name><pages><page><widgets><widget><type>GRAPH_PROTOTYPE</type><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: Backend {#PXNAME} Redispatched requests and retried connections per second</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>5</y><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: Backend {#PXNAME} Responses by HTTP code</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>10</y><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: Backend {#PXNAME} In/Out traffic</name></value></field></fields></widget></widgets></page></pages></dashboard><dashboard><uuid>7c4decb2fefc4cfe9c4a3f8717d710ca</uuid><name>HAProxy Frontend performance</name><pages><page><widgets><widget><type>GRAPH_PROTOTYPE</type><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: Frontend {#PXNAME} Requests and sessions per second</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>5</y><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: Frontend {#PXNAME} Errors and denials per second</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>10</y><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: Frontend {#PXNAME} Responses by HTTP code</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>15</y><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: Frontend {#PXNAME} In/Out traffic</name></value></field></fields></widget></widgets></page></pages></dashboard><dashboard><uuid>ebc5a517fa544fada42550059c014c5b</uuid><name>HAProxy Server performance</name><pages><page><widgets><widget><type>GRAPH_PROTOTYPE</type><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: {#PXNAME} {#SVNAME} Response time and time in queue</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>5</y><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: {#PXNAME} {#SVNAME} Responses by HTTP code</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>10</y><width>24</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>HAProxy by Zabbix agent</host><name>HAProxy: {#PXNAME} {#SVNAME} In/Out traffic</name></value></field></fields></widget></widgets></page></pages></dashboard></dashboards><valuemaps><valuemap><uuid>bf2e9463450d4f4899abcac85cde0a92</uuid><name>Server mode</name><mappings><mapping><value>0</value><newvalue>-</newvalue></mapping><mapping><value>1</value><newvalue>Y</newvalue></mapping></mappings></valuemap><valuemap><uuid>4980ec41c6644ecb9d5b52027a381fd8</uuid><name>Service state</name><mappings><mapping><value>0</value><newvalue>Down</newvalue></mapping><mapping><value>1</value><newvalue>Up</newvalue></mapping></mappings></valuemap></valuemaps></template></templates></zabbix_export>
