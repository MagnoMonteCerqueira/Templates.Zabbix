<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:15:11Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>738085dde4e749d49199e5e6fd4d56ab</uuid><template>Veeam Backup and Replication by HTTP</template><name>Veeam Backup and Replication by HTTP</name><description>This template is designed to monitor Veeam Backup and Replication version 11.0.
It works without any external scripts and uses the script item.

Setup:
  1. Create a user to monitor the service or use an existing read-only account.
  See [Veeam Help Center](https://helpcenter.veeam.com/docs/backup/vbr_rest/reference/vbr-rest-v1-rev2.html?ver=110#tag/Login/operation/CreateToken!path=grant_type&amp;t=request) for more details. 
  2. Link the template to a host.
  3. Configure macros `{$VEEAM.API.URL}`, `{$VEEAM.USER}`, and `{$VEEAM.PASSWORD}`.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>87224dc0114446689f0fcfc4f0f83c17</uuid><name>Veeam: Get errors</name><type>DEPENDENT</type><key>veeam.get.errors</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>The errors from API requests.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.error</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>veeam.get.metrics</key></master_item><tags><tag><tag>component</tag><value>status</value></tag></tags><triggers><trigger><uuid>3487d31a2aa540009f006c6a4eff8c79</uuid><expression>length(last(/Veeam Backup and Replication by HTTP/veeam.get.errors))&gt;0</expression><name>Veeam: There are errors in requests to API</name><opdata>{ITEM.LASTVALUE1}</opdata><priority>AVERAGE</priority><description>Zabbix has received errors in response to API requests.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>f8ef587e6d204e7da6e27e56b1131ca4</uuid><name>Veeam: Get metrics</name><type>SCRIPT</type><key>veeam.get.metrics</key><delay>5m</delay><history>0d</history><trends>0</trends><value_type>TEXT</value_type><params>var Veeam = {
    params: {},
    token: '',

    setParams: function (params) {
        ['api_endpoint', 'user', 'password', 'created_after'].forEach(function (field) {
            if (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {
                throw 'Required param is not set: ' + field + '.';
            }
        });

        Veeam.params = params;
        if (typeof Veeam.params.api_endpoint === 'string' &amp;&amp; !Veeam.params.api_endpoint.endsWith('/')) {
            Veeam.params.api_endpoint += '/';
        }
        if (Veeam.params.created_after &gt;= 365 || Veeam.params.created_after &lt;= 1) {
            throw 'Incorrect &quot;created_after&quot; parameter given: ' + Veeam.params.created_after + '\nMust be between 1 and 365 days.';
        }
    },

    login: function () {

        var resp, login = new HttpRequest();
        if (typeof Veeam.params.http_proxy !== 'undefined' &amp;&amp; Veeam.params.http_proxy !== '') {
            login.setProxy(Veeam.params.http_proxy);
        }
        login.addHeader('Content-Type: application/x-www-form-urlencoded');
        login.addHeader('x-api-version: 1.0-rev2');
        resp = login.post(Veeam.params.api_endpoint+ 'api/oauth2/token', 
        'grant_type=password&amp;username=' + encodeURIComponent(Veeam.params.user) + '&amp;password='+ encodeURIComponent(Veeam.params.password));

        if (login.getStatus() !== 200 || resp === null) {
            throw 'Login failed with status code ' + login.getStatus() + ': ' + resp;
        }

        try {
            resp =  JSON.parse(resp);
        }
        catch (error) {
            throw 'Failed to parse authentication token for the logon session.'; 
        }
        if (!resp.hasOwnProperty('access_token')) {
            throw 'Auth response does not contain access token.';
        }
        Veeam.token = resp['access_token']

    },

    request: function (url) {
  
        var response, request = new HttpRequest();
        if (typeof Veeam.params.http_proxy !== 'undefined' &amp;&amp; Veeam.params.http_proxy !== '') {
            request.setProxy(Veeam.params.http_proxy);
        }
        if (Veeam.token) {
            request.addHeader('Authorization: Bearer ' + Veeam.token);
            request.addHeader('x-api-version: 1.0-rev2');
            response = request.get(url);
        }
        if (request.getStatus() !== 200 || response === null) {
            throw 'Request failed with status code ' + request.getStatus() + ': ' + response;
        }
        try {
            return JSON.parse(response);
        }
        catch (error) {
            throw 'Failed to parse response received from API.';
        } 
    },

    getMetricsData: function() {
        var data = {};
        ms = 86400000;
        start_date = new Date((new Date().getTime()) - ms * Veeam.params.created_after).toISOString().replace(/\.\d+/, '');
        endpoints = {
            'proxies': 'api/v1/backupInfrastructure/proxies',
            'repositories': 'api/v1/backupInfrastructure/repositories',
            'managedServers': 'api/v1/backupInfrastructure/managedServers',
            'repositories_states': 'api/v1/backupInfrastructure/repositories/states',
            'services': 'api/v1/services',
            'jobs_states': 'api/v1/jobs/states',
            'backups': 'api/v1/backups',
            'backupObjects': 'api/v1/backupObjects',
            'objectRestorePoints': 'api/v1/objectRestorePoints',
            'sessions': 'api/v1/sessions?createdAfterFilter=' + encodeURIComponent(start_date)
        };

        Object.keys(endpoints).forEach(function (key) {
            data[key] = Veeam.request(Veeam.params.api_endpoint + endpoints[key]);
        });

        return data;
    }
};

try {
    Veeam.setParams(JSON.parse(value));
    Veeam.login();
    return JSON.stringify(Veeam.getMetricsData());
}
catch (error) {
    error += (String(error).endsWith('.')) ? '' : '.';
    Zabbix.log(3, '[ VEEAM ] ERROR: ' + error);
    return JSON.stringify({'error': error});
}</params><description>The result of API requests is expressed in the JSON.</description><timeout>{$VEEAM.DATA.TIMEOUT}</timeout><parameters><parameter><name>api_endpoint</name><value>{$VEEAM.API.URL}</value></parameter><parameter><name>password</name><value>{$VEEAM.PASSWORD}</value></parameter><parameter><name>user</name><value>{$VEEAM.USER}</value></parameter><parameter><name>created_after</name><value>{$CREATED.AFTER}</value></parameter><parameter><name>http_proxy</name><value>{$VEEAM.HTTP.PROXY}</value></parameter></parameters><tags><tag><tag>component</tag><value>raw</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>02bac44761384a579575c16ef1740f32</uuid><name>Jobs states discovery</name><type>DEPENDENT</type><key>veeam.job.state.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#TYPE}</macro><value>{$JOB.TYPE.MATCHES}</value><formulaid>E</formulaid></condition><condition><macro>{#TYPE}</macro><value>{$JOB.TYPE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>F</formulaid></condition><condition><macro>{#NAME}</macro><value>{$JOB.NAME.MATCHES}</value><formulaid>C</formulaid></condition><condition><macro>{#NAME}</macro><value>{$JOB.NAME.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>D</formulaid></condition><condition><macro>{#JOB.STATUS}</macro><value>{$JOB.STATUS.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#JOB.STATUS}</macro><value>{$JOB.STATUS.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Discovery of the jobs states.</description><item_prototypes><item_prototype><uuid>120a6bf888e74e0c9b054c3bdd50473f</uuid><name>Veeam: Job states [{#NAME}] [{#TYPE}]: Last result</name><type>DEPENDENT</type><key>veeam.jobs.last.result[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>The result of the session. The enums used: `None`, `Success`, `Warning`, `Failed`.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.lastResult</parameter></parameters></step></preprocessing><master_item><key>veeam.jobs.states.raw[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>jobs</value></tag><tag><tag>job</tag><value>{#NAME}</value></tag><tag><tag>workload</tag><value>{#WORKLOAD}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>337b1cafc2674b4fb44e5baf1076183b</uuid><expression>find(/Veeam Backup and Replication by HTTP/veeam.jobs.last.result[{#ID}],,&quot;like&quot;,&quot;Failed&quot;)=1</expression><name>Veeam: Last result job failed</name><event_name>Veeam: Failed job [{#NAME}]</event_name><priority>AVERAGE</priority><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>cd2bc50b71184c5ebf39b75a2dafa483</uuid><name>Veeam: Job states [{#NAME}] [{#TYPE}]: Get data</name><type>DEPENDENT</type><key>veeam.jobs.states.raw[{#ID}]</key><delay>0</delay><history>0d</history><trends>0</trends><value_type>TEXT</value_type><description>Gets raw data from the job states with the name `[{#NAME}]`.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.jobs_states.data.[?(@.id=='{#ID}')].first()</parameter></parameters></step></preprocessing><master_item><key>veeam.get.metrics</key></master_item><tags><tag><tag>component</tag><value>jobs</value></tag><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype><item_prototype><uuid>6f3837f27334466b814728036dd65c1d</uuid><name>Veeam: Job states [{#NAME}] [{#TYPE}]: Status</name><type>DEPENDENT</type><key>veeam.jobs.status[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>The current status of the job. The enums used: `running`, `inactive`, `disabled`.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.status</parameter></parameters></step></preprocessing><master_item><key>veeam.jobs.states.raw[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>jobs</value></tag><tag><tag>job</tag><value>{#NAME}</value></tag><tag><tag>workload</tag><value>{#WORKLOAD}</value></tag></tags></item_prototype></item_prototypes><master_item><key>veeam.get.metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#ID}</lld_macro><path>$.id</path></lld_macro_path><lld_macro_path><lld_macro>{#JOB.STATUS}</lld_macro><path>$.status</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.name</path></lld_macro_path><lld_macro_path><lld_macro>{#REPOSITORY.NAME}</lld_macro><path>$.repositoryName</path></lld_macro_path><lld_macro_path><lld_macro>{#TYPE}</lld_macro><path>$.type</path></lld_macro_path><lld_macro_path><lld_macro>{#WORKLOAD}</lld_macro><path>$.workload</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.jobs_states.data</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>6h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>4b1925bd0295403b8eb0d99b2f947296</uuid><name>Proxies discovery</name><type>DEPENDENT</type><key>veeam.proxies.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#TYPE}</macro><value>{$PROXIES.TYPE.MATCHES}</value><formulaid>C</formulaid></condition><condition><macro>{#TYPE}</macro><value>{$PROXIES.TYPE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>D</formulaid></condition><condition><macro>{#NAME}</macro><value>{$PROXIES.NAME.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#NAME}</macro><value>{$PROXIES.NAME.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Discovery of proxies.</description><item_prototypes><item_prototype><uuid>1daea1ba8ac144fc9e22296720af0b22</uuid><name>Veeam: Proxy [{#NAME}] [{#TYPE}]: Max Task Count</name><type>DEPENDENT</type><key>veeam.proxy.maxtask[{#NAME}]</key><delay>0</delay><history>7d</history><description>The maximum number of concurrent tasks.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.server.maxTaskCount</parameter></parameters></step></preprocessing><master_item><key>veeam.proxy.raw[{#NAME}]</key></master_item><tags><tag><tag>component</tag><value>proxies</value></tag><tag><tag>proxy</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>40d85eb402274838b00765ab91de3896</uuid><name>Veeam: Proxy [{#NAME}] [{#TYPE}]: Get data</name><type>DEPENDENT</type><key>veeam.proxy.raw[{#NAME}]</key><delay>0</delay><history>0d</history><trends>0</trends><value_type>TEXT</value_type><description>Gets raw data collected by the proxy with the name `[{#NAME}]`, `[{#TYPE}]`.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.proxies.data.[?(@.id=='{#ID}')].first()</parameter></parameters></step></preprocessing><master_item><key>veeam.get.metrics</key></master_item><tags><tag><tag>component</tag><value>proxies</value></tag><tag><tag>component</tag><value>raw</value></tag><tag><tag>proxy</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>4c304283f1ad480b8251a72ade27620f</uuid><name>Veeam: Proxy [{#NAME}] [{#TYPE}]: Host name</name><type>DEPENDENT</type><key>veeam.proxy.server.name[{#NAME}]</key><delay>0</delay><history>1d</history><trends>0</trends><value_type>TEXT</value_type><description>The name of the proxy server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.name</parameter></parameters></step></preprocessing><master_item><key>veeam.proxy.server.raw[{#NAME}]</key></master_item><tags><tag><tag>component</tag><value>proxies</value></tag><tag><tag>proxy</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>83e2e092ae1f4e1a9b4a426076f76467</uuid><name>Veeam: Server [{#NAME}]: Get data</name><type>DEPENDENT</type><key>veeam.proxy.server.raw[{#NAME}]</key><delay>0</delay><history>0d</history><trends>0</trends><value_type>TEXT</value_type><description>Gets raw data collected by the proxy server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.managedServers.data.[?(@.id=='{#HOSTID}')].first()</parameter></parameters></step></preprocessing><master_item><key>veeam.get.metrics</key></master_item><tags><tag><tag>component</tag><value>proxies</value></tag><tag><tag>component</tag><value>raw</value></tag><tag><tag>proxy</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>7dca605f25854e89a7e18702e8a48fc7</uuid><name>Veeam: Proxy [{#NAME}] [{#TYPE}]: Host type</name><type>DEPENDENT</type><key>veeam.proxy.server.type[{#NAME}]</key><delay>0</delay><history>1d</history><trends>0</trends><value_type>TEXT</value_type><description>The type of the proxy server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.type</parameter></parameters></step></preprocessing><master_item><key>veeam.proxy.server.raw[{#NAME}]</key></master_item><tags><tag><tag>component</tag><value>proxies</value></tag><tag><tag>proxy</tag><value>{#NAME}</value></tag></tags></item_prototype></item_prototypes><master_item><key>veeam.get.metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#DESCRIPTION}</lld_macro><path>$.description</path></lld_macro_path><lld_macro_path><lld_macro>{#HOSTID}</lld_macro><path>$.server.hostId</path></lld_macro_path><lld_macro_path><lld_macro>{#ID}</lld_macro><path>$.id</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.name</path></lld_macro_path><lld_macro_path><lld_macro>{#TYPE}</lld_macro><path>$.type</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.proxies.data</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>6h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>27db09e55a3c4d638f7c10109d9b76be</uuid><name>Repositories discovery</name><type>DEPENDENT</type><key>veeam.repositories.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#TYPE}</macro><value>{$REPOSITORIES.TYPE.MATCHES}</value><formulaid>C</formulaid></condition><condition><macro>{#TYPE}</macro><value>{$REPOSITORIES.TYPE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>D</formulaid></condition><condition><macro>{#NAME}</macro><value>{$REPOSITORIES.NAME.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#NAME}</macro><value>{$REPOSITORIES.NAME.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Discovery of repositories.</description><item_prototypes><item_prototype><uuid>1c925cfa0a2b46838588471aa58a1591</uuid><name>Veeam: Repository [{#NAME}] [{#TYPE}]: Get data</name><type>DEPENDENT</type><key>veeam.repositories.raw[{#NAME}]</key><delay>0</delay><history>0d</history><trends>0</trends><value_type>TEXT</value_type><description>Gets raw data from repository with the name: `[{#NAME}]`, `[{#TYPE}]`.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.repositories_states.data.[?(@.id=='{#ID}')].first()</parameter></parameters></step></preprocessing><master_item><key>veeam.get.metrics</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag><tag><tag>component</tag><value>repositories</value></tag><tag><tag>repository</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>80a13587e8cc40ba886f987fcde23c13</uuid><name>Veeam: Repository [{#NAME}] [{#TYPE}]: Used space [{#PATH}]</name><type>DEPENDENT</type><key>veeam.repository.capacity[{#NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>!GB</units><description>Used space by repositories expressed in gigabytes (GB).</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.usedSpaceGB</parameter></parameters></step></preprocessing><master_item><key>veeam.repositories.raw[{#NAME}]</key></master_item><tags><tag><tag>component</tag><value>repositories</value></tag><tag><tag>repository</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>882451efee0a4ce8aabc2d2f3955d0be</uuid><name>Veeam: Repository [{#NAME}] [{#TYPE}]: Free space [{#PATH}]</name><type>DEPENDENT</type><key>veeam.repository.free.space[{#NAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>!GB</units><description>Free space of repositories expressed in gigabytes (GB).</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.freeGB</parameter></parameters></step></preprocessing><master_item><key>veeam.repositories.raw[{#NAME}]</key></master_item><tags><tag><tag>component</tag><value>repositories</value></tag><tag><tag>repository</tag><value>{#NAME}</value></tag></tags></item_prototype></item_prototypes><master_item><key>veeam.get.metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#DESCRIPTION}</lld_macro><path>$.description</path></lld_macro_path><lld_macro_path><lld_macro>{#HOSTID}</lld_macro><path>$.server.hostId</path></lld_macro_path><lld_macro_path><lld_macro>{#HOSTNAME}</lld_macro><path>$.hostName</path></lld_macro_path><lld_macro_path><lld_macro>{#ID}</lld_macro><path>$.id</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.name</path></lld_macro_path><lld_macro_path><lld_macro>{#PATH}</lld_macro><path>$.path</path></lld_macro_path><lld_macro_path><lld_macro>{#TYPE}</lld_macro><path>$.type</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.repositories_states.data</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>6h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>06b4e666bede4d4b9f29ab7e94dcb442</uuid><name>Sessions discovery</name><type>DEPENDENT</type><key>veeam.sessions.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#TYPE}</macro><value>{$SESSION.TYPE.MATCHES}</value><formulaid>C</formulaid></condition><condition><macro>{#TYPE}</macro><value>{$SESSION.TYPE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>D</formulaid></condition><condition><macro>{#NAME}</macro><value>{$SESSION.NAME.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#NAME}</macro><value>{$SESSION.NAME.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Discovery of sessions.</description><item_prototypes><item_prototype><uuid>7224f41e5c614268bf6997ad8a49710b</uuid><name>Veeam: Session [{#NAME}] [{#TYPE}]: Message</name><type>DEPENDENT</type><key>veeam.sessions.message[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>A message that explains the session result.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.result.message</parameter></parameters></step></preprocessing><master_item><key>veeam.sessions.raw[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>creation-date</tag><value>{#CREATION.TIME}</value></tag><tag><tag>session</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>3f449f47943b4877a32e89774712510f</uuid><name>Veeam: Session progress percent [{#NAME}] [{#TYPE}]</name><type>DEPENDENT</type><key>veeam.sessions.progress.percent[{#ID}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>The progress of the session expressed as percentage.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.progressPercent</parameter></parameters></step></preprocessing><master_item><key>veeam.sessions.raw[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>creation-date</tag><value>{#CREATION.TIME}</value></tag><tag><tag>session</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>f82984e1180946c6b4bff1f46987555d</uuid><name>Veeam: Session [{#NAME}] [{#TYPE}]: Get data</name><type>DEPENDENT</type><key>veeam.sessions.raw[{#ID}]</key><delay>0</delay><history>0d</history><trends>0</trends><value_type>TEXT</value_type><description>Gets raw data from session with the name: `[{#NAME}]`, `[{#TYPE}]`.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.sessions.data.[?(@.id=='{#ID}')].first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>veeam.get.metrics</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag><tag><tag>session</tag><value>{#NAME}</value></tag></tags></item_prototype><item_prototype><uuid>5fb9dcb62bfe4d1dae94beefa329691d</uuid><name>Veeam: Session [{#NAME}] [{#TYPE}]: Result</name><type>DEPENDENT</type><key>veeam.sessions.result[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>The result of the session. The enums used: `None`, `Success`, `Warning`, `Failed`.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.result.result</parameter></parameters></step></preprocessing><master_item><key>veeam.sessions.raw[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>creation-date</tag><value>{#CREATION.TIME}</value></tag><tag><tag>session</tag><value>{#NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>eeb93a10f3d04eee819587c6fa4ce8f8</uuid><expression>find(/Veeam Backup and Replication by HTTP/veeam.sessions.result[{#ID}],,&quot;like&quot;,&quot;Failed&quot;)=1</expression><name>Veeam: Last result session failed</name><event_name>Veeam: Failed session [{#NAME}]</event_name><priority>AVERAGE</priority><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>8c7092e721eb4f8f8b53a07f0fb710a0</uuid><name>Veeam: Session [{#NAME}] [{#TYPE}]: State</name><type>DEPENDENT</type><key>veeam.sessions.state[{#ID}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>The state of the session. The enums used: `Stopped`, `Starting`, `Stopping`, `Working`, `Pausing`, `Resuming`, `WaitingTape`, `Idle`, `Postprocessing`, `WaitingRepository`, `WaitingSlot`.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.state</parameter></parameters></step></preprocessing><master_item><key>veeam.sessions.raw[{#ID}]</key></master_item><tags><tag><tag>component</tag><value>sessions</value></tag><tag><tag>creation-date</tag><value>{#CREATION.TIME}</value></tag><tag><tag>session</tag><value>{#NAME}</value></tag></tags></item_prototype></item_prototypes><master_item><key>veeam.get.metrics</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#CREATION.TIME}</lld_macro><path>$.creationTime</path></lld_macro_path><lld_macro_path><lld_macro>{#END.TIME}</lld_macro><path>$.endTime</path></lld_macro_path><lld_macro_path><lld_macro>{#ID}</lld_macro><path>$.id</path></lld_macro_path><lld_macro_path><lld_macro>{#NAME}</lld_macro><path>$.name</path></lld_macro_path><lld_macro_path><lld_macro>{#STATE}</lld_macro><path>$.state</path></lld_macro_path><lld_macro_path><lld_macro>{#TYPE}</lld_macro><path>$.sessionType</path></lld_macro_path></lld_macro_paths><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.sessions.data</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>obj = JSON.parse(value, function(key, value) 
    {
      if (key == 'creationTime') return new Date(value).toDateString(); 
      return value;
    });
return JSON.stringify(obj);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>6h</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>software</value></tag><tag><tag>target</tag><value>veeam</value></tag></tags><macros><macro><macro>{$CREATED.AFTER}</macro><value>7</value><description>Returns sessions that are created after chosen days.</description></macro><macro><macro>{$JOB.NAME.MATCHES}</macro><value>.*</value><description>This macro is used in discovery rule to evaluate the states of jobs.</description></macro><macro><macro>{$JOB.NAME.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in discovery rule to evaluate the states of jobs.</description></macro><macro><macro>{$JOB.STATUS.MATCHES}</macro><value>.*</value><description>This macro is used in discovery rule to evaluate the states of jobs.</description></macro><macro><macro>{$JOB.STATUS.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in discovery rule to evaluate the states of jobs.</description></macro><macro><macro>{$JOB.TYPE.MATCHES}</macro><value>.*</value><description>This macro is used in discovery rule to evaluate the states of jobs.</description></macro><macro><macro>{$JOB.TYPE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in discovery rule to evaluate the states of jobs.</description></macro><macro><macro>{$PROXIES.NAME.MATCHES}</macro><value>.*</value><description>This macro is used in proxies discovery rule.</description></macro><macro><macro>{$PROXIES.NAME.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in proxies discovery rule.</description></macro><macro><macro>{$PROXIES.TYPE.MATCHES}</macro><value>.*</value><description>This macro is used in proxies discovery rule.</description></macro><macro><macro>{$PROXIES.TYPE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in proxies discovery rule.</description></macro><macro><macro>{$REPOSITORIES.NAME.MATCHES}</macro><value>.*</value><description>This macro is used in repositories discovery rule.</description></macro><macro><macro>{$REPOSITORIES.NAME.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in repositories discovery rule.</description></macro><macro><macro>{$REPOSITORIES.TYPE.MATCHES}</macro><value>.*</value><description>This macro is used in repositories discovery rule.</description></macro><macro><macro>{$REPOSITORIES.TYPE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in repositories discovery rule.</description></macro><macro><macro>{$SESSION.NAME.MATCHES}</macro><value>.*</value><description>This macro is used in discovery rule to evaluate sessions.</description></macro><macro><macro>{$SESSION.NAME.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in discovery rule to evaluate sessions.</description></macro><macro><macro>{$SESSION.TYPE.MATCHES}</macro><value>.*</value><description>This macro is used in discovery rule to evaluate sessions.</description></macro><macro><macro>{$SESSION.TYPE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in discovery rule to evaluate sessions.</description></macro><macro><macro>{$VEEAM.API.URL}</macro><value>https://localhost:9419</value><description>The Veeam API endpoint is a URL in the format `&lt;scheme&gt;://&lt;host&gt;:&lt;port&gt;`.</description></macro><macro><macro>{$VEEAM.DATA.TIMEOUT}</macro><value>10</value><description>A response timeout for the API.</description></macro><macro><macro>{$VEEAM.HTTP.PROXY}</macro><description>Sets the HTTP proxy to `http_proxy` value. If this parameter is empty, then no proxy is used.</description></macro><macro><macro>{$VEEAM.PASSWORD}</macro><type>SECRET_TEXT</type><description>The `password` of the Veeam Backup and Replication account. It is used to obtain an access token.</description></macro><macro><macro>{$VEEAM.USER}</macro><type>SECRET_TEXT</type><description>The `username` of the Veeam Backup and Replication account. It is used to obtain an access token.</description></macro></macros></template></templates></zabbix_export>
