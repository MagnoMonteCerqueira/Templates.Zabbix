<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:15:08Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>884bdbeea93c4be0a11a2c92a5f8adce</uuid><template>HashiCorp Consul Node by HTTP</template><name>HashiCorp Consul Node by HTTP</name><description>Get HashiCorp Consul Node metrics by HTTP agent from metrics endpoint.

Don't forget to change macros {$CONSUL.NODE.API.URL}, {$CONSUL.TOKEN}.
Some metrics may not be collected depending on your HashiCorp Consul instance version and configuration.
More information about metrics you can find in official documentation: https://www.consul.io/docs/agent/telemetry

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback

Template tooling version used: 0.42</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>9f90fe43daaa43369b000754e1630e41</uuid><name>Consul: ACL: resolves, rate</name><type>DEPENDENT</type><key>consul.acl.resolves.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of ACL resolves per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_acl_ResolveToken_count</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>acl</value></tag></tags></item><item><uuid>1c969d5d7546444e91e883661d63890b</uuid><name>Consul: Catalog: deregister, rate</name><type>DEPENDENT</type><key>consul.catalog.deregister.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of catalog deregister operation per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_catalog_deregister_count</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>catalog</value></tag></tags></item><item><uuid>8f01480896f8426688aee08e2ee0fc20</uuid><name>Consul: Catalog: register, rate</name><type>DEPENDENT</type><key>consul.catalog.register.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of catalog register operation per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_catalog_register_count</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>catalog</value></tag></tags></item><item><uuid>dabcb6819c9444a6a287a6458056ef31</uuid><name>Consul: Number of checks</name><type>DEPENDENT</type><key>consul.checks_number</key><delay>0</delay><history>7d</history><description>Number of checks on current node.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.Stats.agent.checks</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_node_info</key></master_item><tags><tag><tag>component</tag><value>consul</value></tag></tags></item><item><uuid>8e48706f9bda4689bec45f4a80fcc3cb</uuid><name>Consul: Number of check monitors</name><type>DEPENDENT</type><key>consul.check_monitors_number</key><delay>0</delay><history>7d</history><description>Number of check monitors on current node.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.Stats.agent.check_monitors</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_node_info</key></master_item><tags><tag><tag>component</tag><value>consul</value></tag></tags></item><item><uuid>2706adc5e5a64c4480269938e2b90fc1</uuid><name>Consul: Client RPC, per second</name><type>DEPENDENT</type><key>consul.client_rpc</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>Number of times per second whenever a Consul agent in client mode makes an RPC request to a Consul server.
This gives a measure of how much a given agent is loading the Consul servers.
This is only generated by agents in client mode, not Consul servers.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_client_rpc</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>rpc</value></tag></tags></item><item><uuid>3fd30bfd7c324c53a346974c9f38e9db</uuid><name>Consul: Client RPC failed ,per second</name><type>DEPENDENT</type><key>consul.client_rpc_failed</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>Number of times per second whenever a Consul agent in client mode makes an RPC request to a Consul server and fails.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_client_rpc_failed</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>rpc</value></tag></tags></item><item><uuid>12b9bbac571b431ea06a13a7154ef673</uuid><name>Consul: Process CPU seconds, total</name><type>DEPENDENT</type><key>consul.cpu_seconds_total.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Total user and system CPU time spent in seconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_cpu_seconds_total</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cpu</value></tag></tags></item><item><uuid>7513b847ac754a25972adb3547a871ca</uuid><name>Consul: GC pause, p50</name><type>DEPENDENT</type><key>consul.gc_pause.p50</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>The 50 percentile (median) for the number of nanoseconds consumed by stop-the-world garbage collection (GC) pauses since Consul started, in milliseconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_runtime_gc_pause_ns{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1.0E-9</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>gs</value></tag></tags></item><item><uuid>3ec74713a835498197e59df962e27bab</uuid><name>Consul: GC pause, p90</name><type>DEPENDENT</type><key>consul.gc_pause.p90</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>The 90 percentile for the number of nanoseconds consumed by stop-the-world garbage collection (GC) pauses since Consul started, in milliseconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_runtime_gc_pause_ns{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1.0E-9</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>gc</value></tag></tags></item><item><uuid>2b3cbe778f1c4d858e43320b8c25960d</uuid><name>Consul: Get local services</name><type>SCRIPT</type><key>consul.get_local_services</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><params>var Consul = {
    setParams: function (params) {
        ['api_endpoint', 'token'].forEach(function (field) {
            if (typeof params !== 'object' || typeof params[field] === 'undefined' || params[field] === '') {
                throw 'Required param is not set: &quot;' + field + '&quot;.';
            }
        });

        Consul.params = params;
        if (typeof Consul.params.api_endpoint === 'string' &amp;&amp; !Consul.params.api_endpoint.endsWith('/')) {
            Consul.params.api_endpoint += '/';
        }
    },

    request: function (query) {
        var response,
            request = new HttpRequest(),
            url = Consul.params.api_endpoint + query;

        request.addHeader('Content-Type: application/json');
        request.addHeader('X-Consul-Token: ' + Consul.params.token);

        Zabbix.log(4, '[ Consul ] Sending request: ' + url);
        response = request.get(url);

        Zabbix.log(4, '[ Consul ] Received response with status code ' + request.getStatus() + ': ' + response);

        if (response !== null) {
            try {
                response = JSON.parse(response);
            }
            catch (error) {
                throw 'Failed to parse response received from Consul Agent API.';
            }
        }

        return {
            status: request.getStatus(),
            response: response
        };
    },

    getServices: function () {
        var result = Consul.request('v1/agent/services'),
            services = [];

        if (typeof result.response !== 'object' || result.status != 200) {
            throw 'Cannot get service list from Consul Agent API.';
        }

        Object.keys(result.response).forEach(function (service) {
            services.push(result.response[service]['ID']);
        });

        return services;
    },

    getServiceStats: function (service_id) {
        var result = Consul.request('v1/agent/health/service/id/' + service_id);

        if (typeof result.response !== 'object' || [200, 429, 503].indexOf(result.status) === -1) {
            throw 'Cannot get service info from Consul Agent API.';
        }

        return result.response;
    }
}

try {
    Consul.setParams(JSON.parse(value));

    var services = Consul.getServices(),
        result = [];

    services.forEach(function (service) {
        var service_stats = Consul.getServiceStats(service);

        result.push({
            'id': service,
            'name': service_stats['Service']['Service'],
            'status': service_stats['AggregatedStatus'],
            'checks': service_stats['Checks'],
            'namespace': typeof service_stats['Service']['Namespace'] === 'undefined' ? 'None' : service_stats['Service']['Namespace']
        });
    });

    return JSON.stringify(result);
}
catch (error) {
    error += ((String(error).endsWith('.')) ? '' : '.');
    Zabbix.log(3, '[ Consul ] ERROR: ' + error);

    return JSON.stringify({error: error + ' Check debug log for more information.'});
}</params><description>Get all the services that are registered with the local agent and their status.</description><timeout>15s</timeout><parameters><parameter><name>api_endpoint</name><value>{$CONSUL.NODE.API.URL}</value></parameter><parameter><name>token</name><value>{$CONSUL.TOKEN}</value></parameter></parameters><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>f2fb4c76b4974319846d4773cfb64b0c</uuid><name>Consul: Get local services check</name><type>DEPENDENT</type><key>consul.get_local_services.check</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Data collection check.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.error</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_local_services</key></master_item><tags><tag><tag>component</tag><value>status</value></tag></tags><triggers><trigger><uuid>5cf09b213c044033af1d8e1d8821bc38</uuid><expression>length(last(/HashiCorp Consul Node by HTTP/consul.get_local_services.check))&gt;0</expression><name>Consul: Failed to get local services</name><priority>WARNING</priority><description>Failed to get local services. Check debug log for more information.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>c0e199969c19444fb68fd8497fcab047</uuid><name>Consul: Get instance metrics</name><type>HTTP_AGENT</type><key>consul.get_metrics</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Get raw metrics from Consul instance /metrics endpoint.</description><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters></step></preprocessing><timeout>15s</timeout><url>{$CONSUL.NODE.API.URL}/v1/agent/metrics?format=prometheus</url><headers><header><name>X-Consul-Token</name><value>{$CONSUL.TOKEN}</value></header></headers><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>7e2689de8d78499fb52d718989b7ec8b</uuid><name>Consul: Get node info</name><type>HTTP_AGENT</type><key>consul.get_node_info</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Get configuration and member information of the local agent.</description><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters></step></preprocessing><timeout>15s</timeout><url>{$CONSUL.NODE.API.URL}/v1/agent/self</url><headers><header><name>X-Consul-Token</name><value>{$CONSUL.TOKEN}</value></header></headers><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>2bcd79ab2c0a4ef88c0d2386d9bec1ff</uuid><name>Consul: Goroutine count</name><type>DEPENDENT</type><key>consul.goroutines</key><delay>0</delay><history>7d</history><description>The number of Goroutines on Consul instance.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>go_goroutines</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>goroutines</value></tag></tags></item><item><uuid>6613be65c0794e76a210263810a4692d</uuid><name>Consul: KV store: apply, p50</name><type>DEPENDENT</type><key>consul.kvs.apply.p50</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 percentile (median) for the time it takes to complete an update to the KV store.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_kvs_apply{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>kvs</value></tag></tags></item><item><uuid>2dc05550018c4d67bab58bd8f86bc365</uuid><name>Consul: KV store: apply, p90</name><type>DEPENDENT</type><key>consul.kvs.apply.p90</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile for the time it takes to complete an update to the KV store.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_kvs_apply{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>kvs</value></tag></tags></item><item><uuid>978bf96102d0411f8c18e92652a003c4</uuid><name>Consul: KV store: apply, rate</name><type>DEPENDENT</type><key>consul.kvs.apply.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of updates to the KV store per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_kvs_apply_count</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>kvs</value></tag></tags></item><item><uuid>1b21a53ce7144350af8b50e57c3acf6b</uuid><name>Consul: Memberlist: degraded</name><type>DEPENDENT</type><key>consul.memberlist.degraded</key><delay>0</delay><history>7d</history><description>This metric counts the number of times the Consul agent has performed failure detection on another agent at a slower probe rate.
The agent uses its own health metric as an indicator to perform this action.
If its health score is low, it means that the node is healthy, and vice versa.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_degraded</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>health</value></tag></tags></item><item><uuid>0a3b25abf7de4212bda5c92c13341593</uuid><name>Consul: Memberlist: gossip, p90</name><type>DEPENDENT</type><key>consul.memberlist.dispatch_log.p90</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The 90 percentile for the number of gossips (messages) broadcasted to a set of randomly selected nodes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_gossip{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>gossip</value></tag></tags></item><item><uuid>592fb528d5c14491892c496f7ce9a60b</uuid><name>Consul: Memberlist: gossip, p50</name><type>DEPENDENT</type><key>consul.memberlist.gossip.p50</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 for the number of gossips (messages) broadcasted to a set of randomly selected nodes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_gossip{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>gossip</value></tag></tags></item><item><uuid>32259a799f6949e4be4f7d8722a2dbbe</uuid><name>Consul: Memberlist: health score</name><type>DEPENDENT</type><key>consul.memberlist.health_score</key><delay>0</delay><history>7d</history><description>This metric describes a node's perception of its own health based on how well it is meeting the soft real-time requirements of the protocol.
This metric ranges from 0 to 8, where 0 indicates &quot;totally healthy&quot;.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_health_score</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>health</value></tag></tags><triggers><trigger><uuid>f964a907c55148bf80991352c7f2ae83</uuid><expression>max(/HashiCorp Consul Node by HTTP/consul.memberlist.health_score,#3)&gt;{$CONSUL.NODE.HEALTH_SCORE.MAX.HIGH}</expression><name>Consul: Node's health score is critical</name><event_name>Consul: Node's health score is over {$CONSUL.NODE.HEALTH_SCORE.MAX.HIGH}</event_name><priority>AVERAGE</priority><description>This metric ranges from 0 to 8, where 0 indicates &quot;totally healthy&quot;.
This health score is used to scale the time between outgoing probes, and higher scores translate into longer probing intervals.
For more details see section IV of the Lifeguard paper: https://arxiv.org/pdf/1707.00788.pdf</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger><trigger><uuid>1fedc58f33ed4b9797fb37acfceba192</uuid><expression>max(/HashiCorp Consul Node by HTTP/consul.memberlist.health_score,#3)&gt;{$CONSUL.NODE.HEALTH_SCORE.MAX.WARN}</expression><name>Consul: Node's health score is warning</name><event_name>Consul: Node's health score is too high (over {$CONSUL.NODE.HEALTH_SCORE.MAX.WARN} for 3m)</event_name><priority>WARNING</priority><description>This metric ranges from 0 to 8, where 0 indicates &quot;totally healthy&quot;.
This health score is used to scale the time between outgoing probes, and higher scores translate into longer probing intervals.
For more details see section IV of the Lifeguard paper: https://arxiv.org/pdf/1707.00788.pdf</description><dependencies><dependency><name>Consul: Node's health score is critical</name><expression>max(/HashiCorp Consul Node by HTTP/consul.memberlist.health_score,#3)&gt;{$CONSUL.NODE.HEALTH_SCORE.MAX.HIGH}</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>1ebba76d809b415488fb0591afeaef6f</uuid><name>Consul: Memberlist: msg alive</name><type>DEPENDENT</type><key>consul.memberlist.msg.alive</key><delay>0</delay><history>7d</history><description>This metric counts the number of alive Consul agents, that the agent has mapped out so far, based on the message information given by the network layer.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_msg_alive</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>health</value></tag></tags></item><item><uuid>9768a2ce01de4bfe92a17935791b4da4</uuid><name>Consul: Memberlist: msg dead</name><type>DEPENDENT</type><key>consul.memberlist.msg.dead</key><delay>0</delay><history>7d</history><description>This metric counts the number of times a Consul agent has marked another agent to be a dead node.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_msg_dead</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>health</value></tag></tags></item><item><uuid>43ea04dd91ba4c208e9ad09bbc0016af</uuid><name>Consul: Memberlist: msg suspect</name><type>DEPENDENT</type><key>consul.memberlist.msg.suspect</key><delay>0</delay><history>7d</history><description>The number of times a Consul agent suspects another as failed while probing during gossip protocol.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_msg_suspect</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>health</value></tag></tags></item><item><uuid>8b3ee806fcf34a46aa61cbfee460d9f7</uuid><name>Consul: Memberlist: probe node, p50</name><type>DEPENDENT</type><key>consul.memberlist.probe_node.p50</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 percentile (median) for the time taken to perform a single round of failure detection on a select Consul agent.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_probeNode{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memberlist</value></tag></tags></item><item><uuid>9a178ba5f7fa4d9a8ecfddfe84257ab6</uuid><name>Consul: Memberlist: probe node, p90</name><type>DEPENDENT</type><key>consul.memberlist.probe_node.p90</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile for the time taken to perform a single round of failure detection on a select Consul agent.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_probeNode{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memberlist</value></tag></tags></item><item><uuid>ef688e2ad7494a08a535c019fe19c0a9</uuid><name>Consul: Memberlist: push pull node, p50</name><type>DEPENDENT</type><key>consul.memberlist.push_pull_node.p50</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The 50 percentile (median) for the number of Consul agents that have exchanged state with this agent.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_pushPullNode{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memberlist</value></tag></tags></item><item><uuid>ae085470652242ba8a2077bebee7a2c7</uuid><name>Consul: Memberlist: push pull node, p90</name><type>DEPENDENT</type><key>consul.memberlist.push_pull_node.p90</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile for the number of Consul agents that have exchanged state with this agent.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_pushPullNode{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memberlist</value></tag></tags></item><item><uuid>a5d4e2e589564cc9898537c0a8c6a21a</uuid><name>Consul: TCP connections, accepted per second</name><type>DEPENDENT</type><key>consul.memberlist.tcp_accept</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>This metric counts the number of times a Consul agent has accepted an incoming TCP stream connection per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_tcp_accept</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tcp</value></tag></tags></item><item><uuid>df0a553d811444d1ab767563a1d513a3</uuid><name>Consul: TCP connections, per second</name><type>DEPENDENT</type><key>consul.memberlist.tcp_connect</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>This metric counts the number of times a Consul agent has initiated a push/pull sync with an other agent per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_tcp_connect</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tcp</value></tag></tags></item><item><uuid>ba12a6464199443d8d73164a8dd87f4f</uuid><name>Consul: TCP send bytes, per second</name><type>DEPENDENT</type><key>consul.memberlist.tcp_sent</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>This metric measures the total number of bytes sent by a Consul agent through the TCP protocol per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_tcp_sent</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tcp</value></tag></tags></item><item><uuid>dde5f5c5c7d44f1dbbcddb4a541f41cc</uuid><name>Consul: UDP received bytes, per second</name><type>DEPENDENT</type><key>consul.memberlist.udp_received</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>This metric measures the total number of bytes received by a Consul agent through the UDP protocol per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_udp_received</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>udp</value></tag></tags></item><item><uuid>fa79687f332f4136881577838476c329</uuid><name>Consul: UDP sent bytes, per second</name><type>DEPENDENT</type><key>consul.memberlist.udp_sent</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>This metric measures the total number of bytes sent by a Consul agent through the UDP protocol per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_memberlist_udp_sent</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>udp</value></tag></tags></item><item><uuid>59b28123e8154318aca6a283a1b18391</uuid><name>Consul: Open file descriptors, max</name><type>DEPENDENT</type><key>consul.process_max_fds</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Maximum number of open file descriptors.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_max_fds</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>fds</value></tag></tags></item><item><uuid>38ad7b5d43004865bd823f1dae61395a</uuid><name>Consul: Open file descriptors</name><type>DEPENDENT</type><key>consul.process_open_fds</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of open file descriptors.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_open_fds</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>fds</value></tag></tags></item><item><uuid>8cb242ddeb7f4a0685c706a24f1f85c5</uuid><name>Consul: RSS memory usage</name><type>DEPENDENT</type><key>consul.resident_memory_bytes</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Resident memory size in bytes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_resident_memory_bytes</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>ee52c7cd8a4d452d85564a47c44198a6</uuid><name>Consul: Role</name><type>DEPENDENT</type><key>consul.role</key><delay>0</delay><history>7d</history><description>Role of current Consul agent.</description><valuemap><name>Consul Node role</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.Config.Server</parameter></parameters></step><step><type>BOOL_TO_DECIMAL</type><parameters><parameter/></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_node_info</key></master_item><tags><tag><tag>component</tag><value>consul</value></tag></tags></item><item><uuid>e311c5bdba3e45b68887bc924c7dc206</uuid><name>Consul: Serf member: failed, rate</name><type>DEPENDENT</type><key>consul.serf.member.failed.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Increments when an agent is marked dead.
This can be an indicator of overloaded agents, network problems, or configuration errors where agents cannot connect to each other on the required ports.
Shown as events per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_member_failed</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>serf</value></tag></tags></item><item><uuid>11ba84beb3494504bd514500ef663cff</uuid><name>Consul: Serf member: flap, rate</name><type>DEPENDENT</type><key>consul.serf.member.flap.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Increments when an agent is marked dead and then recovers within a short time period.
This can be an indicator of overloaded agents, network problems, or configuration errors where agents cannot connect to each other on the required ports.
Shown as events per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_member_flap</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>serf</value></tag></tags></item><item><uuid>f4c224ffb17d49029fef6647dde22c90</uuid><name>Consul: Serf member: join, rate</name><type>DEPENDENT</type><key>consul.serf.member.join.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Increments when an agent joins the cluster. If an agent flapped or failed this counter also increments when it re-joins.
Shown as events per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_member_join</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>serf</value></tag></tags></item><item><uuid>3264823eb6774c2092b4ffe4638b61a5</uuid><name>Consul: Serf member: left, rate</name><type>DEPENDENT</type><key>consul.serf.member.left.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Increments when an agent leaves the cluster. Shown as events per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_member_left</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>serf</value></tag></tags></item><item><uuid>53bb4e76cd1840e8ae9a129d592e202e</uuid><name>Consul: Serf member: update, rate</name><type>DEPENDENT</type><key>consul.serf.member.update.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Increments when a Consul agent updates. Shown as events per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_member_update</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>serf</value></tag></tags></item><item><uuid>614e63c6eb254b45a5fb3dbb985c5c3c</uuid><name>Consul: Number of services</name><type>DEPENDENT</type><key>consul.services_number</key><delay>0</delay><history>7d</history><description>Number of services on current node.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.Stats.agent.services</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_node_info</key></master_item><tags><tag><tag>component</tag><value>consul</value></tag></tags></item><item><uuid>d9988aeda27f4fb09ececcde13efc71a</uuid><name>Consul: Snapshot: append line, p50</name><type>DEPENDENT</type><key>consul.snapshot.append_line.p50</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 percentile (median) for the time taken by the Consul agent to append an entry into the existing log.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_snapshot_appendLine{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>snapshot</value></tag></tags></item><item><uuid>0b701ec082e64eb19e60650c13cd44fd</uuid><name>Consul: Snapshot: append line, p90</name><type>DEPENDENT</type><key>consul.snapshot.append_line.p90</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile for the time taken by the Consul agent to append an entry into the existing log.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_snapshot_appendLine{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>snapshot</value></tag></tags></item><item><uuid>d56de8b09978421c9703fe327d03a32b</uuid><name>Consul: Snapshot: append line, rate</name><type>DEPENDENT</type><key>consul.snapshot.append_line.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of snapshot appendLine operations per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_snapshot_appendLine_count</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>snapshot</value></tag></tags></item><item><uuid>12e1a4538f124c4281106b9033b1592d</uuid><name>Consul: Snapshot: compact, p50</name><type>DEPENDENT</type><key>consul.snapshot.compact.p50</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 percentile (median) for the time taken by the Consul agent to compact a log.
This operation occurs only when the snapshot becomes large enough to justify the compaction.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_snapshot_compact{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>snapshot</value></tag></tags></item><item><uuid>c55de444dd30484eb116abfd6f28a9a0</uuid><name>Consul: Snapshot: compact, p90</name><type>DEPENDENT</type><key>consul.snapshot.compact.p90</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile for the time taken by the Consul agent to compact a log.
This operation occurs only when the snapshot becomes large enough to justify the compaction.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_snapshot_compact{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>snapshot</value></tag></tags></item><item><uuid>586be345685b4f0dbbb31f2062bebc01</uuid><name>Consul: Snapshot: compact, rate</name><type>DEPENDENT</type><key>consul.snapshot.compact.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of snapshot compact operations per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_serf_snapshot_compact_count</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>snapshot</value></tag></tags></item><item><uuid>777e8cdd1cfc4f4bba613ef08320f1bb</uuid><name>Consul: Version</name><type>DEPENDENT</type><key>consul.version</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Version of Consul agent.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.Config.Version</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_node_info</key></master_item><tags><tag><tag>component</tag><value>consul</value></tag></tags><triggers><trigger><uuid>fa78d269c01548a083085a3a98e5a59b</uuid><expression>last(/HashiCorp Consul Node by HTTP/consul.version,#1)&lt;&gt;last(/HashiCorp Consul Node by HTTP/consul.version,#2) and length(last(/HashiCorp Consul Node by HTTP/consul.version))&gt;0</expression><name>Consul: Version has been changed</name><event_name>Consul: Version has changed (new version: {ITEM.VALUE})</event_name><priority>INFO</priority><description>Consul version has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>62c0bb503c084f9da10f1be3c716608b</uuid><name>Consul: Virtual memory size</name><type>DEPENDENT</type><key>consul.virtual_memory_bytes</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>Virtual memory size in bytes.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>process_virtual_memory_bytes</parameter><parameter>value</parameter><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>565c42fc4e444433aaafd656813b82f7</uuid><name>HTTP API methods discovery</name><type>DEPENDENT</type><key>consul.http_api_discovery</key><delay>0</delay><description>Discovery HTTP API methods specific metrics.</description><item_prototypes><item_prototype><uuid>4bdb2007bada4840aa453630e701059c</uuid><name>Consul: HTTP request: [&quot;{#HTTP_METHOD}&quot;], p50</name><type>DEPENDENT</type><key>consul.http.api.p50[&quot;{#HTTP_METHOD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 percentile (median) of how long it takes to service the given HTTP request for the given verb.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_api_http{method = &quot;{#HTTP_METHOD}&quot;, quantile = &quot;0.5&quot;}</parameter><parameter>function</parameter><parameter>sum</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>api</value></tag><tag><tag>verb</tag><value>{#HTTP_METHOD}</value></tag></tags></item_prototype><item_prototype><uuid>537b455889d54deab7ada216a89f1cb2</uuid><name>Consul: HTTP request: [&quot;{#HTTP_METHOD}&quot;], p90</name><type>DEPENDENT</type><key>consul.http.api.p90[&quot;{#HTTP_METHOD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile of how long it takes to service the given HTTP request for the given verb.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_api_http{method = &quot;{#HTTP_METHOD}&quot;, quantile = &quot;0.9&quot;}</parameter><parameter>function</parameter><parameter>sum</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>api</value></tag><tag><tag>verb</tag><value>{#HTTP_METHOD}</value></tag></tags></item_prototype><item_prototype><uuid>53cdb47018df434381f7fc3e401a4dee</uuid><name>Consul: HTTP request: [&quot;{#HTTP_METHOD}&quot;], rate</name><type>DEPENDENT</type><key>consul.http.api.rate[&quot;{#HTTP_METHOD}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>Thr number of HTTP request for the given verb per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_api_http_count{method = &quot;{#HTTP_METHOD}&quot;}</parameter><parameter>function</parameter><parameter>sum</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>api</value></tag><tag><tag>verb</tag><value>{#HTTP_METHOD}</value></tag></tags></item_prototype></item_prototypes><master_item><key>consul.get_metrics</key></master_item><preprocessing><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter>consul_api_http{method =~ &quot;.*&quot;}</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>var lookup = {},
    result = [];

JSON.parse(value).forEach(function (item) {
    var http_method = item.labels.method;
    if (!(lookup[http_method])) {
        lookup[http_method] = 1;
        result.push({ &quot;{#HTTP_METHOD}&quot;: http_method });
    }
})

return JSON.stringify(result);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>dd87920ea8184ec793229878407a0993</uuid><name>Local node services discovery</name><type>DEPENDENT</type><key>consul.node_services_lld</key><delay>0</delay><filter><conditions><condition><macro>{#SERVICE_NAME}</macro><value>{$CONSUL.LLD.FILTER.LOCAL_SERVICE_NAME.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#SERVICE_NAME}</macro><value>{$CONSUL.LLD.FILTER.LOCAL_SERVICE_NAME.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition><condition><macro>{#SERVICE_NAMESPACE}</macro><value>{$CONSUL.LLD.FILTER.SERVICE_NAMESPACE.MATCHES}</value><formulaid>C</formulaid></condition><condition><macro>{#SERVICE_NAMESPACE}</macro><value>{$CONSUL.LLD.FILTER.SERVICE_NAMESPACE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>D</formulaid></condition></conditions></filter><description>Discover metrics for services that are registered with the local agent.</description><item_prototypes><item_prototype><uuid>44b0f82769d244d6a20b9ce0b5cc5cb6</uuid><name>Consul: [&quot;{#SERVICE_NAME}&quot;]: Aggregated status</name><type>DEPENDENT</type><key>consul.service.aggregated_state[&quot;{#SERVICE_ID}&quot;]</key><delay>0</delay><history>7d</history><discover>NO_DISCOVER</discover><description>Aggregated values of all health checks for the service instance.</description><valuemap><name>Consul health state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.id == &quot;{#SERVICE_ID}&quot;)].status.first()</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>var state = ['passing', 'warning', 'critical'];

return state.indexOf(value.trim()) === -1 ? 255 : state.indexOf(value.trim());</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_local_services</key></master_item><tags><tag><tag>component</tag><value>service</value></tag><tag><tag>namespace</tag><value>{#SERVICE_NAMESPACE}</value></tag><tag><tag>service</tag><value>{#SERVICE_NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>661551e1e9e94b25b7bd6ea876640b6d</uuid><expression>last(/HashiCorp Consul Node by HTTP/consul.service.aggregated_state[&quot;{#SERVICE_ID}&quot;]) = 2</expression><name>Consul: Aggregated status is 'critical'</name><event_name>Consul: Node's health score is over {$CONSUL.NODE.HEALTH_SCORE.MAX.HIGH}</event_name><priority>AVERAGE</priority><description>Aggregated state of service on the local agent is 'critical'.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>724f6a5e16f64a779a71ad9a9378fb60</uuid><expression>last(/HashiCorp Consul Node by HTTP/consul.service.aggregated_state[&quot;{#SERVICE_ID}&quot;]) = 1</expression><name>Consul: Aggregated status is 'warning'</name><priority>WARNING</priority><description>Aggregated state of service on the local agent is 'warning'.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>20a0ec9e059548a192c9c37bd7aeaaed</uuid><name>Consul: [&quot;{#SERVICE_NAME}&quot;]: Check [&quot;{#SERVICE_CHECK_NAME}&quot;]: Output</name><type>DEPENDENT</type><key>consul.service.check.output[&quot;{#SERVICE_ID}/{#SERVICE_CHECK_ID}&quot;]</key><delay>0</delay><history>7d</history><trends>0</trends><discover>NO_DISCOVER</discover><value_type>CHAR</value_type><description>Current output of health check for the service.</description><valuemap><name>Consul health state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.id == &quot;{#SERVICE_ID}&quot;)].checks[?(@.CheckID == &quot;{#SERVICE_CHECK_ID}&quot;)].Output.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_local_services</key></master_item><tags><tag><tag>check</tag><value>{#SERVICE_CHECK_NAME}</value></tag><tag><tag>component</tag><value>service</value></tag><tag><tag>namespace</tag><value>{#SERVICE_NAMESPACE}</value></tag><tag><tag>service</tag><value>{#SERVICE_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>3b67eb4df3dc4d9b9f4ab4c35a592367</uuid><name>Consul: [&quot;{#SERVICE_NAME}&quot;]: Check [&quot;{#SERVICE_CHECK_NAME}&quot;]: Status</name><type>DEPENDENT</type><key>consul.service.check.state[&quot;{#SERVICE_ID}/{#SERVICE_CHECK_ID}&quot;]</key><delay>0</delay><history>7d</history><discover>NO_DISCOVER</discover><description>Current state of health check for the service.</description><valuemap><name>Consul health state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.id == &quot;{#SERVICE_ID}&quot;)].checks[?(@.CheckID == &quot;{#SERVICE_CHECK_ID}&quot;)].Status.first()</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>var state = ['passing', 'warning', 'critical'];

return state.indexOf(value.trim()) === -1 ? 255 : state.indexOf(value.trim());</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_local_services</key></master_item><tags><tag><tag>check</tag><value>{#SERVICE_CHECK_NAME}</value></tag><tag><tag>component</tag><value>service</value></tag><tag><tag>namespace</tag><value>{#SERVICE_NAMESPACE}</value></tag><tag><tag>service</tag><value>{#SERVICE_NAME}</value></tag></tags></item_prototype></item_prototypes><master_item><key>consul.get_local_services</key></master_item><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var data = JSON.parse(value),
    result = [];

if (data.length === 0) {
    return '[]'
};
data.forEach(function (service) {

    result.push({
        '{#TYPE}': 'aggregated_status',
        '{#SERVICE_NAME}': service.name,
        '{#SERVICE_ID}': service.id,
        '{#SERVICE_NAMESPACE}': service.namespace
    });

    if (service['checks'] !== 0) {
        service['checks'].forEach(function (check) {
            result.push({
                '{#TYPE}': 'service_check',
                '{#SERVICE_NAME}': service.name,
                '{#SERVICE_ID}': service.id,
                '{#SERVICE_NAMESPACE}': service.namespace,
                '{#SERVICE_CHECK_ID}': check[&quot;CheckID&quot;],
                '{#SERVICE_CHECK_NAME}': check[&quot;Name&quot;]
            });
        });
    }

});

return JSON.stringify(result)</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><overrides><override><name>aggregated status</name><step>1</step><filter><conditions><condition><macro>{#TYPE}</macro><value>aggregated_status</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Aggregated status</value><status>ENABLED</status><discover>DISCOVER</discover></operation><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>State</value><status>ENABLED</status><discover>DISCOVER</discover></operation></operations></override><override><name>checks</name><step>2</step><filter><conditions><condition><macro>{#TYPE}</macro><value>service_check</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>ITEM_PROTOTYPE</operationobject><operator>LIKE</operator><value>Check</value><status>ENABLED</status><discover>DISCOVER</discover></operation></operations></override></overrides></discovery_rule><discovery_rule><uuid>6ff39fd6911945b2baa9b762d5a86df2</uuid><name>Raft leader metrics discovery</name><type>DEPENDENT</type><key>consul.raft.leader.discovery</key><delay>0</delay><description>Discover raft metrics for leader nodes.</description><item_prototypes><item_prototype><uuid>440e2a259cd64b918ebfb607961da2c8</uuid><name>Consul: Autopilot healthy</name><type>DEPENDENT</type><key>consul.autopilot.healthy[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Tracks the overall health of the local server cluster. 1 if all servers are healthy, 0 if one or more are unhealthy.</description><valuemap><name>Consul Autopilot healthy</name></valuemap><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_autopilot_healthy</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>health</value></tag></tags></item_prototype><item_prototype><uuid>2e4fd6c5aac84054aef867fc9d8cb3c5</uuid><name>Consul: Raft state: commit time, p50</name><type>DEPENDENT</type><key>consul.raft.commit_time.p50[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 percentile (median) time it takes to commit a new entry to the raft log on the leader, in milliseconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_commitTime{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>9428c07a23364967aef060cf3303b996</uuid><name>Consul: Raft state: commit time, p90</name><type>DEPENDENT</type><key>consul.raft.commit_time.p90[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile time it takes to commit a new entry to the raft log on the leader, in milliseconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_commitTime{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>d54c97e8c4204f8c9f79911440f1bd13</uuid><name>Consul: Raft state: commit, rate</name><type>DEPENDENT</type><key>consul.raft.commit_time.rate[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>The number of commits a new entry to the Raft log on the leader per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_commitTime_count</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>3c56ebe6e022430e861488873ac6f716</uuid><name>Consul: Raft state: dispatch log, p50</name><type>DEPENDENT</type><key>consul.raft.dispatch_log.p50[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 percentile (median) time it takes for the leader to write log entries to disk, in milliseconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_leader_dispatchLog{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>fd1e6c33254b467f8355491dc96889eb</uuid><name>Consul: Raft state: dispatch log, p90</name><type>DEPENDENT</type><key>consul.raft.dispatch_log.p90[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile time it takes for the leader to write log entries to disk, in milliseconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_leader_dispatchLog{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>bc73aeda20a543ac957d1531f25fd5a9</uuid><name>Consul: Raft state: dispatch log, rate</name><type>DEPENDENT</type><key>consul.raft.dispatch_log.rate[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of times a Raft leader writes a log to disk per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_leader_dispatchLog_count</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>526a787732224555adde561ec86844fb</uuid><name>Consul: Raft state: leader last contact, p50</name><type>DEPENDENT</type><key>consul.raft.leader_last_contact.p50[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 50 percentile (median) of how long it takes a leader node to communicate with followers during a leader lease check, in milliseconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_leader_lastContact{quantile=&quot;0.5&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>1ae3d9e4647b4972b1572946a2794715</uuid><name>Consul: Raft state: leader last contact, p90</name><type>DEPENDENT</type><key>consul.raft.leader_last_contact.p90[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>The 90 percentile of how long it takes a leader node to communicate with followers during a leader lease check, in milliseconds.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_leader_lastContact{quantile=&quot;0.9&quot;}</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>return (isNaN(value)) ? 0 : value;</parameter></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype></item_prototypes><master_item><key>consul.get_node_info</key></master_item><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(JSON.parse(value)[&quot;Stats&quot;][&quot;leader&quot;] === true
    ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>f7dfc3d88f5440bea02080205d3f0a9b</uuid><name>Raft server metrics discovery</name><type>DEPENDENT</type><key>consul.raft.server.discovery</key><delay>0</delay><description>Discover raft metrics for server nodes.</description><item_prototypes><item_prototype><uuid>428f1d7924634383aabcd5b37f561a41</uuid><name>Consul: Raft: apply, rate</name><type>DEPENDENT</type><key>consul.raft.apply.rate[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>Incremented whenever a leader first passes a message into the Raft commit process (called an Apply operation).
This metric describes the arrival rate of new logs into Raft per second.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_apply</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>25dd098b98124fa8a9518963c8b4e5ce</uuid><name>Consul: Raft state</name><type>DEPENDENT</type><key>consul.raft.state[{#SINGLETON}]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Current state of Consul agent.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.Stats.raft.state</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>consul.get_node_info</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>7b030c4eac68464e8c454577ab0f0f53</uuid><name>Consul: Raft state: candidate</name><type>DEPENDENT</type><key>consul.raft.state_candidate[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The number of initiated leader elections.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_state_candidate</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype><item_prototype><uuid>e89157e341d8409c96e31a9d541a7fe8</uuid><name>Consul: Raft state: leader</name><type>DEPENDENT</type><key>consul.raft.state_leader[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>Increments when a server becomes a leader.</description><preprocessing><step><type>PROMETHEUS_PATTERN</type><parameters><parameter>consul_raft_state_leader</parameter><parameter>value</parameter><parameter/></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>consul.get_metrics</key></master_item><tags><tag><tag>component</tag><value>raft</value></tag></tags></item_prototype></item_prototypes><master_item><key>consul.get_node_info</key></master_item><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(JSON.parse(value)[&quot;Config&quot;][&quot;Server&quot;] === true
    ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>software</value></tag><tag><tag>target</tag><value>consul</value></tag></tags><macros><macro><macro>{$CONSUL.LLD.FILTER.LOCAL_SERVICE_NAME.MATCHES}</macro><value>.*</value><description>Filter of discoverable discovered services on local node.</description></macro><macro><macro>{$CONSUL.LLD.FILTER.LOCAL_SERVICE_NAME.NOT_MATCHES}</macro><value>CHANGE IF NEEDED</value><description>Filter to exclude discovered services on local node.</description></macro><macro><macro>{$CONSUL.LLD.FILTER.SERVICE_NAMESPACE.MATCHES}</macro><value>.*</value><description>Filter of discoverable discovered service by namespace on local node. Enterprise only, in case of Open Source version Namespace will be set to 'None'.</description></macro><macro><macro>{$CONSUL.LLD.FILTER.SERVICE_NAMESPACE.NOT_MATCHES}</macro><value>CHANGE IF NEEDED</value><description>Filter to exclude discovered service by namespace on local node. Enterprise only, in case of Open Source version Namespace will be set to 'None'.</description></macro><macro><macro>{$CONSUL.NODE.API.URL}</macro><value>http://localhost:8500</value><description>Consul instance URL.</description></macro><macro><macro>{$CONSUL.NODE.HEALTH_SCORE.MAX.HIGH}</macro><value>4</value><description>Maximum acceptable value of node's health score for AVERAGE trigger expression.</description></macro><macro><macro>{$CONSUL.NODE.HEALTH_SCORE.MAX.WARN}</macro><value>2</value><description>Maximum acceptable value of node's health score for WARNING trigger expression.</description></macro><macro><macro>{$CONSUL.OPEN.FDS.MAX.WARN}</macro><value>90</value><description>Maximum percentage of used file descriptors.</description></macro><macro><macro>{$CONSUL.TOKEN}</macro><value>&lt;PUT YOUR AUTH TOKEN&gt;</value><description>Consul auth token.</description></macro></macros><valuemaps><valuemap><uuid>92638a6d5a9347edb011a8c999a9895e</uuid><name>Consul Autopilot healthy</name><mappings><mapping><value>0</value><newvalue>Unhealthy</newvalue></mapping><mapping><value>1</value><newvalue>Healthy</newvalue></mapping></mappings></valuemap><valuemap><uuid>1f966e7c41134551870c82f013f0b2cd</uuid><name>Consul health state</name><mappings><mapping><value>0</value><newvalue>passing</newvalue></mapping><mapping><value>1</value><newvalue>warning</newvalue></mapping><mapping><value>2</value><newvalue>critical</newvalue></mapping><mapping><value>255</value><newvalue>unknown</newvalue></mapping></mappings></valuemap><valuemap><uuid>8d8f7d7e37a44fe8ac590147f621cb4c</uuid><name>Consul Node role</name><mappings><mapping><value>0</value><newvalue>Agent</newvalue></mapping><mapping><value>1</value><newvalue>Server</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><triggers><trigger><uuid>9e1a0b7f49844d1db525d00d5f1060f0</uuid><expression>min(/HashiCorp Consul Node by HTTP/consul.process_open_fds,5m)/last(/HashiCorp Consul Node by HTTP/consul.process_max_fds)*100&gt;{$CONSUL.OPEN.FDS.MAX.WARN}</expression><name>Consul: Current number of open files is too high</name><event_name>Consul: Current number of open files is too high (over {$CONSUL.OPEN.FDS.MAX.WARN}% for 5m)</event_name><priority>WARNING</priority><description>&quot;Heavy file descriptor usage (i.e., near the process’s file descriptor limit) indicates a potential file descriptor exhaustion issue.&quot;</description><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger></triggers><graphs><graph><uuid>2411147c0f4a425394a64fcd3dc231f0</uuid><name>Consul: Catalog operations</name><graph_items><graph_item><color>1A7C11</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.catalog.register.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.catalog.deregister.rate</key></item></graph_item></graph_items></graph><graph><uuid>929c2527abaf447f9909003e6a43d799</uuid><name>Consul: File descriptors</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.process_open_fds</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>BOLD_LINE</drawtype><color>2774A4</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.process_max_fds</key></item></graph_item></graph_items></graph><graph><uuid>6a987c1499f145ff8b68281f4fef3424</uuid><name>Consul: Memory usage</name><graph_items><graph_item><color>1A7C11</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.virtual_memory_bytes</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.resident_memory_bytes</key></item></graph_item></graph_items></graph><graph><uuid>ba792478fe3140709a06a852560307fd</uuid><name>Consul: Serf member operations</name><graph_items><graph_item><color>1A7C11</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.serf.member.update.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.serf.member.left.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.serf.member.join.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.serf.member.failed.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>HashiCorp Consul Node by HTTP</host><key>consul.serf.member.flap.rate</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
