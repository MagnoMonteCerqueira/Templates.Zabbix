<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:43Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>5fa761bc51e4432a90c6c9eece930c4a</uuid><template>RabbitMQ cluster by Zabbix agent</template><name>RabbitMQ cluster by Zabbix agent</name><description>Get cluster metrics from RabbitMQ management plugin provided an HTTP-based API using Zabbix agent.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387226-discussion-thread-for-official-zabbix-template-rabbitmq

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>31908a8287be442681a0ded564977ff2</uuid><name>RabbitMQ: Messages acknowledged</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.ack</key><delay>0</delay><history>7d</history><description>Number of messages delivered to clients and acknowledged</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.ack</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>f78fabbd7e3f44dc81b1cf9c90b26f2e</uuid><name>RabbitMQ: Messages acknowledged per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.ack.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages delivered to clients and acknowledged per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.ack_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>45cf9b5cf5cd4b13b0e140383233799f</uuid><name>RabbitMQ: Messages confirmed</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.confirm</key><delay>0</delay><history>7d</history><description>Count of messages confirmed</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.confirm</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>bc85a070e1e9451b953d85bb519ed63d</uuid><name>RabbitMQ: Messages confirmed per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.confirm.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages confirmed per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.confirm_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>004da545af4a4f61bd2167281bb9a02b</uuid><name>RabbitMQ: Messages delivered</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.deliver_get</key><delay>0</delay><history>7d</history><description>Sum of messages delivered in acknowledgement mode to consumers, in no-acknowledgement mode to consumers, in acknowledgement mode in response to basic.get, and in no-acknowledgement mode in response to basic.get</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.deliver_get</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>c00a84c8676544dcbdd74fec13881063</uuid><name>RabbitMQ: Messages delivered per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.deliver_get.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate per second of the sum of messages delivered in acknowledgement mode to consumers, in no-acknowledgement mode to consumers, in acknowledgement mode in response to basic.get, and in no-acknowledgement mode in response to basic.get</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.deliver_get_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>4215bdf87f0e426f85bd79434a0fb0bb</uuid><name>RabbitMQ: Messages published</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish</key><delay>0</delay><history>7d</history><description>Count of messages published</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>cfadadb681474c7eb0512d1f4d223ff6</uuid><name>RabbitMQ: Messages published per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>bb068ac7c6094fb8a59cd1a003e88c39</uuid><name>RabbitMQ: Messages publish_in</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish_in</key><delay>0</delay><history>7d</history><description>Count of messages published from channels into this overview</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_in</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>db511bf1cd6c465f8fe1ae6b5fa08660</uuid><name>RabbitMQ: Messages publish_in per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish_in.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published from channels into this overview per sec</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_in_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>23dcb85dd9bc4fefb1a9682956181c2e</uuid><name>RabbitMQ: Messages publish_out</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish_out</key><delay>0</delay><history>7d</history><description>Count of messages published from this overview into queues</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_out</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>05e4c745be95412995749c352ec0f925</uuid><name>RabbitMQ: Messages publish_out per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.publish_out.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published from this overview into queues per second,0,rabbitmq,total msgs pub out rate</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_out_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>650d6a94e381477299c62cfb2a2252cf</uuid><name>RabbitMQ: Messages returned redeliver</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.redeliver</key><delay>0</delay><history>7d</history><description>Count of subset of messages in deliver_get which had the redelivered flag set</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.redeliver</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>6d7eb8880bca4c6e92f65f8a32911599</uuid><name>RabbitMQ: Messages returned redeliver per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.redeliver.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of subset of messages in deliver_get which had the redelivered flag set per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.redeliver_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>e3faec09ae0a4d7aa8aab50d71de7bb3</uuid><name>RabbitMQ: Messages returned unroutable</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.return_unroutable</key><delay>0</delay><history>7d</history><description>Count of messages returned to publisher as unroutable</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.return_unroutable</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>72267cce69cf490ea626ff3ae17b6362</uuid><name>RabbitMQ: Messages returned unroutable per second</name><type>DEPENDENT</type><key>rabbitmq.overview.messages.return_unroutable.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages returned to publisher as unroutable per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.return_unroutable_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>2b03117e863348ee84d94acfe877ef7f</uuid><name>RabbitMQ: Channels total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.channels</key><delay>0</delay><history>7d</history><description>Total number of channels</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.channels</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>channels</value></tag></tags></item><item><uuid>b3cdd6739a964447b524df4fdd726434</uuid><name>RabbitMQ: Connections total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.connections</key><delay>0</delay><history>7d</history><description>Total number of connections</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.connections</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>c39007dbd4374bee943d61b7e90c0f01</uuid><name>RabbitMQ: Consumers total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.consumers</key><delay>0</delay><history>7d</history><description>Total number of consumers</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.consumers</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>consumers</value></tag></tags></item><item><uuid>be0b952e5d08409aa2c65fe143a9193c</uuid><name>RabbitMQ: Exchanges total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.exchanges</key><delay>0</delay><history>7d</history><description>Total number of exchanges</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.exchanges</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>exchanges</value></tag></tags></item><item><uuid>d7c86b4921f54924af1b72cd2493da1c</uuid><name>RabbitMQ: Queues total</name><type>DEPENDENT</type><key>rabbitmq.overview.object_totals.queues</key><delay>0</delay><history>7d</history><description>Total number of queues</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.object_totals.queues</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>queues</value></tag></tags></item><item><uuid>c98b2b3dd2bd4fec9e7c571bc631167b</uuid><name>RabbitMQ: Messages total</name><type>DEPENDENT</type><key>rabbitmq.overview.queue_totals.messages</key><delay>0</delay><history>7d</history><description>Total number of messages (ready plus unacknowledged)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.queue_totals.messages</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>efaabe175e5f4fffa8a810ea35753475</uuid><name>RabbitMQ: Messages ready for delivery</name><type>DEPENDENT</type><key>rabbitmq.overview.queue_totals.messages.ready</key><delay>0</delay><history>7d</history><description>Number of messages ready for deliver</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.queue_totals.messages_ready</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>6cf09ed9d244464288c8050b10622e3a</uuid><name>RabbitMQ: Messages unacknowledged</name><type>DEPENDENT</type><key>rabbitmq.overview.queue_totals.messages.unacknowledged</key><delay>0</delay><history>7d</history><description>Number of unacknowledged messages</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.queue_totals.messages_unacknowledged</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag></tags></item><item><uuid>f015f991bcea4c4dbf83dfb013300010</uuid><name>RabbitMQ: Get exchanges</name><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/exchanges&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>The HTTP API endpoint that returns exchanges metrics</description><preprocessing><step><type>REGEX</type><parameters><parameter>\n\s?\n(.*)</parameter><parameter>\1</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>943eabfb44164908b9135aa4d6478bea</uuid><name>RabbitMQ: Get overview</name><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>The HTTP API endpoint that returns cluster-wide metrics</description><preprocessing><step><type>REGEX</type><parameters><parameter>\n\s?\n(.*)</parameter><parameter>\1</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>raw</value></tag></tags><triggers><trigger><uuid>000d3e773f6e4ebf89f16daa2ce8c168</uuid><expression>nodata(/RabbitMQ cluster by Zabbix agent/web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;],30m)=1</expression><name>RabbitMQ: Failed to fetch overview data</name><event_name>RabbitMQ: Failed to fetch overview data (or no data for 30m)</event_name><priority>WARNING</priority><description>Zabbix has not received data for items for the last 30 minutes</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item></items><discovery_rules><discovery_rule><uuid>e28b4491721d4dbf8eded86a5caeabc2</uuid><name>Exchanges discovery</name><type>DEPENDENT</type><key>rabbitmq.exchanges.discovery</key><delay>0</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#EXCHANGE}</macro><value>{$RABBITMQ.LLD.FILTER.EXCHANGE.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#EXCHANGE}</macro><value>{$RABBITMQ.LLD.FILTER.EXCHANGE.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Individual exchange metrics</description><item_prototypes><item_prototype><uuid>68892e56e0074516b5d052dd7178955f</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages acknowledged per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.ack.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages delivered to clients and acknowledged per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.ack_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>fcf7807f096d4cddb8fa2b3671814dfa</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages acknowledged</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.ack[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Number of messages delivered to clients and acknowledged</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.ack</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>858f8ce62fa04a31902569a712e58234</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages confirmed per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.confirm.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages confirmed per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.confirm_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>38d41b5d815a40ff816f6fad2395b61a</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages confirmed</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.confirm[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages confirmed</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.confirm</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>ab53a6957ea641fe8b2a7f26c4bcc743</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages delivered per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.deliver_get.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate per second of the sum of messages delivered in acknowledgement mode to consumers, in no-acknowledgement mode to consumers, in acknowledgement mode in response to basic.get, and in no-acknowledgement mode in response to basic.get</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.deliver_get_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>412e5003ad2d4e80832ee0551a596791</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages delivered</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.deliver_get[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Sum of messages delivered in acknowledgement mode to consumers, in no-acknowledgement mode to consumers, in acknowledgement mode in response to basic.get, and in no-acknowledgement mode in response to basic.get</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.deliver_get</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>32a0c7af8b9940a482a3a1d63ee90940</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages published per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>1eccbe4450d74d5f9c5b8f7e6279b214</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages published</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages published</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>3520a523abd1413f88c1c19978e6d562</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_in per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish_in.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published from channels into this overview per sec</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_in_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>520d8301e48540679472bf508a6e293b</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_in</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish_in[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages published from channels into this overview</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_in</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>6beb5e40cb8b416a8722ea77abb7355d</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_out per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish_out.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages published from this overview into queues per second,0,rabbitmq,total msgs pub out rate</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_out_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>beb929ee395e4caba73f3063c24a1d60</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages publish_out</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.publish_out[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages published from this overview into queues</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.publish_out</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>7485d5a12fb04a13810ea54b9cc598e1</uuid><name>RabbitMQ: Exchange {#VHOST}/{#EXCHANGE}/{#TYPE}: Messages redelivered per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.redeliver.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of subset of messages in deliver_get which had the redelivered flag set per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.redeliver_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>58a06005659943429122d451acb521e0</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages redelivered</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.redeliver[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of subset of messages in deliver_get which had the redelivered flag set</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.redeliver</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>295eeb3bd071400d921efe1f5a924a3e</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages returned unroutable per second</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.return_unroutable.rate[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of messages returned to publisher as unroutable per second</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.return_unroutable_details.rate</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>2901eccbd8ef483ba63c5522755155e7</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Messages returned unroutable</name><type>DEPENDENT</type><key>rabbitmq.exchange.messages.return_unroutable[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>7d</history><description>Count of messages returned to publisher as unroutable</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.message_stats.return_unroutable</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key></master_item><tags><tag><tag>component</tag><value>messages</value></tag><tag><tag>exchange</tag><value>{#EXCHANGE}</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag><tag><tag>vhost</tag><value>{#VHOST}</value></tag></tags></item_prototype><item_prototype><uuid>4491f48f732d40c0b7f29010cf4ca046</uuid><name>RabbitMQ: Exchange [{#VHOST}][{#EXCHANGE}][{#TYPE}]: Get data</name><type>DEPENDENT</type><key>rabbitmq.get_exchanges[&quot;{#VHOST}/{#EXCHANGE}/{#TYPE}&quot;]</key><delay>0</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>The HTTP API endpoint that returns [{#VHOST}][{#EXCHANGE}][{#TYPE}] exchanges metrics</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;{#EXCHANGE}&quot; &amp;&amp; @.vhost == &quot;{#VHOST}&quot; &amp;&amp; @.type ==&quot;{#TYPE}&quot;)].first()</parameter></parameters></step></preprocessing><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/exchanges&quot;]</key></master_item><tags><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype></item_prototypes><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/exchanges&quot;]</key></master_item><lld_macro_paths><lld_macro_path><lld_macro>{#EXCHANGE}</lld_macro><path>$.name</path></lld_macro_path><lld_macro_path><lld_macro>{#TYPE}</lld_macro><path>$.type</path></lld_macro_path><lld_macro_path><lld_macro>{#VHOST}</lld_macro><path>$.vhost</path></lld_macro_path></lld_macro_paths></discovery_rule><discovery_rule><uuid>406836367f45425fbd181a20dc3d08d7</uuid><name>Health Check 3.8.10+ discovery</name><type>DEPENDENT</type><key>rabbitmq.healthcheck.v3810.discovery</key><delay>0</delay><description>Version 3.8.10+ specific metrics</description><item_prototypes><item_prototype><uuid>4c93b04164d24eb8b9dbdab652afc7bc</uuid><name>RabbitMQ: Healthcheck: alarms in effect in the cluster{#SINGLETON}</name><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/health/checks/alarms{#SINGLETON}&quot;]</key><history>7d</history><authtype>BASIC</authtype><username>{$RABBITMQ.API.USER}</username><password>{$RABBITMQ.API.PASSWORD}</password><description>Responds a 200 OK if there are no alarms in effect in the cluster, otherwise responds with a 503 Service Unavailable.</description><valuemap><name>RabbitMQ healthcheck</name></valuemap><preprocessing><step><type>REGEX</type><parameters><parameter>HTTP\/1\.1\b\s(\d+)</parameter><parameter>\1</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>switch(value){ 
case '200': return 1 
case '503': return 0 
default: 2}</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><url>{$RABBITMQ.API.SCHEME}://{HOST.CONN}:{$RABBITMQ.API.PORT}/api/health/checks/alarms</url><status_codes>200,503,404</status_codes><retrieve_mode>HEADERS</retrieve_mode><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>component</tag><value>system</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>032949c387c64223b3125ba1120ae082</uuid><expression>last(/RabbitMQ cluster by Zabbix agent/web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/health/checks/alarms{#SINGLETON}&quot;])=0</expression><name>RabbitMQ: There are active alarms in the cluster</name><opdata>Current state: {ITEM.LASTVALUE1}</opdata><priority>AVERAGE</priority><description>http://{HOST.CONN}:{$RABBITMQ.API.PORT}/api/index.html</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><master_item><key>web.page.get[&quot;{$RABBITMQ.API.SCHEME}://{$RABBITMQ.API.USER}:{$RABBITMQ.API.PASSWORD}@{$RABBITMQ.API.CLUSTER_HOST}:{$RABBITMQ.API.PORT}/api/overview&quot;]</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.management_version</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>var rabbit_version = parseInt(value.split('.')[0]) * 10000 +
                     parseInt(value.split('.')[1]) * 100 +
                     parseInt(value.split('.')[2])
return JSON.stringify(rabbit_version &gt;= 30810 ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>software</value></tag><tag><tag>target</tag><value>rabbitmq</value></tag></tags><macros><macro><macro>{$RABBITMQ.API.CLUSTER_HOST}</macro><value>127.0.0.1</value><description>The hostname or IP of RabbitMQ cluster API endpoint</description></macro><macro><macro>{$RABBITMQ.API.PASSWORD}</macro><value>zabbix</value></macro><macro><macro>{$RABBITMQ.API.PORT}</macro><value>15672</value><description>The port of RabbitMQ API endpoint</description></macro><macro><macro>{$RABBITMQ.API.SCHEME}</macro><value>http</value><description>Request scheme which may be http or https</description></macro><macro><macro>{$RABBITMQ.API.USER}</macro><value>zbx_monitor</value></macro><macro><macro>{$RABBITMQ.LLD.FILTER.EXCHANGE.MATCHES}</macro><value>.*</value><description>Filter of discoverable exchanges</description></macro><macro><macro>{$RABBITMQ.LLD.FILTER.EXCHANGE.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter to exclude discovered exchanges</description></macro></macros><dashboards><dashboard><uuid>a886a871a00d47e28b8648cadae3bc99</uuid><name>RabbitMQ overview</name><pages><page><widgets><widget><type>GRAPH_CLASSIC</type><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by Zabbix agent</host><name>RabbitMQ: Messages</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><x>12</x><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by Zabbix agent</host><name>RabbitMQ: Connections</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><y>5</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by Zabbix agent</host><name>RabbitMQ: Messages status</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><x>12</x><y>5</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by Zabbix agent</host><name>RabbitMQ: Queues</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><y>10</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>RabbitMQ cluster by Zabbix agent</host><name>RabbitMQ: Messages per second</name></value></field></fields></widget></widgets></page></pages></dashboard></dashboards><valuemaps><valuemap><uuid>78275d6daacf42b4b97e3d806dfe81fe</uuid><name>RabbitMQ healthcheck</name><mappings><mapping><value>0</value><newvalue>Failed</newvalue></mapping><mapping><value>1</value><newvalue>Ok</newvalue></mapping><mapping><value>2</value><newvalue>Error</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><graphs><graph><uuid>2dbd4f9285a34786a210c6e16d87ed85</uuid><name>RabbitMQ: Connections</name><graph_items><graph_item><color>1A7C11</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.object_totals.connections</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.object_totals.channels</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.object_totals.consumers</key></item></graph_item></graph_items></graph><graph><uuid>dca08567e6ce4dcbb60f72a431de5ddf</uuid><name>RabbitMQ: Messages</name><graph_items><graph_item><color>1A7C11</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.queue_totals.messages</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.queue_totals.messages.ready</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.queue_totals.messages.unacknowledged</key></item></graph_item></graph_items></graph><graph><uuid>ad303b1816a84248a347ef4773bf2c44</uuid><name>RabbitMQ: Messages per second</name><graph_items><graph_item><color>1A7C11</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.publish.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.ack.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.confirm.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.deliver_get.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.publish_in.rate</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.publish_out.rate</key></item></graph_item><graph_item><sortorder>6</sortorder><color>AC8C14</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.redeliver.rate</key></item></graph_item><graph_item><sortorder>7</sortorder><color>611F27</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.return_unroutable.rate</key></item></graph_item></graph_items></graph><graph><uuid>94fa39136a0d42b2997dd3b9a7581621</uuid><name>RabbitMQ: Messages status</name><graph_items><graph_item><color>1A7C11</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.publish</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.ack</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.confirm</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.deliver_get</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.publish_in</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.publish_out</key></item></graph_item><graph_item><sortorder>6</sortorder><color>AC8C14</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.redeliver</key></item></graph_item><graph_item><sortorder>7</sortorder><color>611F27</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.messages.return_unroutable</key></item></graph_item></graph_items></graph><graph><uuid>3205b991eb5443e680b571b23b4a1721</uuid><name>RabbitMQ: Queues</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>RabbitMQ cluster by Zabbix agent</host><key>rabbitmq.overview.object_totals.queues</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
