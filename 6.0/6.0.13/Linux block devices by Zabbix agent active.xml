<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:46Z</date><groups><group><uuid>57b7ae836ca64446ba2c296389c009b7</uuid><name>Templates/Modules</name></group></groups><templates><template><uuid>aa226119d3e94f53b9a2809f1d4ebaee</uuid><template>Linux block devices by Zabbix agent active</template><name>Linux block devices by Zabbix agent active</name><description>Template tooling version used: 0.41</description><groups><group><name>Templates/Modules</name></group></groups><discovery_rules><discovery_rule><uuid>37d15facfc5f42f4ad1145f55d4bdb1e</uuid><name>Block devices discovery</name><type>ZABBIX_ACTIVE</type><key>vfs.dev.discovery</key><delay>1h</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#DEVTYPE}</macro><value>disk</value><formulaid>C</formulaid></condition><condition><macro>{#DEVNAME}</macro><value>{$VFS.DEV.DEVNAME.MATCHES}</value><formulaid>B</formulaid></condition><condition><macro>{#DEVNAME}</macro><value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>A</formulaid></condition></conditions></filter><item_prototypes><item_prototype><uuid>5a9fb5097fb1425aafc718018ebd95f8</uuid><name>{#DEVNAME}: Disk average queue size (avgqu-sz)</name><type>DEPENDENT</type><key>vfs.dev.queue_size[{#DEVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Current average disk queue, the number of requests outstanding on the disk at the time the performance data is collected.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[10]</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><master_item><key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>disk</tag><value>{#DEVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>4263e16baa044186947ad9f4ec12f6b4</uuid><name>{#DEVNAME}: Disk read request avg waiting time (r_await)</name><type>CALCULATED</type><key>vfs.dev.read.await[{#DEVNAME}]</key><history>7d</history><value_type>FLOAT</value_type><units>!ms</units><params>(last(//vfs.dev.read.time.rate[{#DEVNAME}])/(last(//vfs.dev.read.rate[{#DEVNAME}])+(last(//vfs.dev.read.rate[{#DEVNAME}])=0)))*1000*(last(//vfs.dev.read.rate[{#DEVNAME}]) &gt; 0)</params><description>This formula contains two boolean expressions that evaluates to 1 or 0 in order to set calculated metric to zero and to avoid division by zero exception.</description><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>disk</tag><value>{#DEVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>7a02e002d83f4e71bdcc031077738f2b</uuid><name>{#DEVNAME}: Disk read rate</name><type>DEPENDENT</type><key>vfs.dev.read.rate[{#DEVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>!r/s</units><description>r/s. The number (after merges) of read requests completed per second for the device.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[0]</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>disk</tag><value>{#DEVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>ae4ae1c7ef2e434f875c8099ff3b101b</uuid><name>{#DEVNAME}: Disk read time (rate)</name><type>DEPENDENT</type><key>vfs.dev.read.time.rate[{#DEVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of total read time counter. Used in r_await calculation</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[3]</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><master_item><key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>disk</tag><value>{#DEVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>708baac844f54ca2b91ba8ed9f624459</uuid><name>{#DEVNAME}: Disk utilization</name><type>DEPENDENT</type><key>vfs.dev.util[{#DEVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>This item is the percentage of elapsed time that the selected disk drive was busy servicing read or writes requests.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[9]</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.1</parameter></parameters></step></preprocessing><master_item><key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>disk</tag><value>{#DEVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>e36cbccc4d9e470f8078bd2e04c5c5da</uuid><name>{#DEVNAME}: Disk write request avg waiting time (w_await)</name><type>CALCULATED</type><key>vfs.dev.write.await[{#DEVNAME}]</key><history>7d</history><value_type>FLOAT</value_type><units>!ms</units><params>(last(//vfs.dev.write.time.rate[{#DEVNAME}])/(last(//vfs.dev.write.rate[{#DEVNAME}])+(last(//vfs.dev.write.rate[{#DEVNAME}])=0)))*1000*(last(//vfs.dev.write.rate[{#DEVNAME}]) &gt; 0)</params><description>This formula contains two boolean expressions that evaluates to 1 or 0 in order to set calculated metric to zero and to avoid division by zero exception.</description><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>disk</tag><value>{#DEVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>ef9afdff2799455e85a8477a307dd83f</uuid><name>{#DEVNAME}: Disk write rate</name><type>DEPENDENT</type><key>vfs.dev.write.rate[{#DEVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>!w/s</units><description>w/s. The number (after merges) of write requests completed per second for the device.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[4]</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>disk</tag><value>{#DEVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>165825d4e5e442ad97d6455a117a7663</uuid><name>{#DEVNAME}: Disk write time (rate)</name><type>DEPENDENT</type><key>vfs.dev.write.time.rate[{#DEVNAME}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Rate of total write time counter. Used in w_await calculation</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[7]</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><master_item><key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>disk</tag><value>{#DEVNAME}</value></tag></tags></item_prototype><item_prototype><uuid>ab92fd1578124197ba4dc8af11ebece4</uuid><name>{#DEVNAME}: Get stats</name><type>ZABBIX_ACTIVE</type><key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Get contents of /sys/block/{#DEVNAME}/stat for disk stats.</description><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(value.trim().split(/ +/));</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype></item_prototypes><trigger_prototypes><trigger_prototype><uuid>af9c4b7070f94999a2a1569de0948822</uuid><expression>min(/Linux block devices by Zabbix agent active/vfs.dev.read.await[{#DEVNAME}],15m) &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} or min(/Linux block devices by Zabbix agent active/vfs.dev.write.await[{#DEVNAME}],15m) &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;}</expression><name>{#DEVNAME}: Disk read/write request responses are too high</name><event_name>{#DEVNAME}: Disk read/write request responses are too high (read &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m or write &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m)</event_name><priority>WARNING</priority><description>This trigger might indicate disk {#DEVNAME} saturation.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes><graph_prototypes><graph_prototype><uuid>8748136db91b499da7516cb6fde881fb</uuid><name>{#DEVNAME}: Disk average waiting time</name><graph_items><graph_item><color>1A7C11</color><item><host>Linux block devices by Zabbix agent active</host><key>vfs.dev.read.await[{#DEVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>GRADIENT_LINE</drawtype><color>2774A4</color><item><host>Linux block devices by Zabbix agent active</host><key>vfs.dev.write.await[{#DEVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>00756c13228340d7b4483b796dc8f79f</uuid><name>{#DEVNAME}: Disk read/write rates</name><graph_items><graph_item><color>1A7C11</color><item><host>Linux block devices by Zabbix agent active</host><key>vfs.dev.read.rate[{#DEVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>GRADIENT_LINE</drawtype><color>2774A4</color><item><host>Linux block devices by Zabbix agent active</host><key>vfs.dev.write.rate[{#DEVNAME}]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>7cf1fd3334f543c8b44fb131890eb87e</uuid><name>{#DEVNAME}: Disk utilization and queue</name><graph_items><graph_item><color>1A7C11</color><yaxisside>RIGHT</yaxisside><item><host>Linux block devices by Zabbix agent active</host><key>vfs.dev.queue_size[{#DEVNAME}]</key></item></graph_item><graph_item><sortorder>1</sortorder><drawtype>GRADIENT_LINE</drawtype><color>2774A4</color><item><host>Linux block devices by Zabbix agent active</host><key>vfs.dev.util[{#DEVNAME}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><macros><macro><macro>{$VFS.DEV.DEVNAME.MATCHES}</macro><value>.+</value><description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description></macro><macro><macro>{$VFS.DEV.DEVNAME.NOT_MATCHES}</macro><value>^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+|ploop[a-z0-9]+|md[0-9]*|hcp[0-9]*|zram[0-9]*)</value><description>This macro is used in block devices discovery. Can be overridden on the host or linked template level</description></macro><macro><macro>{$VFS.DEV.READ.AWAIT.WARN}</macro><value>20</value><description>Disk read average response time (in ms) before the trigger would fire</description></macro><macro><macro>{$VFS.DEV.WRITE.AWAIT.WARN}</macro><value>20</value><description>Disk write average response time (in ms) before the trigger would fire</description></macro></macros></template></templates></zabbix_export>
