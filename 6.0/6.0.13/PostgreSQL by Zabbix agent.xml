<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:48Z</date><groups><group><uuid>748ad4d098d447d492bb935c907f652f</uuid><name>Templates/Databases</name></group></groups><templates><template><uuid>399bd1ee587245ecac6f39beaa99886f</uuid><template>PostgreSQL by Zabbix agent</template><name>PostgreSQL by Zabbix agent</name><description>You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/384190-%C2%A0discussion-thread-for-official-zabbix-template-db-postgresql

Template tooling version used: 0.41</description><groups><group><name>Templates/Databases</name></group></groups><items><item><uuid>d17c6c15154d40d1afa5b1eafb2ed93e</uuid><name>Bgwriter: Buffers allocated per second</name><type>DEPENDENT</type><key>pgsql.bgwriter.buffers_alloc.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Number of buffers allocated</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.buffers_alloc</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>2c3ee691d4a54fb6b566739a3a648df4</uuid><name>Bgwriter: Buffers written directly by a backend per second</name><type>DEPENDENT</type><key>pgsql.bgwriter.buffers_backend.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Number of buffers written directly by a backend</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.buffers_backend</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>77e1eb202a6346ce9df0f1bb2c078688</uuid><name>Bgwriter: Buffers backend fsync per second</name><type>DEPENDENT</type><key>pgsql.bgwriter.buffers_backend_fsync.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times a backend had to execute its own fsync call (normally the background writer handles those even when the backend does its own write)</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.buffers_backend_fsync</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>e29d26a48d0143579bf3acc6655cd659</uuid><name>Bgwriter: Buffers written during checkpoints per second</name><type>DEPENDENT</type><key>pgsql.bgwriter.buffers_checkpoint.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Number of buffers written during checkpoints</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.buffers_checkpoint</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>5151183461a54d2bbfaad04b8cab3798</uuid><name>Bgwriter: Buffers written by the background writer per second</name><type>DEPENDENT</type><key>pgsql.bgwriter.buffers_clean.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Number of buffers written by the background writer</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.buffers_clean</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>ff290c0602b9447e87240c1ecf467050</uuid><name>Bgwriter: Requested checkpoints per second</name><type>DEPENDENT</type><key>pgsql.bgwriter.checkpoints_req.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of requested checkpoints that have been performed</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.checkpoints_req</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags><triggers><trigger><uuid>65e7954489854ad3ad1698dead7c4c02</uuid><expression>last(/PostgreSQL by Zabbix agent/pgsql.bgwriter.checkpoints_req.rate) &gt; {$PG.CHECKPOINTS_REQ.MAX.WARN}</expression><name>PostgreSQL: Required checkpoints occurs too frequently</name><event_name>PostgreSQL: Required checkpoints occurs too frequently (over {$PG.CHECKPOINTS_REQ.MAX.WARN})</event_name><priority>AVERAGE</priority><description>Checkpoints are points in the sequence of transactions at which it is guaranteed that the heap and index data files have been updated with all information written before that checkpoint. At checkpoint time, all dirty data pages are flushed to disk and a special checkpoint record is written to the log file.
https://www.postgresql.org/docs/current/wal-configuration.html</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>a5271230be8b431cb96580180e099b98</uuid><name>Bgwriter: Scheduled checkpoints per second</name><type>DEPENDENT</type><key>pgsql.bgwriter.checkpoints_timed.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of scheduled checkpoints that have been performed</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.checkpoints_timed</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>782d2368763b48ad8663aa9fb75c3326</uuid><name>Bgwriter: Checkpoint sync time</name><type>DEPENDENT</type><key>pgsql.bgwriter.checkpoint_sync_time</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.checkpoint_sync_time</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>b5e5f463978c46dd9401963f48ea72eb</uuid><name>Bgwriter: Checkpoint write time</name><type>DEPENDENT</type><key>pgsql.bgwriter.checkpoint_write_time</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk, in milliseconds</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.checkpoint_write_time</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>f273c71f92bf4ac0b6ec5a0a88d1239c</uuid><name>Bgwriter: Max written per second</name><type>DEPENDENT</type><key>pgsql.bgwriter.maxwritten_clean.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times the background writer stopped a cleaning scan because it had written too many buffers</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.maxwritten_clean</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>bgwriter</value></tag></tags></item><item><uuid>1fc5ba48a0974bd7bf965b5f130deded</uuid><name>PostgreSQL: Get bgwriter</name><key>pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>Statistics about the background writer process's activity</description><tags><tag><tag>component</tag><value>raw</value></tag></tags><triggers><trigger><uuid>768d28b9360b46cda3065f5082ba97ac</uuid><expression>nodata(/PostgreSQL by Zabbix agent/pgsql.bgwriter[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],30m) = 1</expression><name>PostgreSQL: Failed to get items</name><event_name>PostgreSQL: Failed to get items (no data for 30m)</event_name><priority>WARNING</priority><description>Zabbix has not received data for items for the last 30 minutes</description><dependencies><dependency><name>PostgreSQL: Service is down</name><expression>last(/PostgreSQL by Zabbix agent/pgsql.ping[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;]) = 0</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>70a7581fabd14e05bda762b79811187c</uuid><name>Status: Cache hit ratio %</name><key>pgsql.cache.hit[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Cache hit ratio</description><tags><tag><tag>component</tag><value>cache</value></tag></tags><triggers><trigger><uuid>4d87cc71b40f4b59ad27f30f33b15a69</uuid><expression>max(/PostgreSQL by Zabbix agent/pgsql.cache.hit[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],5m) &lt; {$PG.CACHE_HITRATIO.MIN.WARN}</expression><name>PostgreSQL: Cache hit ratio too low</name><event_name>PostgreSQL: Cache hit ratio too low (under {$PG.CACHE_HITRATIO.MIN.WARN} in 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>248cbe5067324b9ca435f2aced5e2a5f</uuid><name>Status: Config hash</name><key>pgsql.config.hash[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><delay>15m</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>PostgreSQL configuration hash</description><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>b727cfa6d3de4063b6a2dcb6cc84e27b</uuid><expression>last(/PostgreSQL by Zabbix agent/pgsql.config.hash[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],#1)&lt;&gt;last(/PostgreSQL by Zabbix agent/pgsql.config.hash[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],#2) and length(last(/PostgreSQL by Zabbix agent/pgsql.config.hash[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]))&gt;0</expression><name>PostgreSQL: Configuration has changed</name><priority>INFO</priority><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>c78116d3acf24e6990ed27ba8008728c</uuid><name>Connections sum: Active</name><type>DEPENDENT</type><key>pgsql.connections.sum.active</key><delay>0</delay><history>7d</history><description>Total number of connections executing a query</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.active</parameter></parameters></step></preprocessing><master_item><key>pgsql.connections.sum[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>be6eb6ecbfad420b889c58d1f1550b23</uuid><name>Connections sum: Idle</name><type>DEPENDENT</type><key>pgsql.connections.sum.idle</key><delay>0</delay><history>7d</history><description>Total number of connections waiting for a new client command</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.idle</parameter></parameters></step></preprocessing><master_item><key>pgsql.connections.sum[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>6471d014722c4072ae045df4c69578e3</uuid><name>Connections sum: Idle in transaction</name><type>DEPENDENT</type><key>pgsql.connections.sum.idle_in_transaction</key><delay>0</delay><history>7d</history><description>Total number of connections in a transaction state, but not executing a query</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.idle_in_transaction</parameter></parameters></step></preprocessing><master_item><key>pgsql.connections.sum[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>197cc14f55db485b891614c7b7ee2a51</uuid><name>Connections sum: Prepared</name><type>DEPENDENT</type><key>pgsql.connections.sum.prepared</key><delay>0</delay><history>7d</history><description>Total number of prepared transactions
https://www.postgresql.org/docs/current/sql-prepare-transaction.html</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.prepared</parameter></parameters></step></preprocessing><master_item><key>pgsql.connections.sum[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>24d23377c7cd4cc5b63f98a261c2501c</uuid><name>Connections sum: Total</name><type>DEPENDENT</type><key>pgsql.connections.sum.total</key><delay>0</delay><history>7d</history><description>Total number of connections</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.total</parameter></parameters></step></preprocessing><master_item><key>pgsql.connections.sum[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>488050d9aa8e4c2ea5b3e991ec5ddacc</uuid><name>Connections sum: Total %</name><type>DEPENDENT</type><key>pgsql.connections.sum.total_pct</key><delay>0</delay><history>7d</history><units>%</units><description>Total number of connections in percentage</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.total_pct</parameter></parameters></step></preprocessing><master_item><key>pgsql.connections.sum[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags><triggers><trigger><uuid>54ef12b8ff1e4383a3097c71478ceefa</uuid><expression>min(/PostgreSQL by Zabbix agent/pgsql.connections.sum.total_pct,5m) &gt; {$PG.CONN_TOTAL_PCT.MAX.WARN}</expression><name>PostgreSQL: Total number of connections is too high</name><event_name>PostgreSQL: Total number of connections is too high (over {$PG.CONN_TOTAL_PCT.MAX.WARN} in 5m)</event_name><priority>AVERAGE</priority><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>fadd1333189c4ed29db57cf2acd158d0</uuid><name>Connections sum: Waiting</name><type>DEPENDENT</type><key>pgsql.connections.sum.waiting</key><delay>0</delay><history>7d</history><description>Total number of waiting connections
https://www.postgresql.org/docs/current/monitoring-stats.html#WAIT-EVENT-TABLE</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.waiting</parameter></parameters></step></preprocessing><master_item><key>pgsql.connections.sum[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>connections</value></tag></tags></item><item><uuid>b0da0c4856a645ca8ef03405d2d8d4a5</uuid><name>PostgreSQL: Get connections sum</name><key>pgsql.connections.sum[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>Collect all metrics from pg_stat_activity
https://www.postgresql.org/docs/current/monitoring-stats.html#PG-STAT-ACTIVITY-VIEW</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>b44f263fb33e461e8c3d700fb7688c7b</uuid><name>PostgreSQL: Get dbstat</name><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>Collect all metrics from pg_stat_database per database
https://www.postgresql.org/docs/current/monitoring-stats.html#PG-STAT-DATABASE-VIEW</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>7cee21f6225340ef80e9cdef7ce20b10</uuid><name>PostgreSQL: Get locks</name><key>pgsql.locks[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>Collect all metrics from pg_locks per database
https://www.postgresql.org/docs/current/explicit-locking.html#LOCKING-TABLES</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>f42bd73b3af6451b8a3a6113dcc1b675</uuid><name>Status: Ping time</name><key>pgsql.ping.time[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>7d</history><value_type>FLOAT</value_type><units>s</units><preprocessing><step><type>REGEX</type><parameters><parameter>Time:\s+(\d+\.\d+)\s+ms</parameter><parameter>\1</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>0.001</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>application</value></tag><tag><tag>component</tag><value>health</value></tag></tags><triggers><trigger><uuid>e19b5630737b4c63886b5df77a3c748c</uuid><expression>min(/PostgreSQL by Zabbix agent/pgsql.ping.time[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],5m) &gt; {$PG.PING_TIME.MAX.WARN}</expression><name>PostgreSQL: Response too long</name><event_name>PostgreSQL: Response too long (over {$PG.PING_TIME.MAX.WARN})</event_name><priority>AVERAGE</priority><dependencies><dependency><name>PostgreSQL: Service is down</name><expression>last(/PostgreSQL by Zabbix agent/pgsql.ping[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;]) = 0</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>availability</value></tag><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>f5bd615243b344cb88dac1e83436cc85</uuid><name>Status: Ping</name><key>pgsql.ping[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;]</key><history>7d</history><valuemap><name>Service state</name></valuemap><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>return value.search(/accepting connections/)&gt;0 ? 1 : 0</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>application</value></tag><tag><tag>component</tag><value>health</value></tag></tags><triggers><trigger><uuid>6d9c2b5353ce4f6baeeb0f254fb7d1e2</uuid><expression>last(/PostgreSQL by Zabbix agent/pgsql.ping[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;]) = 0</expression><name>PostgreSQL: Service is down</name><priority>HIGH</priority><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>47bf580e1e4e48cf9c0e94fcf90288ac</uuid><name>PostgreSQL: Get queries</name><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>Collect all metrics by query execution time</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>d8a509bd011a4ecda5d439295e257e9d</uuid><name>Replication: standby count</name><key>pgsql.replication.count[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>7d</history><description>Number of standby servers</description><tags><tag><tag>component</tag><value>replication</value></tag></tags></item><item><uuid>21f8bea1141249c7a4dfafad5bc3ef41</uuid><name>Replication: lag in seconds</name><key>pgsql.replication.lag.sec[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>7d</history><units>s</units><description>Replication lag with Master in seconds</description><tags><tag><tag>component</tag><value>replication</value></tag></tags><triggers><trigger><uuid>11831c52e86445498eed42de6a629b65</uuid><expression>min(/PostgreSQL by Zabbix agent/pgsql.replication.lag.sec[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],5m) &gt; {$PG.REPL_LAG.MAX.WARN}</expression><name>PostgreSQL: Streaming lag with {#MASTER} is too high</name><event_name>PostgreSQL: Streaming lag with {#MASTER} is too high (over {$PG.REPL_LAG.MAX.WARN} in 5m)</event_name><priority>AVERAGE</priority><tags><tag><tag>scope</tag><value>availability</value></tag><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>09f696124fca4c5b844bf66c9c912b87</uuid><name>Replication: recovery role</name><key>pgsql.replication.recovery_role[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>7d</history><description>Replication role: 1 — recovery is still in progress (standby mode), 0 — master mode.</description><valuemap><name>PostgreSQL recovery role</name></valuemap><tags><tag><tag>component</tag><value>replication</value></tag></tags></item><item><uuid>d449017462704508a4aad51a6b45fb30</uuid><name>Replication: status</name><key>pgsql.replication.status[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>7d</history><description>Replication status: 0 — streaming is down, 1 — streaming is up, 2 — master mode</description><valuemap><name>PostgreSQL replication status</name></valuemap><tags><tag><tag>component</tag><value>replication</value></tag></tags><triggers><trigger><uuid>aef1e1d2bab540f8ab738b4a3fad863c</uuid><expression>max(/PostgreSQL by Zabbix agent/pgsql.replication.status[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],5m)=0</expression><name>PostgreSQL: Replication is down</name><priority>AVERAGE</priority><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>4883717865c84c19b48d46f009317de2</uuid><name>Transactions: Max active transaction time</name><type>DEPENDENT</type><key>pgsql.transactions.active</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Current max active transaction time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.active</parameter></parameters></step></preprocessing><master_item><key>pgsql.transactions[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag></tags></item><item><uuid>4c89121d71a14c15b6169417ea69d0a3</uuid><name>Transactions: Max idle transaction time</name><type>DEPENDENT</type><key>pgsql.transactions.idle</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Current max idle transaction time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.idle</parameter></parameters></step></preprocessing><master_item><key>pgsql.transactions[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag></tags></item><item><uuid>0ee43ddd9da246d19097107b45e4c8e8</uuid><name>Transactions: Max prepared transaction time</name><type>DEPENDENT</type><key>pgsql.transactions.prepared</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Current max prepared transaction time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.prepared</parameter></parameters></step></preprocessing><master_item><key>pgsql.transactions[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag></tags></item><item><uuid>da341b2011714a1f994ecbe96bd52155</uuid><name>Transactions: Max waiting transaction time</name><type>DEPENDENT</type><key>pgsql.transactions.waiting</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Current max waiting transaction time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.waiting</parameter></parameters></step></preprocessing><master_item><key>pgsql.transactions[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag></tags></item><item><uuid>ff26a1c256bd40978f49a7a025538aa1</uuid><name>PostgreSQL: Get transactions</name><key>pgsql.transactions[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>Collect metrics by transaction execution time</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>6418a2f286e64ecabf2295fca063f8af</uuid><name>Status: Uptime</name><key>pgsql.uptime[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><history>7d</history><units>uptime</units><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>85565aba402740868a16c0e4639a98fc</uuid><expression>last(/PostgreSQL by Zabbix agent/pgsql.uptime[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]) &lt; 10m</expression><name>PostgreSQL: Service has been restarted</name><event_name>PostgreSQL: Service has been restarted (uptime &lt; 10m)</event_name><priority>INFO</priority><description>PostgreSQL uptime is less than 10 minutes</description><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>321525ebcea44396922e96deec2e8ad1</uuid><name>Status: Version</name><key>pgsql.version[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><delay>15m</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>PostgreSQL version</description><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>8111eb42b0e74fffb43da474677ebc2f</uuid><expression>last(/PostgreSQL by Zabbix agent/pgsql.version[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],#1)&lt;&gt;last(/PostgreSQL by Zabbix agent/pgsql.version[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;],#2) and length(last(/PostgreSQL by Zabbix agent/pgsql.version[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]))&gt;0</expression><name>PostgreSQL: Version has changed</name><event_name>PostgreSQL: Version has changed (new version value received: {ITEM.VALUE})</event_name><priority>INFO</priority><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>5385ec7d39514039a641d18cba335ddc</uuid><name>WAL: Segments count</name><type>DEPENDENT</type><key>pgsql.wal.count</key><delay>0</delay><history>7d</history><description>Number of WAL segments</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.count</parameter></parameters></step></preprocessing><master_item><key>pgsql.wal.stat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>wal</value></tag></tags></item><item><uuid>7cd6c524ecab41f9a22489866d503361</uuid><name>PostgreSQL: Get WAL</name><key>pgsql.wal.stat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><delay>5m</delay><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>Master item to collect WAL metrics</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>5cc9c67621cc46e0a42b1eb79bda83b3</uuid><name>WAL: Bytes written</name><type>DEPENDENT</type><key>pgsql.wal.write</key><delay>0</delay><history>7d</history><units>B</units><description>WAL write in bytes</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.write</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.wal.stat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>wal</value></tag></tags></item></items><discovery_rules><discovery_rule><uuid>5c4c658507394f5bb362e601f7c59d63</uuid><name>Database discovery</name><key>pgsql.discovery.db[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key><delay>1h</delay><filter><conditions><condition><macro>{#DBNAME}</macro><value>{$PG.LLD.FILTER.DBNAME}</value><formulaid>A</formulaid></condition></conditions></filter><item_prototypes><item_prototype><uuid>69575e9785184ef5be2502e3cc282220</uuid><name>DB {#DBNAME}: Database size</name><key>pgsql.db.size[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{#DBNAME}&quot;]</key><delay>15m</delay><history>7d</history><units>B</units><description>Database size</description><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>615e6567a85e421bb06ab8cac0eaba69</uuid><name>DB {#DBNAME}: Blocks hit per second</name><type>DEPENDENT</type><key>pgsql.dbstat.blks_hit.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of times disk blocks were found already in the buffer cache, so that a read was not necessary</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].blks_hit</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>9136517d08b447869e5b8f5fd684c3b9</uuid><name>DB {#DBNAME}: Disk blocks read per second</name><type>DEPENDENT</type><key>pgsql.dbstat.blks_read.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of disk blocks read in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].blks_read</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>a76f6d28995441ff9fe28bbc09445e64</uuid><name>DB {#DBNAME}: Detected conflicts per second</name><type>DEPENDENT</type><key>pgsql.dbstat.conflicts.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of queries canceled due to conflicts with recovery in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].conflicts</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>3b51f02258bd4e02829f04ca016dd01d</uuid><expression>min(/PostgreSQL by Zabbix agent/pgsql.dbstat.conflicts.rate[&quot;{#DBNAME}&quot;],5m) &gt; {$PG.CONFLICTS.MAX.WARN:&quot;{#DBNAME}&quot;}</expression><name>DB {#DBNAME}: Too many recovery conflicts</name><event_name>DB {#DBNAME}: Too many recovery conflicts (over {$PG.CONFLICTS.MAX.WARN:&quot;{#DBNAME}&quot;} in 5m)</event_name><priority>AVERAGE</priority><description>The primary and standby servers are in many ways loosely connected. Actions on the primary will have an effect on the standby. As a result, there is potential for negative interactions or conflicts between them.
https://www.postgresql.org/docs/current/hot-standby.html#HOT-STANDBY-CONFLICT</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>b874cc2dd80643208c2479ad25fae0ac</uuid><name>DB {#DBNAME}: Detected deadlocks per second</name><type>DEPENDENT</type><key>pgsql.dbstat.deadlocks.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of detected deadlocks in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].deadlocks</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>deadlocks</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>3bee63fa04d94586937e22aafab9bdd8</uuid><expression>min(/PostgreSQL by Zabbix agent/pgsql.dbstat.deadlocks.rate[&quot;{#DBNAME}&quot;],5m) &gt; {$PG.DEADLOCKS.MAX.WARN:&quot;{#DBNAME}&quot;}</expression><name>DB {#DBNAME}: Deadlock occurred</name><event_name>DB {#DBNAME}: Deadlock occurred (over {$PG.DEADLOCKS.MAX.WARN:&quot;{#DBNAME}&quot;} in 5m)</event_name><priority>HIGH</priority><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>d235ead54c8b41f9a91398c75383e5d7</uuid><name>DB {#DBNAME}: Temp_bytes written per second</name><type>DEPENDENT</type><key>pgsql.dbstat.temp_bytes.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Total amount of data written to temporary files by queries in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].temp_bytes</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>af4e35eee1764d3f97d9c1218867f885</uuid><name>DB {#DBNAME}: Temp_files created per second</name><type>DEPENDENT</type><key>pgsql.dbstat.temp_files.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Total number of temporary files created by queries in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].temp_files</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>storage</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>35c6f93aefe4439bbc36f2f358440b16</uuid><name>DB {#DBNAME}: Tuples deleted per second</name><type>DEPENDENT</type><key>pgsql.dbstat.tup_deleted.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of rows deleted by queries in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].tup_deleted</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>92f33d96f8a348088cdba593c0e66929</uuid><name>DB {#DBNAME}: Tuples fetched per second</name><type>DEPENDENT</type><key>pgsql.dbstat.tup_fetched.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of rows fetched by queries in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].tup_fetched</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>8c03c87a44fe43928c32087ca7561e88</uuid><name>DB {#DBNAME}: Tuples inserted per second</name><type>DEPENDENT</type><key>pgsql.dbstat.tup_inserted.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of rows inserted by queries in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].tup_inserted</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>f6d378f4e38e455fa5a12467fe977657</uuid><name>DB {#DBNAME}: Tuples returned per second</name><type>DEPENDENT</type><key>pgsql.dbstat.tup_returned.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of rows updated by queries in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].tup_returned</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>4c8de8c1064d43ffa18c4f37fead37f7</uuid><name>DB {#DBNAME}: Tuples updated per second</name><type>DEPENDENT</type><key>pgsql.dbstat.tup_updated.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of rows updated by queries in this database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].tup_updated</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>81c33f5b3c31475fa5f28f4ad149a328</uuid><name>DB {#DBNAME}: Commits per second</name><type>DEPENDENT</type><key>pgsql.dbstat.xact_commit.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of transactions in this database that have been committed</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].xact_commit</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>8e5080186d034323be21473099b0b0ce</uuid><name>DB {#DBNAME}: Rollbacks per second</name><type>DEPENDENT</type><key>pgsql.dbstat.xact_rollback.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of transactions in this database that have been rolled back</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].xact_rollback</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.dbstat[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>df9dd9bac2a54f1085b29fb22b394a1f</uuid><name>DB {#DBNAME}: Frozen XID before avtovacuum %</name><type>DEPENDENT</type><key>pgsql.frozenxid.prc_before_av[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>reventing Transaction ID Wraparound Failures
https://www.postgresql.org/docs/current/routine-vacuuming.html#VACUUM-FOR-WRAPAROUND</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.prc_before_av</parameter></parameters></step></preprocessing><master_item><key>pgsql.frozenxid[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>44ddd66ea37449cb8fab6979b98dfd3c</uuid><name>DB {#DBNAME}: Frozen XID before stop %</name><type>DEPENDENT</type><key>pgsql.frozenxid.prc_before_stop[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Preventing Transaction ID Wraparound Failures
https://www.postgresql.org/docs/current/routine-vacuuming.html#VACUUM-FOR-WRAPAROUND</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.prc_before_stop</parameter></parameters></step></preprocessing><master_item><key>pgsql.frozenxid[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transactions</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>709df9c1e29a4ff68a3de9423ff7ae58</uuid><expression>last(/PostgreSQL by Zabbix agent/pgsql.frozenxid.prc_before_stop[&quot;{#DBNAME}&quot;])&lt;{$PG.FROZENXID_PCT_STOP.MIN.HIGH:&quot;{#DBNAME}&quot;}</expression><name>DB {#DBNAME}: VACUUM FREEZE is required to prevent wraparound</name><event_name>DB {#DBNAME}: VACUUM FREEZE is required to prevent wraparound (frozen XID less than {$PG.FROZENXID_PCT_STOP.MIN.HIGH:&quot;{#DBNAME}&quot;} %)</event_name><priority>AVERAGE</priority><description>Preventing Transaction ID Wraparound Failures
https://www.postgresql.org/docs/current/routine-vacuuming.html#VACUUM-FOR-WRAPAROUND</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>ddf6d0b7b5fe4cbbb540687051b8e5f5</uuid><name>DB {#DBNAME}: Get frozen XID</name><key>pgsql.frozenxid[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><tags><tag><tag>component</tag><value>raw</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>3d0acf4b45fc4a72bb2a214222f93f2a</uuid><name>DB {#DBNAME}: Locks total</name><type>DEPENDENT</type><key>pgsql.locks.total[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Total number of locks in the database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].total</parameter></parameters></step></preprocessing><master_item><key>pgsql.locks[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></master_item><tags><tag><tag>component</tag><value>locks</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>ef7d3c9866df44aa9b378e7f125a34de</uuid><expression>min(/PostgreSQL by Zabbix agent/pgsql.locks.total[&quot;{#DBNAME}&quot;],5m)&gt;{$PG.LOCKS.MAX.WARN:&quot;{#DBNAME}&quot;}</expression><name>DB {#DBNAME}: Number of locks is too high</name><event_name>DB {#DBNAME}: Number of locks is too high (over {$PG.LOCKS.MAX.WARN:&quot;{#DBNAME}&quot;} in 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>939ab05c71ed4be9979662203ebba980</uuid><name>DB {#DBNAME}: Queries slow maintenance count</name><type>DEPENDENT</type><key>pgsql.queries.mro.slow_count[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Slow maintenance query count</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].mro_slow_count</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>bbc8f9bf86394cf28e0c2db44ee4711d</uuid><name>DB {#DBNAME}: Queries max maintenance time</name><type>DEPENDENT</type><key>pgsql.queries.mro.time_max[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Max maintenance query time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].mro_time_max</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>f1427228bfa14ad3b7bb9d63bcfaec59</uuid><name>DB {#DBNAME}: Queries sum maintenance time</name><type>DEPENDENT</type><key>pgsql.queries.mro.time_sum[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Sum maintenance query time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].mro_time_sum</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>5d937f46f4684f1e8253ec62e0f75379</uuid><name>DB {#DBNAME}: Queries slow query count</name><type>DEPENDENT</type><key>pgsql.queries.query.slow_count[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Slow query count</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].query_slow_count</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>facc8f6976664da4ad5567d270f0f311</uuid><expression>min(/PostgreSQL by Zabbix agent/pgsql.queries.query.slow_count[&quot;{#DBNAME}&quot;],5m)&gt;{$PG.SLOW_QUERIES.MAX.WARN:&quot;{#DBNAME}&quot;}</expression><name>DB {#DBNAME}: Too many slow queries</name><event_name>DB {#DBNAME}: Too many slow queries (over {$PG.SLOW_QUERIES.MAX.WARN:&quot;{#DBNAME}&quot;} in 5m)</event_name><priority>WARNING</priority><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>044cc16d0a2f46b28d88eff86c33b30b</uuid><name>DB {#DBNAME}: Queries max query time</name><type>DEPENDENT</type><key>pgsql.queries.query.time_max[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Max query time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].query_time_max</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>c6232400b39c4564a30a403859ffb4ee</uuid><name>DB {#DBNAME}: Queries sum query time</name><type>DEPENDENT</type><key>pgsql.queries.query.time_sum[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Sum query time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].query_time_sum</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>f7099043ea6345f0a5531f70f9573a3e</uuid><name>DB {#DBNAME}: Queries slow transaction count</name><type>DEPENDENT</type><key>pgsql.queries.tx.slow_count[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Slow transaction query count</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].tx_slow_count</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>c6800ca30a564766ba745e875cb4e929</uuid><name>DB {#DBNAME}: Queries max transaction time</name><type>DEPENDENT</type><key>pgsql.queries.tx.time_max[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Max transaction query time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].tx_time_max</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>0eda974576794768ac9ddc592ff27e19</uuid><name>DB {#DBNAME}: Queries sum transaction time</name><type>DEPENDENT</type><key>pgsql.queries.tx.time_sum[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Sum transaction query time</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$['{#DBNAME}'].tx_time_sum</parameter></parameters></step></preprocessing><master_item><key>pgsql.queries[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{$PG.QUERY_ETIME.MAX.WARN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>cafcc00cce824c33a321da0e9ecc7f6e</uuid><name>DB {#DBNAME}: Index scans per second</name><type>DEPENDENT</type><key>pgsql.scans.idx.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Number of index scans in the database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.idx</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.scans[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>scans</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>f07396ca9d224e1b819f22efe6c4259d</uuid><name>DB {#DBNAME}: Sequential scans per second</name><type>DEPENDENT</type><key>pgsql.scans.seq.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of sequential scans in the database</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.seq</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pgsql.scans[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key></master_item><tags><tag><tag>component</tag><value>scans</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>4bf92e4b0fed4d32b808b299d9e1fb0c</uuid><name>DB {#DBNAME}: Get scans</name><key>pgsql.scans[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{#DBNAME}&quot;]</key><history>1h</history><trends>0</trends><value_type>TEXT</value_type><description>Number of scans done for table/index in the database</description><tags><tag><tag>component</tag><value>raw</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>3f8124b817f2437096c620d62ec2e055</uuid><name>DB {#DBNAME}: Block hit/read</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.blks_hit.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.blks_read.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>6bd0a0d65b8d43ad946b145cf8a8b533</uuid><name>DB {#DBNAME}: Database size</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.db.size[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;,&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>41e765d906324595a396d8985b204ff5</uuid><name>DB {#DBNAME}: Events</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.xact_commit.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.conflicts.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.deadlocks.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.xact_rollback.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>2b260fdf7623476095429434b5c79041</uuid><name>DB {#DBNAME}: Locks</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.locks.total[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>8a60a92b41b146f49145b86bab559b2e</uuid><name>DB {#DBNAME}: Queries</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.mro.time_max[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.query.time_max[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.tx.time_max[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><drawtype>GRADIENT_LINE</drawtype><color>A54F10</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.mro.time_sum[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>4</sortorder><drawtype>GRADIENT_LINE</drawtype><color>FC6EA3</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.query.time_sum[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>5</sortorder><drawtype>GRADIENT_LINE</drawtype><color>6C59DC</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.tx.time_sum[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>93518b06f71e46ada3dabefa1726b867</uuid><name>DB {#DBNAME}: Slow queries</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.mro.slow_count[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.query.slow_count[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.queries.tx.slow_count[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>779b872280ad46c7a6cdf95c2df7c646</uuid><name>DB {#DBNAME}: Temp files</name><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.temp_bytes.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.temp_files.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>f10be22e3bac4d66936c34ec99446c64</uuid><name>DB {#DBNAME}: Tuples</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.tup_deleted.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.tup_fetched.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.tup_inserted.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.tup_returned.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.dbstat.tup_updated.rate[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>database</value></tag><tag><tag>target</tag><value>postgresql</value></tag></tags><macros><macro><macro>{$PG.CACHE_HITRATIO.MIN.WARN}</macro><value>90</value></macro><macro><macro>{$PG.CHECKPOINTS_REQ.MAX.WARN}</macro><value>5</value></macro><macro><macro>{$PG.CONFLICTS.MAX.WARN}</macro><value>0</value></macro><macro><macro>{$PG.CONN_IDLE_IN_TRANS.MAX.WARN}</macro><value>5</value></macro><macro><macro>{$PG.CONN_TOTAL_PCT.MAX.WARN}</macro><value>90</value></macro><macro><macro>{$PG.CONN_WAIT.MAX.WARN}</macro><value>0</value></macro><macro><macro>{$PG.DB}</macro><value>postgres</value></macro><macro><macro>{$PG.DEADLOCKS.MAX.WARN}</macro><value>0</value></macro><macro><macro>{$PG.FROZENXID_PCT_STOP.MIN.HIGH}</macro><value>75</value></macro><macro><macro>{$PG.HOST}</macro><value>127.0.0.1</value></macro><macro><macro>{$PG.LLD.FILTER.DBNAME}</macro><value>(.*)</value></macro><macro><macro>{$PG.LOCKS.MAX.WARN}</macro><value>100</value></macro><macro><macro>{$PG.PASSWORD}</macro><description>Please set user's password in this macro.</description></macro><macro><macro>{$PG.PING_TIME.MAX.WARN}</macro><value>1s</value></macro><macro><macro>{$PG.PORT}</macro><value>5432</value></macro><macro><macro>{$PG.QUERY_ETIME.MAX.WARN}</macro><value>30</value></macro><macro><macro>{$PG.REPL_LAG.MAX.WARN}</macro><value>10m</value></macro><macro><macro>{$PG.SLOW_QUERIES.MAX.WARN}</macro><value>5</value></macro><macro><macro>{$PG.TRANS_ACTIVE.MAX.WARN}</macro><value>30s</value></macro><macro><macro>{$PG.TRANS_IDLE.MAX.WARN}</macro><value>30s</value></macro><macro><macro>{$PG.TRANS_WAIT.MAX.WARN}</macro><value>30s</value></macro><macro><macro>{$PG.USER}</macro><value>zbx_monitor</value></macro></macros><dashboards><dashboard><uuid>d95f29826778497a9ed265e0c335fd0f</uuid><name>PostgreSQL databases</name><pages><page><widgets><widget><type>GRAPH_PROTOTYPE</type><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>DB {#DBNAME}: Tuples</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><x>12</x><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>DB {#DBNAME}: Events</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>5</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>DB {#DBNAME}: Block hit/read</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><x>12</x><y>5</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>DB {#DBNAME}: Temp files</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>10</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>DB {#DBNAME}: Locks</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><x>12</x><y>10</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>DB {#DBNAME}: Database size</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><y>15</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>DB {#DBNAME}: Queries</name></value></field></fields></widget><widget><type>GRAPH_PROTOTYPE</type><x>12</x><y>15</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>2</value></field><field><type>INTEGER</type><name>columns</name><value>1</value></field><field><type>INTEGER</type><name>rows</name><value>1</value></field><field><type>GRAPH_PROTOTYPE</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>DB {#DBNAME}: Slow queries</name></value></field></fields></widget></widgets></page></pages></dashboard><dashboard><uuid>f2ceabf59fd64ca9828ea55e9b9668bd</uuid><name>PostgreSQL stat</name><pages><page><widgets><widget><type>GRAPH_CLASSIC</type><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>PostgreSQL connections</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><x>12</x><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>PostgreSQL transactions</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><y>5</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>PostgreSQL ping</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><x>12</x><y>5</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>PostgreSQL uptime</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><y>10</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>PostgreSQL replication lag</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><x>12</x><y>10</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>PostgreSQL WAL</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><y>15</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>PostgreSQL bgwriter</name></value></field></fields></widget><widget><type>GRAPH_CLASSIC</type><x>12</x><y>15</y><width>12</width><height>5</height><fields><field><type>INTEGER</type><name>source_type</name><value>0</value></field><field><type>GRAPH</type><name>graphid</name><value><host>PostgreSQL by Zabbix agent</host><name>PostgreSQL checkpoints</name></value></field></fields></widget></widgets></page></pages></dashboard></dashboards><valuemaps><valuemap><uuid>2e376ee568d04e7bbe98cbae4181f313</uuid><name>PostgreSQL recovery role</name><mappings><mapping><value>0</value><newvalue>Master</newvalue></mapping><mapping><value>1</value><newvalue>Standby</newvalue></mapping></mappings></valuemap><valuemap><uuid>7f553f18ef6544ceaa4b50c4ebf0e583</uuid><name>PostgreSQL replication status</name><mappings><mapping><value>0</value><newvalue>Down</newvalue></mapping><mapping><value>1</value><newvalue>Up</newvalue></mapping><mapping><value>2</value><newvalue>Master</newvalue></mapping></mappings></valuemap><valuemap><uuid>372bc939f3924aafa13c4821b83a9276</uuid><name>Service state</name><mappings><mapping><value>0</value><newvalue>Down</newvalue></mapping><mapping><value>1</value><newvalue>Up</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><graphs><graph><uuid>6b4b92c62cb94e10b11f218ed35f6211</uuid><name>PostgreSQL bgwriter</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.buffers_alloc.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.buffers_clean.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.buffers_backend.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.buffers_checkpoint.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.maxwritten_clean.rate</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.buffers_backend_fsync.rate</key></item></graph_item></graph_items></graph><graph><uuid>4a105d193df64be7898ac19a2f07faa4</uuid><name>PostgreSQL checkpoints</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.checkpoints_timed.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.checkpoints_req.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.checkpoint_sync_time</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.bgwriter.checkpoint_write_time</key></item></graph_item></graph_items></graph><graph><uuid>8d41d719832049a5a1fcd6f4da67fb6a</uuid><name>PostgreSQL connections</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.connections.sum.total</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.connections.sum.total_pct</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.connections.sum.active</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.connections.sum.idle</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.connections.sum.idle_in_transaction</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.connections.sum.prepared</key></item></graph_item><graph_item><sortorder>6</sortorder><color>AC8C14</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.connections.sum.waiting</key></item></graph_item></graph_items></graph><graph><uuid>1e9a55ee61824779a9f46f42ec21abef</uuid><name>PostgreSQL ping</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><drawtype>GRADIENT_LINE</drawtype><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.ping[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.ping.time[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>d8cf31fc39584a63b9384d9c3ebf40ee</uuid><name>PostgreSQL replication lag</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.replication.lag.sec[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>10d1de74e9d848399ca038055e5cc8ce</uuid><name>PostgreSQL transactions</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.transactions.active</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.transactions.idle</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.transactions.prepared</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.transactions.waiting</key></item></graph_item></graph_items></graph><graph><uuid>45fe7967596741129b4f2462922636bf</uuid><name>PostgreSQL uptime</name><show_triggers>NO</show_triggers><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.uptime[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.cache.hit[&quot;{$PG.HOST}&quot;,&quot;{$PG.PORT}&quot;,&quot;{$PG.USER}&quot;,&quot;{$PG.PASSWORD}&quot;,&quot;{$PG.DB}&quot;]</key></item></graph_item></graph_items></graph><graph><uuid>93ca2dc7a3ff4a458c45e2a56390ce72</uuid><name>PostgreSQL WAL</name><ymin_type_1>FIXED</ymin_type_1><graph_items><graph_item><color>1A7C11</color><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.wal.write</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><yaxisside>RIGHT</yaxisside><item><host>PostgreSQL by Zabbix agent</host><key>pgsql.wal.count</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
