<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:53Z</date><groups><group><uuid>748ad4d098d447d492bb935c907f652f</uuid><name>Templates/Databases</name></group></groups><templates><template><uuid>43596328d4d74a5592906a9e08e3fd96</uuid><template>TiDB PD by HTTP</template><name>TiDB PD by HTTP</name><description>The template to monitor PD server of TiDB cluster by Zabbix that works without any external scripts.
Most of the metrics are collected in one go, thanks to Zabbix bulk data collection.
Don't forget to change the macros {$PD.URL}, {$PD.PORT}.

Template `TiDB PD by HTTP` â€” collects metrics by HTTP agent from PD /metrics endpoint and from monitoring API.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback

Template tooling version used: 0.41</description><groups><group><name>Templates/Databases</name></group></groups><items><item><uuid>3a1fd879a08a445cbf438f3d68078111</uuid><name>PD: Get instance metrics</name><type>HTTP_AGENT</type><key>pd.get_metrics</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Get TiDB PD instance metrics.</description><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters></step><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter/></parameters></step></preprocessing><url>{$PD.URL}:{$PD.PORT}/metrics</url><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>7eb740eed4eb43a0a449e1c1436e582b</uuid><name>PD: Get instance status</name><type>HTTP_AGENT</type><key>pd.get_status</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><description>Get TiDB PD instance status info.</description><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>{&quot;status&quot;: &quot;0&quot;}</error_handler_params></step></preprocessing><url>{$PD.URL}:{$PD.PORT}/pd/api/v1/status</url><tags><tag><tag>component</tag><value>health</value></tag><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>101266930d0747748bf3cbd9259e2818</uuid><name>PD: GRPC Commands total, rate</name><type>DEPENDENT</type><key>pd.grpc_command.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The rate at which gRPC commands are completed.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;grpc_server_handling_seconds_count&quot;)].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>grpc</value></tag></tags></item><item><uuid>c18f702f68bf4fed94a598daffdada8a</uuid><name>PD: Status</name><type>DEPENDENT</type><key>pd.status</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Status of PD instance.</description><valuemap><name>Service state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.status</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>1</error_handler_params></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_status</key></master_item><tags><tag><tag>component</tag><value>health</value></tag></tags><triggers><trigger><uuid>ab1d0d23dad844099e42debb71512887</uuid><expression>last(/TiDB PD by HTTP/pd.status)=0</expression><name>PD: Instance is not responding</name><priority>AVERAGE</priority><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>0b71c8a5104b46ebbeabe0d708b6676e</uuid><name>PD: Uptime</name><type>DEPENDENT</type><key>pd.uptime</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>uptime</units><description>The runtime of each PD instance.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.start_timestamp</parameter></parameters></step><step><type>JAVASCRIPT</type><parameters><parameter>//use boottime to calculate uptime
return (Math.floor(Date.now()/1000)-Number(value));</parameter></parameters></step></preprocessing><master_item><key>pd.get_status</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>9f47a19f6f424df598e74c5a653ebf27</uuid><expression>last(/TiDB PD by HTTP/pd.uptime)&lt;10m</expression><name>PD: has been restarted</name><event_name>PD: has been restarted (uptime &lt; 10m)</event_name><priority>INFO</priority><description>Uptime is less than 10 minutes</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>c7e8e9bf01d04e5db25bd8eaafff3b80</uuid><name>PD: Version</name><type>DEPENDENT</type><key>pd.version</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Version of the PD instance.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$.version</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>pd.get_status</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>6fb6045405af4c89b09750f57ada472a</uuid><expression>last(/TiDB PD by HTTP/pd.version,#1)&lt;&gt;last(/TiDB PD by HTTP/pd.version,#2) and length(last(/TiDB PD by HTTP/pd.version))&gt;0</expression><name>PD: Version has changed</name><event_name>PD: Version has changed (new version: {ITEM.VALUE})</event_name><priority>INFO</priority><description>PD version has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item></items><discovery_rules><discovery_rule><uuid>cd1f27cf5f1d4f6f84032386ec7f8abb</uuid><name>Cluster metrics discovery</name><type>DEPENDENT</type><key>pd.cluster.discovery</key><delay>0</delay><description>Discovery cluster specific metrics.</description><item_prototypes><item_prototype><uuid>fe49e1de54214fb0ac882feb42fdee3b</uuid><name>TiDB cluster: Number of regions</name><type>DEPENDENT</type><key>pd.cluster_status.leader_count[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The total count of cluster Regions.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;leader_count&quot;)].value.first()</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>regions</value></tag></tags></item_prototype><item_prototype><uuid>0950ba514e05447c8cfe726ec2d76944</uuid><name>TiDB cluster: Current peer count</name><type>DEPENDENT</type><key>pd.cluster_status.region_count[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The current count of all cluster peers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;region_count&quot;)].value.first()</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>peers</value></tag></tags></item_prototype><item_prototype><uuid>d39f58372e3f464c87b2ec42acdf2061</uuid><name>TiDB cluster: Storage capacity</name><type>DEPENDENT</type><key>pd.cluster_status.storage_capacity[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>The total storage capacity for this TiDB cluster.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;storage_capacity&quot;)].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>storage</value></tag></tags></item_prototype><item_prototype><uuid>c72e6a2f89d041c4bf764021b9bc182c</uuid><name>TiDB cluster: Storage size</name><type>DEPENDENT</type><key>pd.cluster_status.storage_size[{#SINGLETON}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>B</units><description>The storage size that is currently used by the TiDB cluster.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;storage_size&quot;)].value.first()</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>storage</value></tag></tags></item_prototype><item_prototype><uuid>517cea991add45319d30047ac96fd9e4</uuid><name>TiDB cluster: Disconnect stores</name><type>DEPENDENT</type><key>pd.cluster_status.store_disconnected[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The count of disconnected stores.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;store_disconnected_count&quot;)].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>stores</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>077d39f8ea194081a9d0c5dfdec4d1b5</uuid><expression>last(/TiDB PD by HTTP/pd.cluster_status.store_disconnected[{#SINGLETON}])&gt;0</expression><name>TiDB cluster: There are disconnected TiKV nodes</name><priority>WARNING</priority><description>PD does not receive a TiKV heartbeat within 20 seconds. Normally a TiKV heartbeat comes in every 10 seconds.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>7125a7c858264f339e879c1389c6c027</uuid><name>TiDB cluster: Down stores</name><type>DEPENDENT</type><key>pd.cluster_status.store_down[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The count of down stores.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;store_down_count&quot;)].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>stores</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>526b935d3fa04825b7544eb6efd50ab5</uuid><expression>last(/TiDB PD by HTTP/pd.cluster_status.store_down[{#SINGLETON}])&gt;0</expression><name>TiDB cluster: There are offline TiKV nodes</name><priority>AVERAGE</priority><description>PD has not received a TiKV heartbeat for a long time.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>c3bd9d1e0f6c427ab5232e57769030d1</uuid><name>TiDB cluster: Lowspace stores</name><type>DEPENDENT</type><key>pd.cluster_status.store_low_space[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The count of low space stores.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;store_low_space_count&quot;)].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>stores</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>87ef0f211afd4d58adec05007ef1d263</uuid><expression>last(/TiDB PD by HTTP/pd.cluster_status.store_low_space[{#SINGLETON}])&gt;0</expression><name>TiDB cluster: There are low space TiKV nodes</name><priority>AVERAGE</priority><description>Indicates that there is no sufficient space on the TiKV node.</description><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>3c24fb49463b45f199dbc3955e87d01b</uuid><name>TiDB cluster: Offline stores</name><type>DEPENDENT</type><key>pd.cluster_status.store_offline[{#SINGLETON}]</key><delay>0</delay><history>7d</history><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;store_offline_count&quot;)].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>stores</value></tag></tags></item_prototype><item_prototype><uuid>476a1b6e3c9b4b41ae1637f0e12801c9</uuid><name>TiDB cluster: Tombstone stores</name><type>DEPENDENT</type><key>pd.cluster_status.store_tombstone[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The count of tombstone stores.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;store_tombstone_count&quot;)].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>stores</value></tag></tags></item_prototype><item_prototype><uuid>89db2b996fbe41bdb6b82ccf75139090</uuid><name>TiDB cluster: Unhealth stores</name><type>DEPENDENT</type><key>pd.cluster_status.store_unhealth[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The count of unhealthy stores.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;store_unhealth_count&quot;)].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>stores</value></tag></tags></item_prototype><item_prototype><uuid>ff80108e2a5e45779a428a6fd31ea089</uuid><name>TiDB cluster: Normal stores</name><type>DEPENDENT</type><key>pd.cluster_status.store_up[{#SINGLETON}]</key><delay>0</delay><history>7d</history><description>The count of healthy storage instances.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_cluster_status&quot; &amp;&amp; @.labels.type == &quot;store_up_count&quot;)].value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>cluster</value></tag><tag><tag>component</tag><value>stores</value></tag></tags></item_prototype></item_prototypes><trigger_prototypes><trigger_prototype><uuid>843d566b33bc401390c2a633d08bb033</uuid><expression>min(/TiDB PD by HTTP/pd.cluster_status.storage_size[{#SINGLETON}],5m)/last(/TiDB PD by HTTP/pd.cluster_status.storage_capacity[{#SINGLETON}])*100&gt;{$PD.STORAGE_USAGE.MAX.WARN}</expression><name>TiDB cluster: Current storage usage is too high</name><event_name>TiDB cluster: Current storage usage is too high (over {$PD.STORAGE_USAGE.MAX.WARN}% for 5m)</event_name><priority>WARNING</priority><description>Over {$PD.STORAGE_USAGE.MAX.WARN}% of the cluster space is occupied.</description><tags><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger_prototype></trigger_prototypes><graph_prototypes><graph_prototype><uuid>270de7aa73cf454cb147a3f5b39ebb35</uuid><name>TiDB cluster: Storage Usage[{#SINGLETON}]</name><graph_items><graph_item><color>1A7C11</color><item><host>TiDB PD by HTTP</host><key>pd.cluster_status.storage_size[{#SINGLETON}]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>TiDB PD by HTTP</host><key>pd.cluster_status.storage_capacity[{#SINGLETON}]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><master_item><key>pd.get_metrics</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;pd_cluster_status&quot;)]</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>[]</error_handler_params></step><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.stringify(value != &quot;[]&quot; ? [{'{#SINGLETON}': ''}] : []);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>113c6ba7d7f74051b042241441c43db0</uuid><name>gRPC commands discovery</name><type>DEPENDENT</type><key>pd.grpc_command.discovery</key><delay>0</delay><description>Discovery grpc commands specific metrics.</description><item_prototypes><item_prototype><uuid>7b96abc0e68a405ea5693f4f445936fe</uuid><name>PD: GRPC Commands: {#GRPC_METHOD}, rate</name><type>DEPENDENT</type><key>pd.grpc_command.rate[{#GRPC_METHOD}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The rate per command type at which gRPC commands are completed.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;grpc_server_handling_seconds_count&quot; &amp;&amp; @.labels.grpc_method == &quot;{#GRPC_METHOD}&quot;)].value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>grpc</value></tag><tag><tag>grpc_method</tag><value>{#GRPC_METHOD}</value></tag></tags></item_prototype></item_prototypes><master_item><key>pd.get_metrics</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;grpc_server_handling_seconds_count&quot;)]</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>var lookup = {},
    result = [];

JSON.parse(value).forEach(function (item) {
    var grpc_method = item.labels.grpc_method;
    if (!(lookup[grpc_method])) {
        lookup[grpc_method] = 1;
        result.push({ &quot;{#GRPC_METHOD}&quot;: grpc_method });
    }
})

return JSON.stringify(result);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>2cb28d7c862d442a84b5942eb4b54e2f</uuid><name>Region discovery</name><type>DEPENDENT</type><key>pd.region.discovery</key><delay>0</delay><description>Discovery region specific metrics.</description><item_prototypes><item_prototype><uuid>024bf1d31bbd40a49d683d962887c6e0</uuid><name>PD: Region heartbeat: error, rate</name><type>DEPENDENT</type><key>pd.region_heartbeat.error.rate[{#STORE_ADDRESS}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The count of heartbeats with the error status per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_scheduler_region_heartbeat&quot; &amp;&amp; @.labels.status == &quot;err&quot; &amp;&amp; @.labels.type == &quot;report&quot; &amp;&amp; @.labels.address == &quot;{#STORE_ADDRESS}&quot;)].value.sum()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>address</tag><value>{#STORE_ADDRESS}</value></tag><tag><tag>component</tag><value>regions</value></tag></tags></item_prototype><item_prototype><uuid>1d1d686f5c544a89a691a9b75e5c3b11</uuid><name>PD: Region heartbeat: active, rate</name><type>DEPENDENT</type><key>pd.region_heartbeat.ok.rate[{#STORE_ADDRESS}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The count of heartbeats with the ok status per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_scheduler_region_heartbeat&quot; &amp;&amp; @.labels.status == &quot;ok&quot; &amp;&amp; @.labels.type == &quot;report&quot; &amp;&amp; @.labels.address == &quot;{#STORE_ADDRESS}&quot;)].value.sum()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>address</tag><value>{#STORE_ADDRESS}</value></tag><tag><tag>component</tag><value>regions</value></tag></tags></item_prototype><item_prototype><uuid>c44f934ce8a144afa95252041535ef44</uuid><name>PD: Region schedule push: total, rate</name><type>DEPENDENT</type><key>pd.region_heartbeat.push.err.rate[{#STORE_ADDRESS}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_scheduler_region_heartbeat&quot; &amp;&amp; @.labels.type == &quot;push&quot; &amp;&amp; @.labels.address == &quot;{#STORE_ADDRESS}&quot;)].value.sum()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>address</tag><value>{#STORE_ADDRESS}</value></tag><tag><tag>component</tag><value>regions</value></tag></tags></item_prototype><item_prototype><uuid>ea76344669de4251a0e7bef35d70494a</uuid><name>PD: Region heartbeat: total, rate</name><type>DEPENDENT</type><key>pd.region_heartbeat.rate[{#STORE_ADDRESS}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The count of heartbeats reported to PD per instance per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_scheduler_region_heartbeat&quot; &amp;&amp; @.labels.type == &quot;report&quot; &amp;&amp; @.labels.address == &quot;{#STORE_ADDRESS}&quot;)].value.sum()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>address</tag><value>{#STORE_ADDRESS}</value></tag><tag><tag>component</tag><value>regions</value></tag></tags></item_prototype></item_prototypes><master_item><key>pd.get_metrics</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_scheduler_region_heartbeat&quot;)]</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>var lookup = {},
    result = [];

JSON.parse(value).forEach(function (item) {
    var address = item.labels.address;
    if (!(lookup[address])) {
        lookup[address] = 1;
        result.push({ &quot;{#STORE_ADDRESS}&quot;: address });
    }
})

return JSON.stringify(result);</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>771ba9e078a14ca489eb2acf906080e9</uuid><name>Region labels discovery</name><type>DEPENDENT</type><key>pd.region_labels.discovery</key><delay>0</delay><description>Discovery region labels specific metrics.</description><item_prototypes><item_prototype><uuid>117efc3f2fe64c51a18cd3be162185ea</uuid><name>TiDB cluster: Regions label: {#TYPE}</name><type>DEPENDENT</type><key>pd.region_labels[{#TYPE}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The number of Regions in different label levels.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_regions_label_level&quot; &amp;&amp; @.labels.type == &quot;{#TYPE}&quot;)].value.first()</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>regions</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags></item_prototype></item_prototypes><master_item><key>pd.get_metrics</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_regions_label_level&quot;)]</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>output = JSON.parse(value).map(function(item){
     return {
         &quot;{#TYPE}&quot;: item.labels.type,
     }})
 return JSON.stringify({&quot;data&quot;: output})</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>ffbf9adaa72842fdbb49c008625c1575</uuid><name>Region status discovery</name><type>DEPENDENT</type><key>pd.region_status.discovery</key><delay>0</delay><description>Discovery region status specific metrics.</description><item_prototypes><item_prototype><uuid>45ef4940b0454492b70116d8958c9b11</uuid><name>TiDB cluster: Regions status: {#TYPE}</name><type>DEPENDENT</type><key>pd.region_status[{#TYPE}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The health status of Regions indicated via the count of unusual Regions including pending peers, down peers, extra peers, offline peers, missing peers, learner peers and incorrect namespaces.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_regions_status&quot; &amp;&amp; @.labels.type == &quot;{#TYPE}&quot;)].value.first()</parameter></parameters></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>regions</value></tag><tag><tag>type</tag><value>{#TYPE}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>2bc6b48bbfd8436e80903ea947571501</uuid><expression>min(/TiDB PD by HTTP/pd.region_status[{#TYPE}],5m)&gt;0</expression><name>TiDB cluster: There are unresponsive peers</name><discover>NO_DISCOVER</discover><priority>WARNING</priority><description>The number of Regions with an unresponsive peer reported by the Raft leader.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>1f80bd81d11345f59699617113a0cad5</uuid><expression>min(/TiDB PD by HTTP/pd.region_status[{#TYPE}],5m)&gt;{$PD.MISS_REGION.MAX.WARN}</expression><name>TiDB cluster: Too many missed regions</name><event_name>TiDB cluster: Too many missed regions (over {$PD.MISS_REGION.MAX.WARN} in 5m)</event_name><discover>NO_DISCOVER</discover><priority>WARNING</priority><description>The number of Region replicas is smaller than the value of max-replicas. When a TiKV machine is down and its downtime exceeds max-down-time, it usually leads to missing replicas for some Regions during a period of time. When a TiKV node is made offline, it might result in a small number of Regions with missing replicas.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><master_item><key>pd.get_metrics</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_regions_status&quot;)]</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>output = JSON.parse(value).map(function(item){
     return {
         &quot;{#TYPE}&quot;: item.labels.type,
     }})
 return JSON.stringify({&quot;data&quot;: output})</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><overrides><override><name>Too many missed regions trigger</name><step>1</step><filter><conditions><condition><macro>{#TYPE}</macro><value>miss_peer_region_count</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>TRIGGER_PROTOTYPE</operationobject><operator>LIKE</operator><value>Too many missed regions</value><status>ENABLED</status><discover>DISCOVER</discover></operation></operations></override><override><name>Unresponsive peers trigger</name><step>2</step><filter><conditions><condition><macro>{#TYPE}</macro><value>down_peer_region_count</value><formulaid>A</formulaid></condition></conditions></filter><operations><operation><operationobject>TRIGGER_PROTOTYPE</operationobject><operator>LIKE</operator><value>There are unresponsive peers</value><status>ENABLED</status><discover>DISCOVER</discover></operation></operations></override></overrides></discovery_rule><discovery_rule><uuid>b4b8007810ad4f7ba8da212cdde5b71b</uuid><name>Running scheduler discovery</name><type>DEPENDENT</type><key>pd.scheduler.discovery</key><delay>0</delay><description>Discovery scheduler specific metrics.</description><item_prototypes><item_prototype><uuid>c6748a20540f49b293795bc72480dda7</uuid><name>TiDB cluster: Scheduler status: {#KIND}</name><type>DEPENDENT</type><key>pd.scheduler[{#KIND}]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>The current running schedulers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_regions_status&quot; &amp;&amp; @.labels.type == &quot;allow&quot; &amp;&amp; @.labels.kind == &quot;{#KIND}&quot;)].value.first()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>pd.get_metrics</key></master_item><tags><tag><tag>component</tag><value>scheduler</value></tag><tag><tag>scheduler</tag><value>{#KIND}</value></tag></tags></item_prototype></item_prototypes><master_item><key>pd.get_metrics</key></master_item><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name == &quot;pd_scheduler_status&quot; &amp;&amp; @.labels.type == &quot;allow&quot;)]</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>JAVASCRIPT</type><parameters><parameter>output = JSON.parse(value).map(function(item){
     return {
         &quot;{#KIND}&quot;: item.labels.kind,
     }})
 return JSON.stringify({&quot;data&quot;: output})</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>database</value></tag><tag><tag>target</tag><value>pd</value></tag><tag><tag>target</tag><value>tidb</value></tag></tags><macros><macro><macro>{$PD.MISS_REGION.MAX.WARN}</macro><value>100</value><description>Maximum number of missed regions</description></macro><macro><macro>{$PD.PORT}</macro><value>2379</value><description>The port of PD server metrics web endpoint</description></macro><macro><macro>{$PD.STORAGE_USAGE.MAX.WARN}</macro><value>80</value><description>Maximum percentage of cluster space used</description></macro><macro><macro>{$PD.URL}</macro><value>localhost</value><description>PD server URL</description></macro></macros><valuemaps><valuemap><uuid>bce54cbdf2b8487985f9c7847a4c4918</uuid><name>Service state</name><mappings><mapping><value>0</value><newvalue>Down</newvalue></mapping><mapping><value>1</value><newvalue>Up</newvalue></mapping></mappings></valuemap></valuemaps></template></templates></zabbix_export>
