<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:45Z</date><groups><group><uuid>748ad4d098d447d492bb935c907f652f</uuid><name>Templates/Databases</name></group></groups><templates><template><uuid>001a1677f6a949b6bddfdb2926023300</uuid><template>MSSQL by ODBC</template><name>MSSQL by ODBC</name><description>1. Create an MSSQL user for monitoring.
  View Server State and View Any Definition permissions should be granted to the user.
  Grant this user read permissions to the sysjobschedules, sysjobhistory, sysjobs tables.
  For more information, see MSSQL documentation.
2. Set the user name and password in host macros ({$MSSQL.USER} and {$MSSQL.PASSWORD}).
  Do not forget to install Microsoft ODBC driver on Zabbix server or Zabbix proxy.
  See Microsoft documentation for instructions: https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver15.
  Note! Credentials in the odbc.ini do not work for MSSQL.
3. For named instance set the value of {$MSSQL.INSTANCE} macro as MSSQL$instance name.
The &quot;Service's TCP port state&quot; item uses {HOST.CONN} and {$MSSQL.PORT} macros to check the availability of the MSSQL instance.


You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/

Template tooling version used: 0.41</description><groups><group><name>Templates/Databases</name></group></groups><items><item><uuid>cae1f9b034b04357b038212b04cac794</uuid><name>MSSQL: Get job status</name><type>ODBC</type><key>db.odbc.get[get_job_status,&quot;{$MSSQL.DSN}&quot;]</key><delay>10m</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><params>SELECT sj.name AS JobName
, sj.enabled AS Enabled
, sjs.last_run_outcome AS RunStatus
, sjs.last_outcome_message AS LastRunStatusMessage
, sjs.last_run_duration/10000*3600 + sjs.last_run_duration/100%100*60 + sjs.last_run_duration%100 AS RunDuration
, CASE sjs.last_run_date
    WHEN 0 THEN NULL
    ELSE msdb.dbo.agent_datetime(sjs.last_run_date,sjs.last_run_time)
    END AS LastRunDateTime
, sja.next_scheduled_run_date AS NextRunDateTime
FROM msdb..sysjobs AS sj
LEFT JOIN msdb..sysjobservers AS sjs ON sj.job_id = sjs.job_id
LEFT JOIN ( SELECT job.job_id,
    max(act.session_id) AS s_id,
    max(act.next_scheduled_run_date) AS next_scheduled_run_date
    FROM msdb..sysjobs AS job
    LEFT JOIN msdb..sysjobactivity AS act ON act.job_id = job.job_id
    GROUP BY job.job_id ) AS sja ON sja.job_id = sj.job_id
WHERE Enabled = 1</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>The item gets sql agent job status.</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>9b106ca122fb4b75a761e80f4239f906</uuid><name>MSSQL: Get last backup</name><type>ODBC</type><key>db.odbc.get[get_last_backup,&quot;{$MSSQL.DSN}&quot;]</key><delay>10m</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><params>SELECT bs.database_name as dbname,[type], DATEDIFF(SECOND, bs.backup_finish_date, getdate()) as timesincelastbackup, (DATEDIFF(SECOND, bs.backup_start_date, bs.backup_finish_date)) as duration
FROM msdb.dbo.backupset as bs WHERE bs.database_name not in (
SELECT
AGDatabases.database_name AS Databasename
FROM sys.dm_hadr_availability_group_states States
INNER JOIN master.sys.availability_groups Groups ON States.group_id = Groups.group_id
INNER JOIN sys.availability_databases_cluster AGDatabases ON Groups.group_id = AGDatabases.group_id
WHERE primary_replica != @@Servername OR primary_replica is NULL
)
GROUP BY bs.database_name, backup_finish_date, [type], backup_start_date
HAVING backup_finish_date = (SELECT MAX(backup_finish_date) from msdb.dbo.backupset WHERE database_name = bs.database_name AND bs.type = [type])
ORDER BY bs.database_name</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>The item gets information about backup processes.</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>ff07b83d161c4e0fbddf8c2e2c282258</uuid><name>MSSQL: Get performance counters</name><type>ODBC</type><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key><delay>0;m0-59</delay><history>0</history><trends>0</trends><value_type>TEXT</value_type><params>SELECT object_name,counter_name,instance_name,cntr_value
FROM sys.dm_os_performance_counters
UNION
SELECT '{$MSSQL.INSTANCE}' as object_name,'Version' as counter_name,@@version as instance_name,0 as cntr_value
UNION
SELECT '{$MSSQL.INSTANCE}' as object_name,'Uptime' as counter_name,'' as instance_name,DATEDIFF(second,sqlserver_start_time,GETDATE()) as cntr_value
FROM sys.dm_os_sys_info
UNION
SELECT '{$MSSQL.INSTANCE}:Databases' as object_name,'State' as counter_name,name as instance_name,state as cntr_value
FROM sys.databases
UNION
SELECT a.object_name,'BufferCacheHitRatio' as counter_name,'' as instance_name,cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
FROM sys.dm_os_performance_counters a
JOIN (SELECT cntr_value,OBJECT_NAME
FROM sys.dm_os_performance_counters
WHERE counter_name='Buffer cache hit ratio base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Buffer Manager') b
ON a.OBJECT_NAME=b.OBJECT_NAME
WHERE a.counter_name='Buffer cache hit ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Buffer Manager'
UNION
SELECT a.object_name,'WorktablesFromCacheRatio' as counter_name,'' as instance_name,cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
FROM sys.dm_os_performance_counters a
JOIN (SELECT cntr_value,OBJECT_NAME
FROM sys.dm_os_performance_counters
WHERE counter_name='Worktables From Cache Base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Access Methods') b
ON a.OBJECT_NAME=b.OBJECT_NAME
WHERE a.counter_name='Worktables From Cache Ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Access Methods'
UNION
SELECT a.object_name,'CacheHitRatio' as counter_name,'_Total' as instance_name,cast(a.cntr_value*100.0/b.cntr_value as dec(3,0)) as cntr_value
FROM sys.dm_os_performance_counters a
JOIN (SELECT cntr_value,OBJECT_NAME
FROM sys.dm_os_performance_counters
WHERE counter_name='Cache Hit Ratio base' AND OBJECT_NAME='{$MSSQL.INSTANCE}:Plan Cache' AND instance_name='_Total') b
ON a.OBJECT_NAME=b.OBJECT_NAME
WHERE a.counter_name='Cache Hit Ratio' AND a.OBJECT_NAME='{$MSSQL.INSTANCE}:Plan Cache' AND instance_name='_Total'</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>The item gets server global status information.</description><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>9a83826b50ac4928b9a716cf94ed6b61</uuid><name>MSSQL: Auto-param attempts per second</name><type>DEPENDENT</type><key>mssql.autoparam_attempts_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of auto-parameterization attempts per second. The total should be the sum of the failed, safe, and unsafe auto-parameterizations. Auto-parameterization occurs when an instance of SQL Server tries to parameterize a Transact-SQL request by replacing some literals with parameters to me reuse of the resulting cached execution plan across multiple similar-looking requests possible. Note that auto-parameterizations are also known as simple parameterizations in the newer versions of SQL Server. This counter does not include forced parameterizations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Statistics' &amp;&amp; @.counter_name=='Auto-Param Attempts/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>1d49af2907d541719e4482439de3ef40</uuid><name>MSSQL: Average latch wait time</name><type>CALCULATED</type><key>mssql.average_latch_wait_time</key><delay>0;m0-59s3</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><params>(last(//mssql.average_latch_wait_time_raw) - last(//mssql.average_latch_wait_time_raw,#2)) /
(last(//mssql.average_latch_wait_time_base) - last(//mssql.average_latch_wait_time_base,#2) +
(last(//mssql.average_latch_wait_time_base) - last(//mssql.average_latch_wait_time_base,#2)=0))</params><description>Average latch wait time (in milliseconds) for latch requests that had to wait.</description><tags><tag><tag>component</tag><value>wait-time</value></tag></tags></item><item><uuid>f9d78cd9c941471287a24ca94005e9ac</uuid><name>MSSQL: Average latch wait time base</name><type>DEPENDENT</type><key>mssql.average_latch_wait_time_base</key><delay>0</delay><history>7d</history><description>For internal use only.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Latches' &amp;&amp; @.counter_name=='Average Latch Wait Time Base')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>wait-time</value></tag></tags></item><item><uuid>7248e70669674ef5a7a85deb20b1fe8e</uuid><name>MSSQL: Average latch wait time raw</name><type>DEPENDENT</type><key>mssql.average_latch_wait_time_raw</key><delay>0</delay><history>7d</history><units>ms</units><description>Average latch wait time (in milliseconds) for latch requests that had to wait.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Latches' &amp;&amp; @.counter_name=='Average Latch Wait Time (ms)')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>wait-time</value></tag></tags></item><item><uuid>2915866b5891480aafd73463aca88a21</uuid><name>MSSQL: Total average wait time</name><type>CALCULATED</type><key>mssql.average_wait_time</key><delay>0;m0-59s3</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><params>(last(//mssql.average_wait_time_raw) - last(//mssql.average_wait_time_raw,#2)) /
(last(//mssql.average_wait_time_base) - last(//mssql.average_wait_time_base,#2) +
(last(//mssql.average_wait_time_base) - last(//mssql.average_wait_time_base,#2)=0))</params><description>The average wait time, in milliseconds, for each lock request that had to wait.</description><tags><tag><tag>component</tag><value>wait-time</value></tag></tags><triggers><trigger><uuid>fad2c1e9d0ba45bcbb47ccbb327f0b98</uuid><expression>min(/MSSQL by ODBC/mssql.average_wait_time,5m)&gt;{$MSSQL.AVERAGE_WAIT_TIME.MAX}</expression><name>MSSQL: Total average wait time for locks is high</name><event_name>MSSQL: Total average wait time for locks is high (over {$MSSQL.AVERAGE_WAIT_TIME.MAX}ms for 5m)</event_name><priority>WARNING</priority><description>An average wait time longer than 500ms may indicate excessive blocking. This value should generally correlate to 'Lock Waits/sec' and move up or down with it accordingly.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>2a63096aa40a4374bdd7426b9fe0767e</uuid><name>MSSQL: Total average wait time base</name><type>DEPENDENT</type><key>mssql.average_wait_time_base</key><delay>0</delay><history>7d</history><description>For internal use only.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Locks' &amp;&amp; @.counter_name=='Average Wait Time Base' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>wait-time</value></tag></tags></item><item><uuid>f0cd7858dabf4b7da93314dc9a8ddeaa</uuid><name>MSSQL: Total average wait time raw</name><type>DEPENDENT</type><key>mssql.average_wait_time_raw</key><delay>0</delay><history>7d</history><units>ms</units><description>Average amount of wait time (in milliseconds) for each lock request that resulted in a wait. Information for all locks.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Locks' &amp;&amp; @.counter_name=='Average Wait Time (ms)' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>wait-time</value></tag></tags></item><item><uuid>00b6e46811fd43a396e2a38dd976d220</uuid><name>MSSQL: Batch requests per second</name><type>DEPENDENT</type><key>mssql.batch_requests_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of Transact-SQL command batches received per second. This statistic is affected by all constraints (such as I/O, number of users, cache size, complexity of requests, and so on). High batch requests mean good throughput.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Statistics' &amp;&amp; @.counter_name=='Batch Requests/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>ed950d204a1f40a6925856828c7807aa</uuid><name>MSSQL: Buffer cache hit ratio</name><type>DEPENDENT</type><key>mssql.buffer_cache_hit_ratio</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Indicates the percentage of pages found in the buffer cache without having to read from disk. The ratio is the total number of cache hits divided by the total number of cache lookups over the last few thousand page accesses. After a long period of time, the ratio changes very little. Since reading from the cache is much less expensive than reading from the disk, a higher value is preferred for this item. To increase the buffer cache hit ratio, consider increasing the amount of memory available to SQL Server or using the buffer pool extension feature.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='BufferCacheHitRatio')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag></tags><triggers><trigger><uuid>f84fa297023a4aee903e4d32bbad9360</uuid><expression>max(/MSSQL by ODBC/mssql.buffer_cache_hit_ratio,5m)&lt;{$MSSQL.BUFFER_CACHE_RATIO.MIN.CRIT}</expression><name>MSSQL: Percentage of the buffer cache efficiency is low</name><event_name>MSSQL: Percentage of the buffer cache efficiency is low (below {$MSSQL.BUFFER_CACHE_RATIO.MIN.CRIT}% for 5m)</event_name><priority>HIGH</priority><description>Too low buffer cache hit ratio.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger><trigger><uuid>42e5bf05da06425282134d3cf806d023</uuid><expression>max(/MSSQL by ODBC/mssql.buffer_cache_hit_ratio,5m)&lt;{$MSSQL.BUFFER_CACHE_RATIO.MIN.WARN}</expression><name>MSSQL: Percentage of the buffer cache efficiency is low</name><event_name>MSSQL: Percentage of the buffer cache efficiency is low (below {$MSSQL.BUFFER_CACHE_RATIO.MIN.WARN}% for 5m)</event_name><priority>WARNING</priority><description>Low buffer cache hit ratio.</description><dependencies><dependency><name>MSSQL: Percentage of the buffer cache efficiency is low</name><expression>max(/MSSQL by ODBC/mssql.buffer_cache_hit_ratio,5m)&lt;{$MSSQL.BUFFER_CACHE_RATIO.MIN.CRIT}</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>1900fc83a4d74c599f5f3438450b5d8b</uuid><name>MSSQL: Cache hit ratio</name><type>DEPENDENT</type><key>mssql.cache_hit_ratio</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Ratio between cache hits and lookups.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Plan Cache' &amp;&amp; @.counter_name=='CacheHitRatio' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag></tags></item><item><uuid>064e1279ae0a4260ab02c08cd3c3f77d</uuid><name>MSSQL: Cache objects in use</name><type>DEPENDENT</type><key>mssql.cache_objects_in_use</key><delay>0</delay><history>7d</history><description>Number of cache objects in use.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Plan Cache' &amp;&amp; @.counter_name=='Cache Objects in use' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag></tags></item><item><uuid>de8c0d7f9c0b42438560dc28e47fdd19</uuid><name>MSSQL: Cache object counts</name><type>DEPENDENT</type><key>mssql.cache_object_counts</key><delay>0</delay><history>7d</history><description>Number of cache objects in the cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Plan Cache' &amp;&amp; @.counter_name=='Cache Object Counts' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag></tags></item><item><uuid>ae2d22cd04ed452dbdb04ae3f71b8586</uuid><name>MSSQL: Cache pages</name><type>DEPENDENT</type><key>mssql.cache_pages</key><delay>0</delay><history>7d</history><description>Number of 8-kilobyte (KB) pages used by cache objects.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Plan Cache' &amp;&amp; @.counter_name=='Cache Pages' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag><tag><tag>component</tag><value>page</value></tag></tags></item><item><uuid>d72b6aadab0c4d6d83bc72da0ce661c3</uuid><name>MSSQL: Checkpoint pages per second</name><type>DEPENDENT</type><key>mssql.checkpoint_pages_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Indicates the number of pages flushed to disk per second by a checkpoint or other operation which required all dirty pages to be flushed.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Checkpoint pages/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>page</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>9c1ca822375644669821fe1bea4c5f2a</uuid><name>MSSQL: Database pages</name><type>DEPENDENT</type><key>mssql.database_pages</key><delay>0</delay><history>7d</history><description>Indicates the number of pages in the buffer pool with database content.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Database pages')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>page</value></tag></tags></item><item><uuid>871e3520aac84c18bcaf2f3a0d565b79</uuid><name>MSSQL: Total data file size</name><type>DEPENDENT</type><key>mssql.data_files_size</key><delay>0</delay><history>7d</history><units>B</units><description>Total size of all data files.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Data File(s) Size (KB)' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>4cdecc74a6e44b57b17f44988d3ffa21</uuid><name>MSSQL: Total errors per second</name><type>DEPENDENT</type><key>mssql.errors_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Errors' &amp;&amp; @.counter_name=='Errors/sec' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>error</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>5ed7f6931c42424f8ec3dbe2e6c46f03</uuid><name>MSSQL: Failed auto-params per second</name><type>DEPENDENT</type><key>mssql.failed_autoparams_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of failed auto-parameterization attempts per second. This number should be small. Note that auto-parameterizations are also known as simple parameterizations in the newer versions of SQL Server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Statistics' &amp;&amp; @.counter_name=='Failed Auto-Params/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>cee8f4d47d41463299c50b5c7925a650</uuid><name>MSSQL: Forwarded records per second</name><type>DEPENDENT</type><key>mssql.forwarded_records_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of records per second fetched through forwarded record pointers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Access Methods' &amp;&amp; @.counter_name=='Forwarded Records/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>22d1a41352c4477ba3db5d1a9e038597</uuid><name>MSSQL: Free list stalls per second</name><type>DEPENDENT</type><key>mssql.free_list_stalls_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Indicates the number of requests per second that had to wait for a free page.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Free list stalls/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>f055a294ef3b43dd8958e77c303a5fee</uuid><expression>min(/MSSQL by ODBC/mssql.free_list_stalls_sec.rate,5m)&gt;{$MSSQL.FREE_LIST_STALLS.MAX}</expression><name>MSSQL: Number of rps waiting for a free page is high</name><event_name>MSSQL: Number of rps waiting for a free page is high (over {$MSSQL.FREE_LIST_STALLS.MAX} for 5m)</event_name><priority>WARNING</priority><description>Some requests have to wait for a free page.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>ace67686bb93456c80b40be1f33c173f</uuid><name>MSSQL: Full scans per second</name><type>DEPENDENT</type><key>mssql.full_scans_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of unrestricted full scans per second. These can be either base-table or full-index scans. Values greater than 1 or 2 indicate that there are table / Index page scans. If that is combined with high CPU, this counter requires further investigation, otherwise, if the full scans are on small tables, it can be ignored.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Access Methods' &amp;&amp; @.counter_name=='Full Scans/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>f2539791f65a40569bcf6b1c89647904</uuid><name>MSSQL: Granted Workspace Memory</name><type>DEPENDENT</type><key>mssql.granted_workspace_memory</key><delay>0</delay><history>7d</history><units>B</units><description>Specifies the total amount of memory currently granted to executing processes, such as hash, sort, bulk copy, and index creation operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Memory Manager' &amp;&amp; @.counter_name=='Granted Workspace Memory (KB)')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>585f1a22108143d8b39337900da8860c</uuid><name>MSSQL: Index searches per second</name><type>DEPENDENT</type><key>mssql.index_searches_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of index searches per second. These are used to start a range scan, reposition a range scan, revalidate a scan point, fetch a single index record, and search down the index to locate where to insert a new row.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Access Methods' &amp;&amp; @.counter_name=='Index Searches/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>eafdabca35bd40a58432dd36a210a4e4</uuid><name>MSSQL: Errors per second (Info errors)</name><type>DEPENDENT</type><key>mssql.info_errors_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Errors' &amp;&amp; @.counter_name=='Errors/sec' &amp;&amp; @.instance_name=='Info Errors')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>error</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>b68d1f8108d7494b9d4d891911708c72</uuid><name>MSSQL: Errors per second (Kill connection errors)</name><type>DEPENDENT</type><key>mssql.kill_connection_errors_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Errors' &amp;&amp; @.counter_name=='Errors/sec' &amp;&amp; @.instance_name=='Kill Connection Errors')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>error</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>c1242c5530654057bca59cb9ad12c319</uuid><name>MSSQL: Latch waits per second</name><type>DEPENDENT</type><key>mssql.latch_waits_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>The number of latch requests that could not be granted immediately. Latches are lightweight means of holding a very transient server resource, such as an address in memory.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Latches' &amp;&amp; @.counter_name=='Latch Waits/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag><tag><tag>component</tag><value>wait-time</value></tag></tags></item><item><uuid>66cc84326bd146ac89f91ddeaa61f63a</uuid><name>MSSQL: Lazy writes per second</name><type>DEPENDENT</type><key>mssql.lazy_writes_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Indicates the number of buffers written per second by the buffer manager's lazy writer. The lazy writer is a system process that flushes out batches of dirty, aged buffers (buffers that contain changes that must be written back to disk before the buffer can be reused for a different page) and makes them available to user processes. The lazy writer eliminates the need to perform frequent checkpoints in order to create available buffers.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Lazy writes/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>8aa547cda82f4dfcaef5ca0467590f64</uuid><expression>min(/MSSQL by ODBC/mssql.lazy_writes_sec.rate,5m)&gt;{$MSSQL.LAZY_WRITES.MAX}</expression><name>MSSQL: Number of buffers written per second by the lazy writer is high</name><event_name>MSSQL: Number of buffers written per second by the lazy writer is high (over {$MSSQL.LAZY_WRITES.MAX} for 5m)</event_name><priority>WARNING</priority><description>The number of buffers written per second by the buffer manager's lazy writer exceeds the threshold.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>1b4c71c016504eb08b1a49146095c231</uuid><name>MSSQL: Total lock requests per second</name><type>DEPENDENT</type><key>mssql.lock_requests_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of new locks and lock conversions per second requested from the lock manager.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Locks' &amp;&amp; @.counter_name=='Lock Requests/sec' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>lock</value></tag><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>be4e0b1aec8d494b984be248424d69cf</uuid><expression>min(/MSSQL by ODBC/mssql.lock_requests_sec.rate,5m)&gt;{$MSSQL.LOCK_REQUESTS.MAX}</expression><name>MSSQL: Total number of locks per second is high</name><event_name>MSSQL: Total number of locks per second is high (over {$MSSQL.LOCK_REQUESTS.MAX} for 5m)</event_name><priority>WARNING</priority><description>Number of new locks and lock conversions per second requested from the lock manager is high.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>0ac1aab7013249c6a0beb89217bf52c6</uuid><name>MSSQL: Total lock requests per second that timed out</name><type>DEPENDENT</type><key>mssql.lock_timeouts_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of timed out lock requests per second, including requests for NOWAIT locks.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Locks' &amp;&amp; @.counter_name=='Lock Timeouts/sec' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>lock</value></tag><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>9b62d84b8d9c4209b894151f59c42b27</uuid><expression>min(/MSSQL by ODBC/mssql.lock_timeouts_sec.rate,5m)&gt;{$MSSQL.LOCK_TIMEOUTS.MAX}</expression><name>MSSQL: Total lock requests per second that timed out is high</name><event_name>MSSQL: Total lock requests per second that timed out is high (over {$MSSQL.LOCK_TIMEOUTS.MAX} for 5m)</event_name><priority>WARNING</priority><description>The total number of timed out lock requests per second, including requests for NOWAIT locks, is high.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>77be28b4732d4665a4e880f2ea309245</uuid><name>MSSQL: Total lock requests per second that required waiting</name><type>DEPENDENT</type><key>mssql.lock_waits_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of lock requests per second that required the caller to wait.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Locks' &amp;&amp; @.counter_name=='Lock Waits/sec' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>lock</value></tag><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>879748a03c89495398b41fc1dbeba9ed</uuid><expression>min(/MSSQL by ODBC/mssql.lock_waits_sec.rate,5m)&gt;0</expression><name>MSSQL: Some blocking is occurring for 5m</name><priority>AVERAGE</priority><description>Values greater than zero indicate at least some blocking is occurring, while a value of zero can quickly eliminate blocking as a potential root-cause problem.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>bf4ef99559f94147b9b64144f6b795c0</uuid><name>MSSQL: Lock wait time</name><type>DEPENDENT</type><key>mssql.lock_wait_time</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>Average of total wait time (in milliseconds) for locks in the last second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Locks' &amp;&amp; @.counter_name=='Lock Wait Time (ms)' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>lock</value></tag></tags></item><item><uuid>c7856bdb5285421cb79cec0782fa1188</uuid><name>MSSQL: Logins per second</name><type>DEPENDENT</type><key>mssql.logins_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of logins started per second. This does not include pooled connections. Any value over 2 may indicate insufficient connection pooling.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:General Statistics' &amp;&amp; @.counter_name=='Logins/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>cf4af2cbeaff42b2a71c91544286998f</uuid><name>MSSQL: Logouts per second</name><type>DEPENDENT</type><key>mssql.logouts_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of logout operations started per second. Any value over 2 may indicate insufficient connection pooling.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:General Statistics' &amp;&amp; @.counter_name=='Logouts/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>e0620ce52e6d4269b9d12e82c749a146</uuid><name>MSSQL: Total log file size</name><type>DEPENDENT</type><key>mssql.log_files_size</key><delay>0</delay><history>7d</history><units>B</units><description>Total size of all the transaction log files.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log File(s) Size (KB)' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>log</value></tag></tags></item><item><uuid>636e7c85a79947a39f7b176e8e3c5b82</uuid><name>MSSQL: Total log file used size</name><type>DEPENDENT</type><key>mssql.log_files_used_size</key><delay>0</delay><history>7d</history><units>B</units><description>The cumulative used size of all the log files in the database.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log File(s) Used Size (KB)' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>log</value></tag></tags></item><item><uuid>28c1045fb77249aea23f55f48dd89c69</uuid><name>MSSQL: Maximum workspace memory</name><type>DEPENDENT</type><key>mssql.maximum_workspace_memory</key><delay>0</delay><history>7d</history><units>B</units><description>Indicates the maximum amount of memory available for executing processes, such as hash, sort, bulk copy, and index creation operations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Memory Manager' &amp;&amp; @.counter_name=='Maximum Workspace Memory (KB)')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>d39c5f2b89de4bc88c7724a8e2b270d7</uuid><name>MSSQL: Memory grants outstanding</name><type>DEPENDENT</type><key>mssql.memory_grants_outstanding</key><delay>0</delay><history>7d</history><description>Specifies the total number of processes that have successfully acquired a workspace memory grant.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Memory Manager' &amp;&amp; @.counter_name=='Memory Grants Outstanding')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>cb468e25c20f43f08fcefd45354ff882</uuid><name>MSSQL: Memory grants pending</name><type>DEPENDENT</type><key>mssql.memory_grants_pending</key><delay>0</delay><history>7d</history><description>Specifies the total number of processes waiting for a workspace memory grant.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Memory Manager' &amp;&amp; @.counter_name=='Memory Grants Pending')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>18c0d77ded2b4533a559643006a93406</uuid><name>MSSQL: Total lock requests per second that have deadlocks</name><type>DEPENDENT</type><key>mssql.number_deadlocks_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Number of lock requests per second that resulted in a deadlock.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Locks' &amp;&amp; @.counter_name=='Number of Deadlocks/sec' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>deadlock</value></tag><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>a8f77c32a7194af9b2674f0931c25212</uuid><expression>min(/MSSQL by ODBC/mssql.number_deadlocks_sec.rate,5m)&gt;{$MSSQL.DEADLOCKS.MAX}</expression><name>MSSQL: Number of deadlock is high</name><event_name>MSSQL: Number of deadlock is high (over {$MSSQL.DEADLOCKS.MAX} for 5m)</event_name><priority>AVERAGE</priority><description>Too many deadlocks are occurring currently.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>bbb7fcac41b2403ab0b0c76f3437e81f</uuid><name>MSSQL: Errors per second (DB offline errors)</name><type>DEPENDENT</type><key>mssql.offline_errors_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Errors' &amp;&amp; @.counter_name=='Errors/sec' &amp;&amp; @.instance_name=='DB Offline Errors')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>error</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>94a869db684046d9b65db9ee022a9c9e</uuid><name>MSSQL: Page life expectancy</name><type>DEPENDENT</type><key>mssql.page_life_expectancy</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>Indicates the number of seconds a page will stay in the buffer pool without references.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Page life expectancy')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>page</value></tag></tags><triggers><trigger><uuid>4eb155a86f8b4441a6707e8a3816a068</uuid><expression>max(/MSSQL by ODBC/mssql.page_life_expectancy,15m)&lt;{$MSSQL.PAGE_LIFE_EXPECTANCY.MIN}</expression><name>MSSQL: Page life expectancy is low</name><event_name>MSSQL: Page life expectancy is low (less {$MSSQL.PAGE_LIFE_EXPECTANCY.MIN}min for 15m)</event_name><priority>HIGH</priority><description>The page stays in the buffer pool without references of less time than the threshold value.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>628f787578e04b83882aca052a7f976a</uuid><name>MSSQL: Page lookups per second</name><type>DEPENDENT</type><key>mssql.page_lookups_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>rps</units><description>Indicates the number of requests per second to find a page in the buffer pool.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Page lookups/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>433257a5dfe4488c8073db03bfb05315</uuid><name>MSSQL: Page reads per second</name><type>DEPENDENT</type><key>mssql.page_reads_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Indicates the number of physical database page reads that are issued per second. This statistic displays the total number of physical page reads across all databases. Because physical I/O is expensive, you may be able to minimize the cost, either by using a larger data cache, intelligent indexes, and more efficient queries, or by changing the database design.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Page reads/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>page</value></tag><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>c0b765b22b264d7c9086edc5cda35592</uuid><expression>min(/MSSQL by ODBC/mssql.page_reads_sec.rate,5m)&gt;{$MSSQL.PAGE_READS.MAX}</expression><name>MSSQL: Number of physical database page reads per second is high</name><event_name>MSSQL: Number of physical database page reads per second is high (over {$MSSQL.PAGE_READS.MAX} for 5m)</event_name><priority>WARNING</priority><description>The physical database page reads are issued too frequently.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>fc3dd6a1bf1242769e2b58f25421a19d</uuid><name>MSSQL: Page splits per second</name><type>DEPENDENT</type><key>mssql.page_splits_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of page splits per second that occur as the result of overflowing index pages.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Access Methods' &amp;&amp; @.counter_name=='Page Splits/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>page</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>a8b3639fe7b44d88a75e724c083518b5</uuid><name>MSSQL: Page writes per second</name><type>DEPENDENT</type><key>mssql.page_writes_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Indicates the number of physical database page writes that are issued per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Page writes/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>page</value></tag><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>548941f4a7cc4cadba64d8efd46655da</uuid><expression>min(/MSSQL by ODBC/mssql.page_writes_sec.rate,5m)&gt;{$MSSQL.PAGE_WRITES.MAX}</expression><name>MSSQL: Number of physical database page writes per second is high</name><event_name>MSSQL: Number of physical database page writes per second is high (over {$MSSQL.PAGE_WRITES.MAX} for 5m)</event_name><priority>WARNING</priority><description>The physical database page writes are issued too frequently.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>76918163a16e4ad786bed2040acc8061</uuid><name>MSSQL: Percent of Adhoc queries running</name><type>CALCULATED</type><key>mssql.percent_of_adhoc_queries</key><delay>0;m0-59s3</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><params>last(//mssql.sql_compilations_sec.rate) * 100 /
(last(//mssql.batch_requests_sec.rate) + (last(//mssql.batch_requests_sec.rate)=0))</params><description>The ratio of SQL compilations per second to Batch requests per second in percentage.</description><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>c5c1840220cd44fcaa7b47e0d52309bb</uuid><expression>min(/MSSQL by ODBC/mssql.percent_of_adhoc_queries,15m) &gt; {$MSSQL.PERCENT_COMPILATIONS.MAX}</expression><name>MSSQL: Percent of adhoc queries running is high</name><event_name>MSSQL: Percent of adhoc queries running is over {$MSSQL.PERCENT_COMPILATIONS.MAX}% for 15m</event_name><priority>WARNING</priority><description>The lower this value is the better. High values often indicate excessive adhoc querying and should be as low as possible. If excessive adhoc querying is happening, try rewriting the queries as procedures or invoke the queries using sp_executeSQL. When rewriting isn't possible, consider using a plan guide or setting the database to parameterization forced mode.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>ceab0472883f47b0a18b04fc6f7438ab</uuid><name>MSSQL: Percent of Recompiled Transact-SQL Objects</name><type>CALCULATED</type><key>mssql.percent_recompilations_to_compilations</key><delay>0;m0-59s3</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><params>last(//mssql.sql_recompilations_sec.rate) * 100 /
(last(//mssql.sql_compilations_sec.rate) + (last(//mssql.sql_compilations_sec.rate)=0))</params><description>The ratio of SQL re-compilations per second to SQL compilations per second in percentage.</description><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>d5bad8ead8704e00bf332032e22ebfdd</uuid><expression>min(/MSSQL by ODBC/mssql.percent_recompilations_to_compilations,15m) &gt; {$MSSQL.PERCENT_RECOMPILATIONS.MAX}</expression><name>MSSQL: Percent of times statement recompiles is high</name><event_name>MSSQL: Percent of times statement recompiles is over {$MSSQL.PERCENT_RECOMPILATIONS.MAX}% for 15m</event_name><priority>WARNING</priority><description>This number should be at or near zero, since recompiles can cause deadlocks and exclusive compile locks. This counter's value should follow in proportion to “Batch Requests/sec” and “SQL Compilations/sec”.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>5c0bee24f9494bb49860171ff875caf7</uuid><name>MSSQL: Number of blocked processes</name><type>DEPENDENT</type><key>mssql.processes_blocked</key><delay>0</delay><history>7d</history><description>Number of currently blocked processes.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:General Statistics' &amp;&amp; @.counter_name=='Processes blocked')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>fc14b0c814234b12a3943eb0435cd28c</uuid><name>MSSQL: Read-ahead pages per second</name><type>DEPENDENT</type><key>mssql.readahead_pages_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Indicates the number of pages read per second in anticipation of use.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Readahead pages/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>page</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>be47be0cbb924982aaf9573c5a233144</uuid><name>MSSQL: Safe auto-params per second</name><type>DEPENDENT</type><key>mssql.safe_autoparams_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of safe auto-parameterization attempts per second. Safe refers to a determination that a cached execution plan can be shared between different similar-looking Transact-SQL statements. SQL Server makes many auto-parameterization attempts some of which turn out to be safe and others fail. Note that auto-parameterizations are also known as simple parameterizations in the newer versions of SQL Server. This does not include forced parameterizations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Statistics' &amp;&amp; @.counter_name=='Safe Auto-Params/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>9ce27df57ebc4ecca1a4741e66c9fba0</uuid><name>MSSQL: Full scans to Index searches ratio</name><type>CALCULATED</type><key>mssql.scan_to_search</key><delay>0;m0-59s3</delay><history>7d</history><value_type>FLOAT</value_type><params>last(//mssql.full_scans_sec.rate) / (last(//mssql.index_searches_sec.rate) + (last(//mssql.index_searches_sec.rate)=0))</params><description>The ratio of Full scans per second to Index searches per second. The threshold recommendation is strictly for OLTP workloads.</description><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>3c22a74a94d641389b57a6013ddd10cb</uuid><expression>min(/MSSQL by ODBC/mssql.scan_to_search,15m) &gt; 0.001</expression><name>MSSQL: Number of index and table scans exceeds index searches in the last 15m</name><priority>WARNING</priority><description>Index searches are preferable to index and table scans. For OLTP applications, optimize for more index searches and less scans (preferably, 1 full scan for every 1000 index searches). Index and table scans are expensive I/O operations.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>e9ea451a38424f6b9da59b8bbb068b51</uuid><name>MSSQL: SQL compilations per second</name><type>DEPENDENT</type><key>mssql.sql_compilations_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of SQL compilations per second. Indicates the number of times the compile code path is entered. Includes runs caused by statement-level recompilations in SQL Server. After SQL Server user activity is stable, this value reaches a steady state.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Statistics' &amp;&amp; @.counter_name=='SQL Compilations/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>a72415acabda46309c4dbc692e026cc2</uuid><name>MSSQL: SQL re-compilations per second</name><type>DEPENDENT</type><key>mssql.sql_recompilations_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of statement recompiles per second. Counts the number of times statement recompiles are triggered. Generally, you want the recompiles to be low.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Statistics' &amp;&amp; @.counter_name=='SQL Re-Compilations/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>595aa3989b4e41cc8649827525adc0a0</uuid><name>MSSQL: Table lock escalations per second</name><type>DEPENDENT</type><key>mssql.table_lock_escalations.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of times locks on a table were escalated to the TABLE or HoBT granularity.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Access Methods' &amp;&amp; @.counter_name=='Table Lock Escalations/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>lock</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>37269b33e05349a1bfd05e4e493da6d4</uuid><name>MSSQL: Target pages</name><type>DEPENDENT</type><key>mssql.target_pages</key><delay>0</delay><history>7d</history><description>The optimal number of pages in the buffer pool.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Buffer Manager' &amp;&amp; @.counter_name=='Target pages')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>page</value></tag></tags></item><item><uuid>2679f7e843e549ce9468f6cab05a71d5</uuid><name>MSSQL: Target server memory</name><type>DEPENDENT</type><key>mssql.target_server_memory</key><delay>0</delay><history>7d</history><units>B</units><description>Indicates the ideal amount of memory the server can consume.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Memory Manager' &amp;&amp; @.counter_name=='Target Server Memory (KB)')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>8c7d63f3689f464394a6035a3cad4009</uuid><name>MSSQL: Total latch wait Time</name><type>DEPENDENT</type><key>mssql.total_latch_wait_time</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>Total latch wait time (in milliseconds) for latch requests in the last second. This value should stay stable compared to the number of latch waits per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Latches' &amp;&amp; @.counter_name=='Total Latch Wait Time (ms)')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>wait-time</value></tag></tags></item><item><uuid>9112ed9b9d3741018d40f2dc892fa0f6</uuid><name>MSSQL: Total server memory</name><type>DEPENDENT</type><key>mssql.total_server_memory</key><delay>0</delay><history>7d</history><units>B</units><description>Specifies the amount of memory the server has committed using the memory manager.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Memory Manager' &amp;&amp; @.counter_name=='Total Server Memory (KB)')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>memory</value></tag></tags></item><item><uuid>273b373d8b41411fafcfd1e93bb8ce2c</uuid><name>MSSQL: Total transactions number</name><type>DEPENDENT</type><key>mssql.transactions</key><delay>0</delay><history>7d</history><description>The number of currently active transactions of all types.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Transactions' &amp;&amp; @.counter_name=='Transactions')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>transaction</value></tag></tags></item><item><uuid>127e1f73ce414eeb87d2cbfef46ccdef</uuid><name>MSSQL: Total transactions per second</name><type>DEPENDENT</type><key>mssql.transactions_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of transactions started for all databases per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Transactions/sec' &amp;&amp; @.instance_name=='_Total')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag><tag><tag>component</tag><value>transaction</value></tag></tags></item><item><uuid>ef6450dfcb9a476ca1bf97524e05d43d</uuid><name>MSSQL: Unsafe auto-params per second</name><type>DEPENDENT</type><key>mssql.unsafe_autoparams_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of unsafe auto-parameterization attempts per second. For example, the query has some characteristics that prevent the cached plan from being shared. These are designated as unsafe. This does not count the number of forced parameterizations.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Statistics' &amp;&amp; @.counter_name=='Unsafe Auto-Params/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>27449e795c0a4e4e90c9ee6b6bf3df90</uuid><name>MSSQL: Uptime</name><type>DEPENDENT</type><key>mssql.uptime</key><delay>0</delay><history>2w</history><trends>0d</trends><units>uptime</units><description>MS SQL Server uptime in 'N days, hh:mm:ss' format.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}' &amp;&amp; @.counter_name=='Uptime')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>0321c9f671394cb180fdce53b4033cf4</uuid><expression>nodata(/MSSQL by ODBC/mssql.uptime,30m)=1</expression><name>MSSQL: Failed to fetch info data</name><event_name>MSSQL: Failed to fetch info data (or no data for 30m)</event_name><priority>INFO</priority><description>Zabbix has not received data for items for the last 30 minutes.</description><dependencies><dependency><name>MSSQL: Service is unavailable</name><expression>last(/MSSQL by ODBC/net.tcp.service[tcp,{HOST.CONN},{$MSSQL.PORT}])=0</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger><trigger><uuid>aa10f863608a494281f41e12f0d2b1a5</uuid><expression>last(/MSSQL by ODBC/mssql.uptime)&lt;10m</expression><name>MSSQL: Service has been restarted</name><event_name>MSSQL: Service has been restarted (uptime &lt; 10m)</event_name><priority>INFO</priority><description>Uptime is less than 10 minutes.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>4e13bfc5927a421fb2996eec7e013448</uuid><name>MSSQL: Number users connected</name><type>DEPENDENT</type><key>mssql.user_connections</key><delay>0</delay><history>7d</history><description>Number of users connected to MS SQL Server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:General Statistics' &amp;&amp; @.counter_name=='User Connections')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags></item><item><uuid>5942cad838e8430a9ff71293dec52af8</uuid><name>MSSQL: Errors per second (User errors)</name><type>DEPENDENT</type><key>mssql.user_errors_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of errors per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:SQL Errors' &amp;&amp; @.counter_name=='Errors/sec' &amp;&amp; @.instance_name=='User Errors')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>error</value></tag><tag><tag>component</tag><value>performance</value></tag></tags></item><item><uuid>7013504d4a6c4b40a0aab11dab15d107</uuid><name>MSSQL: Version</name><type>DEPENDENT</type><key>mssql.version</key><delay>0</delay><history>2w</history><trends>0</trends><value_type>CHAR</value_type><description>MS SQL Server version.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}' &amp;&amp; @.counter_name=='Version')].instance_name.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>application</value></tag></tags><triggers><trigger><uuid>4ece2c9172714c68b8345834cc37d927</uuid><expression>last(/MSSQL by ODBC/mssql.version,#1)&lt;&gt;last(/MSSQL by ODBC/mssql.version,#2) and length(last(/MSSQL by ODBC/mssql.version))&gt;0</expression><name>MSSQL: Version has changed</name><event_name>MSSQL: Version has changed (new version value received: {ITEM.VALUE})</event_name><priority>INFO</priority><description>MSSQL version has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>ea84affd97864dfaad7edf31e16e1300</uuid><name>MSSQL: Work files created per second</name><type>DEPENDENT</type><key>mssql.workfiles_created_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of work files created per second. For example, work files can be used to store temporary results for hash joins and hash aggregates.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Access Methods' &amp;&amp; @.counter_name=='Workfiles Created/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>2f7e2dd4a94e4e92b468f4e2e2364f71</uuid><expression>min(/MSSQL by ODBC/mssql.workfiles_created_sec.rate,5m)&gt;{$MSSQL.WORK_FILES.MAX}</expression><name>MSSQL: Number of work files created per second is high</name><event_name>MSSQL: Number of work files created per second is high (over {$MSSQL.WORK_FILES.MAX} for 5m)</event_name><priority>AVERAGE</priority><description>Too many work files created per second to store temporary results for hash joins and hash aggregates.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>a38e7fdf994842558227dfad03e9943b</uuid><name>MSSQL: Work tables created per second</name><type>DEPENDENT</type><key>mssql.worktables_created_sec.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of work tables created per second. For example, work tables can be used to store temporary results for query spool, lob variables, XML variables, and cursors.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Access Methods' &amp;&amp; @.counter_name=='Worktables Created/sec')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>performance</value></tag></tags><triggers><trigger><uuid>0214004de3084ce6b35d5bba53a66947</uuid><expression>min(/MSSQL by ODBC/mssql.worktables_created_sec.rate,5m)&gt;{$MSSQL.WORK_TABLES.MAX}</expression><name>MSSQL: Number of work tables created per second is high</name><event_name>MSSQL: Number of work tables created per second is high (over {$MSSQL.WORK_TABLES.MAX} for 5m)</event_name><priority>AVERAGE</priority><description>Too many work tables created per second to store temporary results for query spool, lob variables, XML variables, and cursors.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>d93779b26c1a4784be31d32130eebf92</uuid><name>MSSQL: Worktables from cache ratio</name><type>DEPENDENT</type><key>mssql.worktables_from_cache_ratio</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Percentage of work tables created where the initial two pages of the work table were not allocated but were immediately available from the work table cache.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Access Methods' &amp;&amp; @.counter_name=='WorktablesFromCacheRatio')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>cache</value></tag></tags><triggers><trigger><uuid>98dee2bc42484988b208e100cc25ae05</uuid><expression>max(/MSSQL by ODBC/mssql.worktables_from_cache_ratio,5m)&lt;{$MSSQL.WORKTABLES_FROM_CACHE_RATIO.MIN.CRIT}</expression><name>MSSQL: Percentage of work tables available from the work table cache is low</name><event_name>MSSQL: Percentage of work tables available from the work table cache is low (below {$MSSQL.WORKTABLES_FROM_CACHE_RATIO.MIN.CRIT}% for 5m)</event_name><priority>HIGH</priority><description>A value less than 90% may indicate insufficient memory, since execution plans are being dropped, or on 32-bit systems, may indicate the need for an upgrade to a 64-bit system</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>c0302965c2574b43955a1d37a8fce9eb</uuid><name>MSSQL: Service's TCP port state</name><type>SIMPLE</type><key>net.tcp.service[tcp,{HOST.CONN},{$MSSQL.PORT}]</key><delay>30s</delay><history>7d</history><description>Test the availability of MS SQL Server on a TCP port.</description><valuemap><name>Service state</name></valuemap><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>10m</parameter></parameters></step></preprocessing><tags><tag><tag>component</tag><value>network</value></tag></tags><triggers><trigger><uuid>152af5cc3ce04d4aa8ab255c37aed6c6</uuid><expression>last(/MSSQL by ODBC/net.tcp.service[tcp,{HOST.CONN},{$MSSQL.PORT}])=0</expression><name>MSSQL: Service is unavailable</name><priority>DISASTER</priority><description>The TCP port of the MS SQL Server service is currently unavailable.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item></items><discovery_rules><discovery_rule><uuid>2a5ddb4df6e14ebd94517cbd2a1f8295</uuid><name>Availability groups discovery</name><type>ODBC</type><key>db.odbc.discovery[availability_groups,&quot;{$MSSQL.DSN}&quot;]</key><delay>1h</delay><params>SELECT name as group_name
FROM sys.availability_groups</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Discovery of the existing availability groups.</description><item_prototypes><item_prototype><uuid>7cdafac918494002a219345f648747ba</uuid><name>MSSQL AG '{#GROUP_NAME}': Get replica states</name><type>ODBC</type><key>db.odbc.get[{#GROUP_NAME}_replica_states,&quot;{$MSSQL.DSN}&quot;]</key><history>0h</history><trends>0</trends><value_type>TEXT</value_type><params>SELECT ag.name as group_name,
ISNULL(ags.primary_recovery_health, 2) as primary_recovery_health,
ISNULL(ags.primary_replica, 'Unknown') as primary_replica,
ISNULL(ags.secondary_recovery_health, 2) as secondary_recovery_health,
ags.synchronization_health as synchronization_health
FROM sys.dm_hadr_availability_group_states ags JOIN sys.availability_groups ag ON ag.group_id = ags.group_id</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Getting replica states - name, primary and secondary health, synchronization health.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>raw</value></tag></tags></item_prototype><item_prototype><uuid>381c88cf5b0c47319b036e79265b0a20</uuid><name>MSSQL AG '{#GROUP_NAME}': Primary replica recovery health</name><type>DEPENDENT</type><key>mssql.primary_recovery_health[&quot;{#GROUP_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Indicates the recovery health of the primary replica:
0 = In progress
1 = Online
2 = Unavailable</description><valuemap><name>MSSQL AG Recovery health</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}')].primary_recovery_health.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[{#GROUP_NAME}_replica_states,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>availability-group</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>c472a4f8400e451db529d5e12b863216</uuid><expression>last(/MSSQL by ODBC/mssql.primary_recovery_health[&quot;{#GROUP_NAME}&quot;])=0</expression><name>MSSQL AG '{#GROUP_NAME}': Primary replica recovery health in progress</name><priority>WARNING</priority><description>The primary replica is in the synchronization process.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>df51dcd0ef864705bc542e1233c1135b</uuid><name>MSSQL AG '{#GROUP_NAME}': Primary replica name</name><type>DEPENDENT</type><key>mssql.primary_replica[&quot;{#GROUP_NAME}&quot;]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Name of the server instance that is hosting the current primary replica.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}')].primary_replica.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[{#GROUP_NAME}_replica_states,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>availability-group</value></tag></tags></item_prototype><item_prototype><uuid>d2e76a734bd84484b6bd59b33c921f34</uuid><name>MSSQL AG '{#GROUP_NAME}': Secondary replica recovery health</name><type>DEPENDENT</type><key>mssql.secondary_recovery_health[&quot;{#GROUP_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Indicates the recovery health of a secondary replica:
0 = In progress
1 = Online
2 = Unavailable</description><valuemap><name>MSSQL AG Recovery health</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}')].secondary_recovery_health.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[{#GROUP_NAME}_replica_states,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>availability-group</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>1fbf51eb9f8b432c8e0d9ec3af1cab44</uuid><expression>last(/MSSQL by ODBC/mssql.secondary_recovery_health[&quot;{#GROUP_NAME}&quot;])=0</expression><name>MSSQL AG '{#GROUP_NAME}': Secondary replica recovery health in progress</name><priority>WARNING</priority><description>The secondary replica is in the synchronization process.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>fe59d23d0ba44777b0abf1a35b2c014e</uuid><name>MSSQL AG '{#GROUP_NAME}': Synchronization health</name><type>DEPENDENT</type><key>mssql.synchronization_health[&quot;{#GROUP_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Reflects a rollup of the synchronization_health of all availability replicas in the availability group:
0: Not healthy. None of the availability replicas have a healthy synchronization.
1: Partially healthy. The synchronization of some, but not all, availability replicas is healthy.
2: Healthy. The synchronization of every availability replica is healthy.</description><valuemap><name>MSSQL AG Synchronization health</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}')].synchronization_health.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[{#GROUP_NAME}_replica_states,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>availability-group</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>2ee92e5ea41744ac9e27ffaa4313bdec</uuid><expression>last(/MSSQL by ODBC/mssql.synchronization_health[&quot;{#GROUP_NAME}&quot;])=0</expression><name>MSSQL AG '{#GROUP_NAME}': All replicas unhealthy</name><priority>DISASTER</priority><description>None of the availability replicas have a healthy synchronization.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>fd24c78f1db24186932d17d1145b6e92</uuid><expression>last(/MSSQL by ODBC/mssql.synchronization_health[&quot;{#GROUP_NAME}&quot;])=1</expression><name>MSSQL AG '{#GROUP_NAME}': Some replicas unhealthy</name><priority>HIGH</priority><description>The synchronization health of some, but not all, availability replicas is healthy.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>2e38ea24c9bf4a5480df0816b7c659b3</uuid><name>Database discovery</name><type>ODBC</type><key>db.odbc.discovery[dbname,&quot;{$MSSQL.DSN}&quot;]</key><delay>1h</delay><params>SELECT name as dbname
FROM sys.databases</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><filter><evaltype>AND</evaltype><conditions><condition><macro>{#DBNAME}</macro><value>{$MSSQL.DBNAME.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#DBNAME}</macro><value>{$MSSQL.DBNAME.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Scanning databases in DBMS.</description><item_prototypes><item_prototype><uuid>9c9dab20d8fa46f888c6aa7c7c9bf1b9</uuid><name>MSSQL DB '{#DBNAME}': Last diff backup duration</name><type>DEPENDENT</type><key>mssql.backup.diff.duration[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Duration of the last differential backup.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}' &amp;&amp; @.type=='I')].duration.first()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>db.odbc.get[get_last_backup,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>bd663e1e9b40469cb4ca430186b049db</uuid><name>MSSQL DB '{#DBNAME}': Last diff backup (time ago)</name><type>DEPENDENT</type><key>mssql.backup.diff[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>The amount of time since the last differential backup.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}' &amp;&amp; @.type=='I')].timesincelastbackup.first()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>db.odbc.get[get_last_backup,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>036892c6b9de41c698a4e9acd5457e6a</uuid><expression>last(/MSSQL by ODBC/mssql.backup.diff[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_DIFF.CRIT:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Diff backup is old</name><event_name>MSSQL DB '{#DBNAME}': Diff backup older than {$MSSQL.BACKUP_DIFF.CRIT:&quot;{#DBNAME}&quot;}</event_name><opdata>Time since last backup: {ITEM.LASTVALUE1}</opdata><priority>HIGH</priority><description>The differential backup has not been executed for a long time.</description><manual_close>YES</manual_close><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>9a294163ee034fc6a58f5534a7d79aac</uuid><expression>last(/MSSQL by ODBC/mssql.backup.diff[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_DIFF.WARN:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Diff backup is old</name><event_name>MSSQL DB '{#DBNAME}': Diff backup older than {$MSSQL.BACKUP_DIFF.WARN:&quot;{#DBNAME}&quot;}</event_name><opdata>Time since last backup: {ITEM.LASTVALUE1}</opdata><priority>WARNING</priority><description>The differential backup has not been executed for a long time.</description><manual_close>YES</manual_close><dependencies><dependency><name>MSSQL DB '{#DBNAME}': Diff backup is old</name><expression>last(/MSSQL by ODBC/mssql.backup.diff[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_DIFF.CRIT:&quot;{#DBNAME}&quot;}</expression></dependency></dependencies><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>52929d988ad34aac945ff2ce9e448261</uuid><name>MSSQL DB '{#DBNAME}': Last full backup duration</name><type>DEPENDENT</type><key>mssql.backup.full.duration[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Duration of the last full backup.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}' &amp;&amp; @.type=='D')].duration.first()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>db.odbc.get[get_last_backup,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>06d0ac1eeca843a289defa1cf1d728a3</uuid><name>MSSQL DB '{#DBNAME}': Last full backup (time ago)</name><type>DEPENDENT</type><key>mssql.backup.full[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>The amount of time since the last full backup.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}' &amp;&amp; @.type=='D')].timesincelastbackup.first()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>db.odbc.get[get_last_backup,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>09c8e059ffa44d0eb1be626b5d820dc9</uuid><expression>last(/MSSQL by ODBC/mssql.backup.full[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_FULL.CRIT:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Full backup is old</name><event_name>MSSQL DB '{#DBNAME}': Full backup older than {$MSSQL.BACKUP_FULL.CRIT:&quot;{#DBNAME}&quot;}</event_name><opdata>Time since last backup: {ITEM.LASTVALUE1}</opdata><priority>HIGH</priority><description>The full backup has not been executed for a long time.</description><manual_close>YES</manual_close><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>b380d76b1055482ca8cd69c90611f1a5</uuid><expression>last(/MSSQL by ODBC/mssql.backup.full[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_FULL.WARN:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Full backup is old</name><event_name>MSSQL DB '{#DBNAME}': Full backup older than {$MSSQL.BACKUP_FULL.WARN:&quot;{#DBNAME}&quot;}</event_name><opdata>Time since last backup: {ITEM.LASTVALUE1}</opdata><priority>WARNING</priority><description>The full backup has not been executed for a long time.</description><manual_close>YES</manual_close><dependencies><dependency><name>MSSQL DB '{#DBNAME}': Full backup is old</name><expression>last(/MSSQL by ODBC/mssql.backup.full[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_FULL.CRIT:&quot;{#DBNAME}&quot;}</expression></dependency></dependencies><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>218241c7c5a648a59021999f97516349</uuid><name>MSSQL DB '{#DBNAME}': Last log backup duration</name><type>DEPENDENT</type><key>mssql.backup.log.duration[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Duration of the last log backup.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}' &amp;&amp; @.type=='L')].duration.first()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>db.odbc.get[get_last_backup,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>c5e796bc904848efb2557c8a9a07b828</uuid><name>MSSQL DB '{#DBNAME}': Last log backup</name><type>DEPENDENT</type><key>mssql.backup.log[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>The amount of time since the last log backup.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}' &amp;&amp; @.type=='L')].timesincelastbackup.first()</parameter></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>0</error_handler_params></step></preprocessing><master_item><key>db.odbc.get[get_last_backup,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>4a6e76dc9a5148649d07e35e962b5893</uuid><expression>last(/MSSQL by ODBC/mssql.backup.log[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_LOG.CRIT:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Log backup is old</name><event_name>MSSQL DB '{#DBNAME}': Log backup older than {$MSSQL.BACKUP_LOG.CRIT:&quot;{#DBNAME}&quot;}</event_name><opdata>Time since last backup: {ITEM.LASTVALUE1}</opdata><priority>HIGH</priority><description>The log backup has not been executed for a long time.</description><manual_close>YES</manual_close><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>6000420450cf453bae3652c7f7d05e2b</uuid><expression>last(/MSSQL by ODBC/mssql.backup.log[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_LOG.WARN:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Log backup is old</name><event_name>MSSQL DB '{#DBNAME}': Log backup older than {$MSSQL.BACKUP_LOG.WARN:&quot;{#DBNAME}&quot;}</event_name><opdata>Time since last backup: {ITEM.LASTVALUE1}</opdata><priority>WARNING</priority><description>The log backup has not been executed for a long time.</description><manual_close>YES</manual_close><dependencies><dependency><name>MSSQL DB '{#DBNAME}': Log backup is old</name><expression>last(/MSSQL by ODBC/mssql.backup.log[&quot;{#DBNAME}&quot;])&gt;{$MSSQL.BACKUP_LOG.CRIT:&quot;{#DBNAME}&quot;}</expression></dependency></dependencies><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>f4f218f22d6d48419260003880b38abd</uuid><name>MSSQL DB '{#DBNAME}': Active transactions</name><type>DEPENDENT</type><key>mssql.db.active_transactions[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Number of active transactions for the database.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Active Transactions' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>ff3916f807784639a1821229d4d722d8</uuid><name>MSSQL DB '{#DBNAME}': Data file size</name><type>DEPENDENT</type><key>mssql.db.data_files_size[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Cumulative size of all the data files in the database including any automatic growth. Monitoring this counter is useful, for example, for determining the correct size of tempdb.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Data File(s) Size (KB)' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>0d7bdf4c18fa49e79926e6f6d078d50f</uuid><name>MSSQL DB '{#DBNAME}': Log bytes flushed per second</name><type>DEPENDENT</type><key>mssql.db.log_bytes_flushed_sec.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Total number of log bytes flushed per second. Useful for determining trends and utilization of the transaction log.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log Bytes Flushed/sec' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>85536311e68047a6a8bf13c51c8d0647</uuid><name>MSSQL DB '{#DBNAME}': Log file size</name><type>DEPENDENT</type><key>mssql.db.log_files_size[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Cumulative size of all the transaction log files in the database.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log File(s) Size (KB)' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>75fd2f42e274471c97cb23dc740863b8</uuid><name>MSSQL DB '{#DBNAME}': Log file used size</name><type>DEPENDENT</type><key>mssql.db.log_files_used_size[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Cumulative used size of all the log files in the database.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log File(s) Used Size (KB)' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>c10b6f364aa547d8b4abe431ae27d70b</uuid><name>MSSQL DB '{#DBNAME}': Log flushes per second</name><type>DEPENDENT</type><key>mssql.db.log_flushes_sec.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of log flushes per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log Flushes/sec' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>5404c8682b294a06a3027dc10d0b43fc</uuid><name>MSSQL DB '{#DBNAME}': Log flush waits per second</name><type>DEPENDENT</type><key>mssql.db.log_flush_waits_sec.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of commits per second waiting for the log flush.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log Flush Waits/sec' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>b351fc1128c24faf88d36717d0a0d1a5</uuid><expression>min(/MSSQL by ODBC/mssql.db.log_flush_waits_sec.rate[&quot;{#DBNAME}&quot;],5m)&gt;{$MSSQL.LOG_FLUSH_WAITS.MAX:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Number of commits waiting for the log flush is high</name><event_name>MSSQL DB '{#DBNAME}': Number of commits waiting for the log flush is high (over {$MSSQL.LOG_FLUSH_WAITS.MAX:&quot;{#DBNAME}&quot;}/sec for 5m)</event_name><priority>WARNING</priority><description>Too many commits are waiting for the log flush.</description><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>f1abdb0800534f6bbf9f1403e7dea9e4</uuid><name>MSSQL DB '{#DBNAME}': Log flush wait time</name><type>DEPENDENT</type><key>mssql.db.log_flush_wait_time[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>ms</units><description>Total wait time (in milliseconds) to flush the log. On an AlwaysOn secondary database, this value indicates the wait time for log records to be hardened to disk.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log Flush Wait Time' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>80351c56215148b8ab75d95dc81ff0d0</uuid><expression>min(/MSSQL by ODBC/mssql.db.log_flush_wait_time[&quot;{#DBNAME}&quot;],5m)&gt;{$MSSQL.LOG_FLUSH_WAIT_TIME.MAX:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Total wait time to flush the log is high</name><event_name>MSSQL DB '{#DBNAME}': Total wait time to flush the log is high (over {$MSSQL.LOG_FLUSH_WAIT_TIME.MAX:&quot;{#DBNAME}&quot;}ms for 5m)</event_name><priority>WARNING</priority><description>The wait time to flush the log is too long.</description><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>fdb24058e54243e8b5a888ec40d506e9</uuid><name>MSSQL DB '{#DBNAME}': Log growths</name><type>DEPENDENT</type><key>mssql.db.log_growths[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Total number of times the transaction log for the database has been expanded.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log Growths' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>a1a96d8bfef740ec9c8eadd9704ab605</uuid><name>MSSQL DB '{#DBNAME}': Log shrinks</name><type>DEPENDENT</type><key>mssql.db.log_shrinks[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Total number of times the transaction log for the database has been shrunk.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log Shrinks' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>26d1515df1be450e861e4f7a9f76b03d</uuid><name>MSSQL DB '{#DBNAME}': Log truncations</name><type>DEPENDENT</type><key>mssql.db.log_truncations[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Number of times the transaction log has been shrunk.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Log Truncations' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>9f9cda56992841408ab8307b7019b76f</uuid><name>MSSQL DB '{#DBNAME}': Percent log used</name><type>DEPENDENT</type><key>mssql.db.percent_log_used[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>%</units><description>Percentage of space in the log that is in use.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Percent Log Used' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>f02958e3ee174c6dbe900e3dd92cacdc</uuid><expression>min(/MSSQL by ODBC/mssql.db.percent_log_used[&quot;{#DBNAME}&quot;],5m)&gt;{$MSSQL.PERCENT_LOG_USED.MAX:&quot;{#DBNAME}&quot;}</expression><name>MSSQL DB '{#DBNAME}': Percent of log using is high</name><event_name>MSSQL DB '{#DBNAME}': Percent of log using is high (over {$MSSQL.PERCENT_LOG_USED.MAX:&quot;{#DBNAME}&quot;}% for 5m)</event_name><priority>WARNING</priority><description>There's not enough space left in the log.</description><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>fe7d7c3e0aab43d79c00eaceb39c8c6c</uuid><name>MSSQL DB '{#DBNAME}': State</name><type>DEPENDENT</type><key>mssql.db.state[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>0 = ONLINE
1 = RESTORING
2 = RECOVERING | SQL Server 2008 and later
3 = RECOVERY_PENDING | SQL Server 2008 and later
4 = SUSPECT
5 = EMERGENCY | SQL Server 2008 and later
6 = OFFLINE | SQL Server 2008 and later
7 = COPYING | Azure SQL Database Active Geo-Replication
10 = OFFLINE_SECONDARY | Azure SQL Database Active Geo-Replication</description><valuemap><name>MSSQL DB state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='State' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>15m</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>6b8c8cf8e0d24b7f8d9aa7469a0facd4</uuid><expression>last(/MSSQL by ODBC/mssql.db.state[&quot;{#DBNAME}&quot;])&gt;1</expression><name>MSSQL DB '{#DBNAME}': State is {ITEM.VALUE}</name><priority>HIGH</priority><description>The DB has a non-working state.</description><tags><tag><tag>database</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>267b1d54c40641f5aeb4e3e7adfa4680</uuid><name>MSSQL DB '{#DBNAME}': Transactions per second</name><type>DEPENDENT</type><key>mssql.db.transactions_sec.rate[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Number of transactions started for the database per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.object_name=='{$MSSQL.INSTANCE}:Databases' &amp;&amp; @.counter_name=='Transactions/sec' &amp;&amp; @.instance_name=='{#DBNAME}')].cntr_value.first()</parameter></parameters></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[get_status_variables,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>database</value></tag><tag><tag>database</tag><value>{#DBNAME}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>ac52c952ba954065bbbb5c722630cd0b</uuid><name>MSSQL DB '{#DBNAME}': Log size</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.db.log_files_size[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.db.log_files_used_size[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>49d3be5c3ce34cfc9c13456a2ae301f6</uuid><name>MSSQL DB '{#DBNAME}': Number of Log changes</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.db.log_growths[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.db.log_shrinks[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MSSQL by ODBC</host><key>mssql.db.log_truncations[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>9553b9169f5e441abecfde1c07ca1a4e</uuid><name>MSSQL DB '{#DBNAME}': Size</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.db.data_files_size[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>6d972c575a944d49badfc2e6a614f686</uuid><name>Job discovery</name><type>ODBC</type><key>db.odbc.discovery[jobname,&quot;{$MSSQL.DSN}&quot;]</key><delay>1h</delay><params>SELECT name AS jobname FROM msdb..sysjobs WHERE enabled = 1</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><filter><evaltype>AND</evaltype><conditions><condition><macro>{#JOBNAME}</macro><value>{$MSSQL.JOB.MATCHES}</value><formulaid>A</formulaid></condition><condition><macro>{#JOBNAME}</macro><value>{$MSSQL.JOB.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>B</formulaid></condition></conditions></filter><description>Scanning jobs in DBMS.</description><item_prototypes><item_prototype><uuid>3ceba63a77e24628a2ee9439d574bac5</uuid><name>MSSQL Job '{#JOBNAME}': Last run date-time</name><type>DEPENDENT</type><key>mssql.job.lastrundatetime[&quot;{#JOBNAME}&quot;]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>The last date-time of the job run.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.JobName=='{#JOBNAME}')].LastRunDateTime.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_job_status,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-job</value></tag><tag><tag>mssql-job</tag><value>{#JOBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>b9984c1238554a559b444853e9f66653</uuid><name>MSSQL Job '{#JOBNAME}': Last run status message</name><type>DEPENDENT</type><key>mssql.job.lastrunstatusmessage[&quot;{#JOBNAME}&quot;]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>The informational message about the last run of the job.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.JobName=='{#JOBNAME}')].LastRunStatusMessage.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>15m</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_job_status,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-job</value></tag><tag><tag>mssql-job</tag><value>{#JOBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>1c725adad98f44158b43127d4c5fb0f3</uuid><name>MSSQL Job '{#JOBNAME}': Next run date-time</name><type>DEPENDENT</type><key>mssql.job.nextrundatetime[&quot;{#JOBNAME}&quot;]</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>TEXT</value_type><description>The next date-time of the job run.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.JobName=='{#JOBNAME}')].NextRunDateTime.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>15m</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_job_status,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-job</value></tag><tag><tag>mssql-job</tag><value>{#JOBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>eaa43a261e114979af236698ea7ae32c</uuid><name>MSSQL Job '{#JOBNAME}': Run status</name><type>DEPENDENT</type><key>mssql.job.runstatus[&quot;{#JOBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>The job status possible values:
0 ⇒ Failed
1 ⇒ Succeeded
2 ⇒ Retry
3 ⇒ Canceled
4 ⇒ Running</description><valuemap><name>MSSQL Job Run Status</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.JobName=='{#JOBNAME}')].RunStatus.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>15m</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_job_status,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-job</value></tag><tag><tag>mssql-job</tag><value>{#JOBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>304f468605164fd2baa1905cedf2c897</uuid><expression>last(/MSSQL by ODBC/mssql.job.runstatus[&quot;{#JOBNAME}&quot;])=0</expression><name>MSSQL Job '{#JOBNAME}': Failed to run</name><priority>WARNING</priority><description>The last run of the job has failed.</description><manual_close>YES</manual_close><tags><tag><tag>mssql-job</tag><value>{#JOBNAME}</value></tag><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>69da58fe4c7e42028fa96388df526103</uuid><name>MSSQL Job '{#JOBNAME}': Run duration</name><type>DEPENDENT</type><key>mssql.job.run_duration[&quot;{#JOBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>s</units><description>Duration of the last run job.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.JobName=='{#JOBNAME}')].RunDuration.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>15m</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[get_job_status,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-job</value></tag><tag><tag>mssql-job</tag><value>{#JOBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>7e45cb8f41114388ac8772006d929da2</uuid><expression>last(/MSSQL by ODBC/mssql.job.run_duration[&quot;{#JOBNAME}&quot;])&gt;{$MSSQL.BACKUP_DURATION.WARN:&quot;{#JOBNAME}&quot;}</expression><name>MSSQL Job '{#JOBNAME}': Job duration is high</name><event_name>MSSQL Job '{#JOBNAME}': Job duration is greater than {$MSSQL.BACKUP_DURATION.WARN:&quot;{#JOBNAME}&quot;}</event_name><opdata>Job duration: {ITEM.LASTVALUE1}</opdata><priority>WARNING</priority><description>The job is taking too long.</description><manual_close>YES</manual_close><tags><tag><tag>mssql-job</tag><value>{#JOBNAME}</value></tag><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>f7395d344b67423dadcefe3f94ad159d</uuid><name>Local database discovery</name><type>ODBC</type><key>db.odbc.discovery[local_db,&quot;{$MSSQL.DSN}&quot;]</key><delay>1h</delay><params>SELECT ag.name AS group_name, arcs.replica_server_name AS replica_name,
db_name(drs.database_id) AS dbname, drs.is_local
FROM sys.dm_hadr_database_replica_states drs JOIN sys.dm_hadr_availability_replica_cluster_states arcs
ON arcs.replica_id = drs.replica_id
JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id
JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
WHERE drs.is_local = 1</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Discovery of the local availability databases.</description><item_prototypes><item_prototype><uuid>7eda3060b4bc446fb458bec5967b7d3c</uuid><name>MSSQL AG '{#GROUP_NAME}' Local DB '{#DBNAME}': Get local DB states</name><type>ODBC</type><key>db.odbc.get[&quot;{#GROUP_NAME}_{#DBNAME}_local_db.states&quot;,&quot;{$MSSQL.DSN}&quot;]</key><history>0h</history><trends>0</trends><value_type>TEXT</value_type><params>SELECT drs.database_state as database_state, 
drs.is_suspended as is_suspended, 
drs.synchronization_health as synchronization_health, 
ag.name as group_name,
arcs.replica_server_name as replica_name,
db_name(drs.database_id) as dbname
FROM sys.dm_hadr_database_replica_states drs 
JOIN sys.dm_hadr_availability_replica_cluster_states arcs ON arcs.replica_id = drs.replica_id 
JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id 
JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Getting the states of the local availability database.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>raw</value></tag><tag><tag>local-db</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>7e4baf2802394b93bf5770f4f72d7f05</uuid><name>MSSQL AG '{#GROUP_NAME}' Local DB '{#DBNAME}': Suspended</name><type>DEPENDENT</type><key>mssql.local_db.is_suspended[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Database state:
0 = Resumed
1 = Suspended</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}' &amp;&amp; @.dbname=='{#DBNAME}')].is_suspended.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#DBNAME}_local_db.states&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>local-db</value></tag><tag><tag>local-db</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>f8111429599e49bd947a12b9771d1a3d</uuid><name>MSSQL AG '{#GROUP_NAME}' Local DB '{#DBNAME}': State</name><type>DEPENDENT</type><key>mssql.local_db.state[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>0 = Online
1 = Restoring
2 = Recovering
3 = Recovery pending
4 = Suspect
5 = Emergency
6 = Offline</description><valuemap><name>MSSQL DB state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}' &amp;&amp; @.dbname=='{#DBNAME}')].database_state.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#DBNAME}_local_db.states&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>local-db</value></tag><tag><tag>local-db</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>78923c9c52e74c80a77d418afe9e438d</uuid><expression>last(/MSSQL by ODBC/mssql.local_db.state[&quot;{#DBNAME}&quot;])&gt;0</expression><name>MSSQL AG '{#GROUP_NAME}' Local DB '{#DBNAME}': &quot;{#DBNAME}&quot; is {ITEM.VALUE}</name><priority>WARNING</priority><description>The local availability database has a non-working state.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>local-db</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>e7d7fbac95e94c45b6515c8e1b7baf1a</uuid><name>MSSQL AG '{#GROUP_NAME}' Local DB '{#DBNAME}': Synchronization health</name><type>DEPENDENT</type><key>mssql.local_db.synchronization_health[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Reflects the intersection of the synchronization state of a database that is joined to the availability group on the availability replica and the availability mode of the availability replica (synchronous-commit or asynchronous-commit mode):
0 = Not healthy. The synchronization_state of the database is 0 (NOT SYNCHRONIZING).
1 = Partially healthy. A database on a synchronous-commit availability replica is considered 
partially healthy if synchronization_state is 1 (SYNCHRONIZING).
2 = Healthy. A database on an synchronous-commit availability replica is considered healthy if synchronization_state is 2 (SYNCHRONIZED), and a database on an asynchronous-commit availability replica is considered healthy if synchronization_state is 1 (SYNCHRONIZING).</description><valuemap><name>MSSQL AG Synchronization health</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}' &amp;&amp; @.dbname=='{#DBNAME}')].synchronization_health.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#DBNAME}_local_db.states&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>local-db</value></tag><tag><tag>local-db</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>e51c10f9d86d458da9fdb7e21b4e0102</uuid><expression>last(/MSSQL by ODBC/mssql.local_db.synchronization_health[&quot;{#DBNAME}&quot;])=0</expression><name>MSSQL AG '{#GROUP_NAME}' Local DB '{#DBNAME}': &quot;{#DBNAME}&quot; is Not healthy</name><priority>HIGH</priority><description>The synchronization state of the local availability database is NOT SYNCHRONIZING.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>local-db</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>dc636f10f12c4f1ead597eca778561ec</uuid><expression>last(/MSSQL by ODBC/mssql.local_db.synchronization_health[&quot;{#DBNAME}&quot;])=1</expression><name>MSSQL AG '{#GROUP_NAME}' Local DB '{#DBNAME}': &quot;{#DBNAME}&quot; is Partially healthy</name><priority>AVERAGE</priority><description>A database on a synchronous-commit availability replica is considered partially healthy if synchronization state is SYNCHRONIZING.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>local-db</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>8354506d23b241c689079eb8ff1acb72</uuid><name>Mirroring discovery</name><type>ODBC</type><key>db.odbc.discovery[mirrors,&quot;{$MSSQL.DSN}&quot;]</key><delay>1h</delay><params>SELECT db_name(database_id) as dbname
FROM sys.database_mirroring
WHERE mirroring_state_desc IS NOT NULL</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>To see the row for a database other than master or tempdb, you must
either be the database owner or have at least ALTER ANY DATABASE or VIEW ANY
DATABASE server-level permission or CREATE DATABASE permission in the master
database. To see non-NULL values on a mirror database, you must be a member
of the sysadmin fixed server role.</description><item_prototypes><item_prototype><uuid>082fb332849e4633a169f1a6dbe3a8c5</uuid><name>MSSQL Mirroring '{#DBNAME}': Get the mirror state</name><type>ODBC</type><key>db.odbc.get[&quot;{#DBNAME}_mirroring_state&quot;,&quot;{$MSSQL.DSN}&quot;]</key><history>0h</history><trends>0</trends><value_type>TEXT</value_type><params>SELECT ISNULL(m.mirroring_role,0) as mirroring_role,
ISNULL(m.mirroring_role_sequence,0) as mirroring_role_sequence,
ISNULL(m.mirroring_state,7) as mirroring_state,
ISNULL(m.mirroring_witness_state,3) as mirroring_witness_state,
ISNULL(m.mirroring_safety_level,3) as mirroring_safety_level,
db_name(m.database_id) as dbname 
FROM sys.database_mirroring as m
WHERE m.mirroring_state_desc IS NOT NULL</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Getting mirrors state</description><tags><tag><tag>component</tag><value>mssql-mirroring</value></tag><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>faccb61c8215482ab375c03444a0e8fd</uuid><name>MSSQL Mirroring '{#DBNAME}': Role</name><type>DEPENDENT</type><key>mssql.mirroring.role[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Current role of the local database plays in the database mirroring session.
1 = Principal
2 = Mirror</description><valuemap><name>MSSQL Mirroring Role</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}')].mirroring_role.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#DBNAME}_mirroring_state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-mirroring</value></tag><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>19cdd945ced447d28b7480c07c1f61bc</uuid><name>MSSQL Mirroring '{#DBNAME}': Role sequence</name><type>DEPENDENT</type><key>mssql.mirroring.role_sequence[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>The number of times that mirroring partners have switched the principal and mirror roles due to a failover or forced service.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}')].mirroring_role_sequence.first()</parameter></parameters></step><step><type>SIMPLE_CHANGE</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#DBNAME}_mirroring_state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-mirroring</value></tag><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>bedb23d788074424afdb2751c8a7e2b7</uuid><name>MSSQL Mirroring '{#DBNAME}': Safety level</name><type>DEPENDENT</type><key>mssql.mirroring.safety_level[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>Safety setting for updates on the mirror database:
0 = Unknown state
1 = Off [asynchronous]
2 = Full [synchronous]</description><valuemap><name>MSSQL Safety level</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}')].mirroring_safety_level.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#DBNAME}_mirroring_state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-mirroring</value></tag><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>5df06f00a6194242af45ff5cccf43988</uuid><name>MSSQL Mirroring '{#DBNAME}': State</name><type>DEPENDENT</type><key>mssql.mirroring.state[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>State of the mirror database and of the database mirroring session.
0 = Suspended
1 = Disconnected from the other partner
2 = Synchronizing
3 = Pending Failover
4 = Synchronized
5 = The partners are not synchronized. Failover is not possible now.
6 = The partners are synchronized. Failover is potentially possible. For information about the requirements for the failover, see Database Mirroring Operating Modes.</description><valuemap><name>MSSQL Mirroring State</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}')].mirroring_state.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#DBNAME}_mirroring_state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-mirroring</value></tag><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>323543b0df0e474abf9190a9630242b1</uuid><expression>last(/MSSQL by ODBC/mssql.mirroring.state[&quot;{#DBNAME}&quot;])=3</expression><name>MSSQL Mirroring '{#DBNAME}': &quot;{#DBNAME}&quot; is {ITEM.VALUE}</name><priority>WARNING</priority><description>The state of the mirror database and of the database mirroring session is &quot;Pending Failover&quot;.</description><tags><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>9a2bcdfb32654a55b8a75c8bf4331950</uuid><expression>last(/MSSQL by ODBC/mssql.mirroring.state[&quot;{#DBNAME}&quot;])=5</expression><name>MSSQL Mirroring '{#DBNAME}': &quot;{#DBNAME}&quot; is {ITEM.VALUE}</name><priority>HIGH</priority><description>The state of the mirror database and of the database mirroring session is &quot;Not synchronized&quot;. The partners are not synchronized. A failover is not possible now.</description><tags><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>c673a7c4820840528a4aa1771a5a56d4</uuid><expression>last(/MSSQL by ODBC/mssql.mirroring.state[&quot;{#DBNAME}&quot;])&gt;=0 and last(/MSSQL by ODBC/mssql.mirroring.state[&quot;{#DBNAME}&quot;])&lt;=2</expression><name>MSSQL Mirroring '{#DBNAME}': &quot;{#DBNAME}&quot; is {ITEM.VALUE}</name><priority>INFO</priority><description>The state of the mirror database and of the database mirroring session is &quot;Suspended&quot;, &quot;Disconnected from the other partner&quot;, or &quot;Synchronizing&quot;.</description><tags><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>7e4763d493a745e99082ca71a54c23c2</uuid><name>MSSQL Mirroring '{#DBNAME}': Witness state</name><type>DEPENDENT</type><key>mssql.mirroring.witness_state[&quot;{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><description>State of the witness in the database mirroring session of the database:
0 = Unknown
1 = Connected
2 = Disconnected</description><valuemap><name>MSSQL Witness state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.dbname=='{#DBNAME}')].mirroring_witness_state.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#DBNAME}_mirroring_state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>component</tag><value>mssql-mirroring</value></tag><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>ec374424b79346c99f1d815e0815c799</uuid><expression>last(/MSSQL by ODBC/mssql.mirroring.witness_state[&quot;{#DBNAME}&quot;])=2</expression><name>MSSQL Mirroring '{#DBNAME}': &quot;{#DBNAME}&quot; Witness is disconnected</name><priority>WARNING</priority><description>The state of the witness in the database mirroring session of the database is &quot;Disconnected&quot;.</description><tags><tag><tag>mssql-mirroring</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>9bf9203bd4b449b39e288fbb79f9d627</uuid><name>MSSQL Mirroring '{#DBNAME}': States</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.mirroring.state[&quot;{#DBNAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.mirroring.witness_state[&quot;{#DBNAME}&quot;]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>f9691782f89c459c849c00c68775b4bd</uuid><name>Non-local database discovery</name><type>ODBC</type><key>db.odbc.discovery[non-local_db,&quot;{$MSSQL.DSN}&quot;]</key><delay>1h</delay><params>SELECT ag.name AS group_name, arcs.replica_server_name AS replica_name,
db_name(drs.database_id) AS dbname, drs.is_local
FROM sys.dm_hadr_database_replica_states drs JOIN sys.dm_hadr_availability_replica_cluster_states arcs
ON arcs.replica_id = drs.replica_id
JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id
JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
WHERE drs.is_local = 0</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Discovery of the non-local (not local to the SQL Server instance) availability databases.</description><item_prototypes><item_prototype><uuid>da05efa5ffab475fa95718e8e0069c80</uuid><name>MSSQL AG '{#GROUP_NAME}' Non-Local DB '*{#REPLICA_NAME}*{#DBNAME}': Get non-local DB states</name><type>ODBC</type><key>db.odbc.get[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}_non-local_db.states&quot;,&quot;{$MSSQL.DSN}&quot;]</key><history>0h</history><trends>0</trends><value_type>TEXT</value_type><params>SELECT drs.log_send_queue_size as log_send_queue_size,
drs.redo_queue_size as redo_queue_size,
ag.name as group_name,
arcs.replica_server_name as replica_name,
db_name(drs.database_id) as dbname
FROM sys.dm_hadr_database_replica_states drs 
JOIN sys.dm_hadr_availability_replica_cluster_states arcs ON arcs.replica_id = drs.replica_id 
JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id 
JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Getting the states of the non-local availability database.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>raw</value></tag><tag><tag>non-local-db</tag><value>{#DBNAME}</value></tag></tags></item_prototype><item_prototype><uuid>32d3797d6b22413e98aa206d3092947f</uuid><name>MSSQL AG '{#GROUP_NAME}' Non-Local DB '*{#REPLICA_NAME}*{#DBNAME}': Log queue size</name><type>DEPENDENT</type><key>mssql.non-local_db.log_send_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Amount of the log records of the primary database that has not been sent to the secondary databases.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}' &amp;&amp; @.dbname=='{#DBNAME}')].log_send_queue_size.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}_non-local_db.states&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>non-local-db</value></tag><tag><tag>non-local-db</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>def3b1d47dac4d039bffcc78f955b433</uuid><expression>last(/MSSQL by ODBC/mssql.non-local_db.log_send_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;],#1)&gt;last(/MSSQL by ODBC/mssql.non-local_db.log_send_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;],#2) and last(/MSSQL by ODBC/mssql.non-local_db.log_send_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;],#2)&gt;last(/MSSQL by ODBC/mssql.non-local_db.log_send_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;],#3)</expression><name>MSSQL AG '{#GROUP_NAME}' Non-Local DB '*{#REPLICA_NAME}*{#DBNAME}': Log queue size is growing</name><priority>HIGH</priority><description>The log records of the primary database are not sent to the secondary databases.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>non-local-db</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>66d9735553754192bb9acf7b27c1501f</uuid><name>MSSQL AG '{#GROUP_NAME}' Non-Local DB '*{#REPLICA_NAME}*{#DBNAME}': Redo log queue size</name><type>DEPENDENT</type><key>mssql.non-local_db.redo_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;]</key><delay>0</delay><history>7d</history><units>B</units><description>Amount of log records in the log files of the secondary replica that has not yet been redone.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}' &amp;&amp; @.dbname=='{#DBNAME}')].redo_queue_size.first()</parameter></parameters></step><step><type>MULTIPLIER</type><parameters><parameter>1024</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}_non-local_db.states&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>non-local-db</value></tag><tag><tag>non-local-db</tag><value>{#DBNAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>2102f244f58b4fe981d569fe0fe599a9</uuid><expression>last(/MSSQL by ODBC/mssql.non-local_db.redo_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;],#1)&gt;last(/MSSQL by ODBC/mssql.non-local_db.redo_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;],#2) and last(/MSSQL by ODBC/mssql.non-local_db.redo_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;],#2)&gt;last(/MSSQL by ODBC/mssql.non-local_db.redo_queue_size[&quot;{#GROUP_NAME}*{#REPLICA_NAME}*{#DBNAME}&quot;],#3)</expression><name>MSSQL AG '{#GROUP_NAME}' Non-Local DB '*{#REPLICA_NAME}*{#DBNAME}': Redo log queue size is growing</name><priority>HIGH</priority><description>The log records in the log files of the secondary replica have not yet been redone.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>non-local-db</tag><value>{#DBNAME}</value></tag><tag><tag>scope</tag><value>capacity</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing></discovery_rule><discovery_rule><uuid>8c279cd6442f48bb9c6001ea6d3acfa0</uuid><name>Replication discovery</name><type>ODBC</type><key>db.odbc.discovery[replicas,&quot;{$MSSQL.DSN}&quot;]</key><delay>1h</delay><params>SELECT ag.name as group_name,
arcs.replica_server_name as replica_name
FROM sys.dm_hadr_availability_replica_cluster_states as arcs
JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id
JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Discovery of the database replicas.</description><item_prototypes><item_prototype><uuid>287c420d8d5346d7a21de580ce1836eb</uuid><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': Get the replica state</name><type>ODBC</type><key>db.odbc.get[&quot;{#GROUP_NAME}_{#REPLICA_NAME}_replica.state&quot;,&quot;{$MSSQL.DSN}&quot;]</key><history>0h</history><trends>0</trends><value_type>TEXT</value_type><params>SELECT ars.connected_state as connected_state,
ars.is_local as is_local,
arcs.join_state as join_state,
ISNULL(ars.operational_state,6) as operational_state,
ISNULL(ars.recovery_health,2) as recovery_health,
ars.role as role,
ars.synchronization_health as synchronization_health,
ag.name as group_name, 
arcs.replica_server_name as replica_name
FROM sys.dm_hadr_availability_replica_cluster_states as arcs 
JOIN sys.availability_groups ag ON ag.group_id = arcs.group_id
JOIN sys.dm_hadr_availability_replica_states ars ON ars.replica_id = arcs.replica_id
WHERE ag.name = '{#GROUP_NAME}' AND arcs.replica_server_name = '{#REPLICA_NAME}'</params><username>{$MSSQL.USER}</username><password>{$MSSQL.PASSWORD}</password><description>Getting the database replica states.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>raw</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>7403de703b024d428edfc59f3aa9181b</uuid><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': Connected state</name><type>DEPENDENT</type><key>mssql.replica.connected_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Whether a secondary replica is currently connected to the primary replica:
0 : Disconnected. The response of an availability replica to the DISCONNECTED state depends on its role:
On the primary replica, if a secondary replica is disconnected, its secondary databases are marked as NOT SYNCHRONIZED on the primary replica, which waits for the secondary to reconnect;
On a secondary replica, upon detecting that it is disconnected, the secondary replica attempts to reconnect to the primary replica.
1 : Connected. Each primary replica tracks the connection state for every secondary replica in the same availability group. Secondary replicas track the connection state of only the primary replica.</description><valuemap><name>MSSQL AG Connected state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}')].connected_state.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#REPLICA_NAME}_replica.state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>replica</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>51cb8f4fe5954c0ea21eff6102034862</uuid><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': Is local</name><type>DEPENDENT</type><key>mssql.replica.is_local[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Whether the replica is local:
0 = Indicates a remote secondary replica in an availability group whose primary replica is hosted by the local server instance. This value occurs only on the primary replica location.
1 = Indicates a local replica. On secondary replicas, this is the only available value for the availability group to which the replica belongs.</description><valuemap><name>MSSQL - Yes / No</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}')].is_local.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#REPLICA_NAME}_replica.state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>replica</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>ec1b71f75c4247c28d5830bd8004f0ac</uuid><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': Join state</name><type>DEPENDENT</type><key>mssql.replica.join_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>0 = Not joined
1 = Joined, standalone instance
2 = Joined, failover cluster instance</description><valuemap><name>MSSQL AG Join state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}')].join_state.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#REPLICA_NAME}_replica.state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>replica</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>ad3e6d5bf510496eb050b9a05f8341e1</uuid><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': Operational state</name><type>DEPENDENT</type><key>mssql.replica.operational_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Current operational state of the replica:
0 = Pending failover
1 = Pending
2 = Online
3 = Offline
4 = Failed
5 = Failed, no quorum
6 = Not local</description><valuemap><name>MSSQL AG Operational state</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}')].operational_state.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#REPLICA_NAME}_replica.state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>replica</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>0192e9d5795a4d46acb8de29f710edcd</uuid><expression>last(/MSSQL by ODBC/mssql.replica.operational_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=0 or last(/MSSQL by ODBC/mssql.replica.operational_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=1 or last(/MSSQL by ODBC/mssql.replica.operational_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=3</expression><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': {#REPLICA_NAME} is {ITEM.VALUE}</name><priority>WARNING</priority><description>The operational state of the replica in a given availability group is &quot;Pending&quot; or &quot;Offline&quot;.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>3f2006b9ae114e01b442b34fec9373d3</uuid><expression>last(/MSSQL by ODBC/mssql.replica.operational_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=4</expression><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': {#REPLICA_NAME} is {ITEM.VALUE}</name><priority>AVERAGE</priority><description>The operational state of the replica in a given availability group is &quot;Failed&quot;.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>94ea79848a5048d8ae417df709b8d612</uuid><expression>last(/MSSQL by ODBC/mssql.replica.operational_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=5</expression><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': {#REPLICA_NAME} is {ITEM.VALUE}</name><priority>HIGH</priority><description>The operational state of the replica in a given availability group is &quot;Failed, no quorum&quot;.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>2a58cab2197348d997bdb69bb128414d</uuid><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': Recovery health</name><type>DEPENDENT</type><key>mssql.replica.recovery_health[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Rollup of the database_state column of the sys.dm_hadr_database_replica_states dynamic management view:
0 : In progress. At least one joined database has a database state other than ONLINE 
(database_state is not 0).
1 : Online. All the joined databases have a database state of ONLINE (database_state is 0).</description><valuemap><name>MSSQL AG Recovery health</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}')].recovery_health.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#REPLICA_NAME}_replica.state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>replica</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>58f508b855364d769e2be977793a03c8</uuid><expression>last(/MSSQL by ODBC/mssql.replica.recovery_health[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=0</expression><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': {#REPLICA_NAME} Recovery in progress</name><priority>INFO</priority><description>At least one joined database has a database state other than ONLINE.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag><tag><tag>scope</tag><value>notice</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>5139a4cef5ac46d2ab34cd8bda1c84ac</uuid><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': Role</name><type>DEPENDENT</type><key>mssql.replica.role[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Current Always On availability groups role of a local replica or a connected remote replica:
0 = Resolving
1 = Primary
2 = Secondary</description><valuemap><name>MSSQL AG Role</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}')].role.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#REPLICA_NAME}_replica.state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>replica</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>5655f95df0e043acba246f65e4905b0d</uuid><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': Sync health</name><type>DEPENDENT</type><key>mssql.replica.synchronization_health[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;]</key><delay>0</delay><history>7d</history><description>Reflects a rollup of the database synchronization state (synchronization_state)of all joined availability databases (also known as replicas) and the availability mode of the replica (synchronous-commit or asynchronous-commit mode). The rollup will reflect the least healthy accumulated state of the databases on the replica:
0 : Not healthy. At least one joined database is in the NOT SYNCHRONIZING state.
1 : Partially healthy. Some replicas are not in the target synchronization state: synchronous-commit replicas should be synchronized, and asynchronous-commit replicas should be synchronizing.
2 : Healthy. All replicas are in the target synchronization state: synchronous-commit replicas are synchronized, and asynchronous-commit replicas are synchronizing.</description><valuemap><name>MSSQL AG Synchronization health</name></valuemap><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.group_name=='{#GROUP_NAME}' &amp;&amp; @.replica_name=='{#REPLICA_NAME}')].synchronization_health.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing><master_item><key>db.odbc.get[&quot;{#GROUP_NAME}_{#REPLICA_NAME}_replica.state&quot;,&quot;{$MSSQL.DSN}&quot;]</key></master_item><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>component</tag><value>replica</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>f2f4d198ad2242088d867abe6fac4ecd</uuid><expression>last(/MSSQL by ODBC/mssql.replica.synchronization_health[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=0</expression><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': {#REPLICA_NAME} is Not healthy</name><priority>AVERAGE</priority><description>At least one joined database is in the NOT SYNCHRONIZING state.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype><trigger_prototype><uuid>070af612aa7248588fc058d8f9fb9929</uuid><expression>last(/MSSQL by ODBC/mssql.replica.synchronization_health[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=1</expression><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': {#REPLICA_NAME} is Partially healthy</name><priority>WARNING</priority><description>Some replicas are not in the target synchronization state: synchronous-commit replicas should be synchronized, and asynchronous-commit replicas should be synchronizing.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype></item_prototypes><trigger_prototypes><trigger_prototype><uuid>7c6afc5596e94af0979bd20d5ef542ea</uuid><expression>last(/MSSQL by ODBC/mssql.replica.connected_state[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=0 and last(/MSSQL by ODBC/mssql.replica.role[&quot;{#GROUP_NAME}_{#REPLICA_NAME}&quot;])=2</expression><name>MSSQL AG '{#GROUP_NAME}' Replica '{#REPLICA_NAME}': {#REPLICA_NAME} is disconnected</name><priority>WARNING</priority><description>The response of an availability replica to the DISCONNECTED state depends on its role:
On the primary replica, if a secondary replica is disconnected, its secondary databases are marked as NOT SYNCHRONIZED on the primary replica, which waits for the secondary to reconnect; On a secondary replica, upon detecting that it is disconnected, the secondary replica attempts to reconnect to the primary replica.</description><tags><tag><tag>availability-group</tag><value>{#GROUP_NAME}</value></tag><tag><tag>replica</tag><value>{#REPLICA_NAME}</value></tag><tag><tag>scope</tag><value>availability</value></tag></tags></trigger_prototype></trigger_prototypes><preprocessing><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1d</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>database</value></tag><tag><tag>target</tag><value>mssql</value></tag></tags><macros><macro><macro>{$MSSQL.AVERAGE_WAIT_TIME.MAX}</macro><value>500</value><description>The maximum average wait time in ms - for the trigger expression.</description></macro><macro><macro>{$MSSQL.BACKUP_DIFF.CRIT}</macro><value>6d</value><description>The maximum days without a differential backup - for the High trigger expression.</description></macro><macro><macro>{$MSSQL.BACKUP_DIFF.WARN}</macro><value>3d</value><description>The maximum days without a differential backup - for the Warning trigger expression.</description></macro><macro><macro>{$MSSQL.BACKUP_DURATION.WARN}</macro><value>1h</value><description>The maximum job duration - for the Warning trigger expression.</description></macro><macro><macro>{$MSSQL.BACKUP_FULL.CRIT}</macro><value>10d</value><description>The maximum days without a full backup - for the High trigger expression.</description></macro><macro><macro>{$MSSQL.BACKUP_FULL.WARN}</macro><value>9d</value><description>The maximum days without a full backup - for the Warning trigger expression.</description></macro><macro><macro>{$MSSQL.BACKUP_LOG.CRIT}</macro><value>8h</value><description>The maximum days without a log backup - for the High trigger expression.</description></macro><macro><macro>{$MSSQL.BACKUP_LOG.WARN}</macro><value>4h</value><description>The maximum days without a log backup - for the Warning trigger expression.</description></macro><macro><macro>{$MSSQL.BUFFER_CACHE_RATIO.MIN.CRIT}</macro><value>30</value><description>The minimum % buffer cache hit ratio - for the High trigger expression.</description></macro><macro><macro>{$MSSQL.BUFFER_CACHE_RATIO.MIN.WARN}</macro><value>50</value><description>The minimum % buffer cache hit ratio - for the Warning trigger expression.</description></macro><macro><macro>{$MSSQL.DBNAME.MATCHES}</macro><value>.*</value><description>This macro is used in database discovery. It can be overridden on a host or linked template level.</description></macro><macro><macro>{$MSSQL.DBNAME.NOT_MATCHES}</macro><value>master|tempdb|model|msdb</value><description>This macro is used in database discovery. It can be overridden on a host or linked template level.</description></macro><macro><macro>{$MSSQL.DEADLOCKS.MAX}</macro><value>1</value><description>The maximum deadlocks per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.DSN}</macro><value>&lt;Put your DSN here&gt;</value><description>System data source name.</description></macro><macro><macro>{$MSSQL.FREE_LIST_STALLS.MAX}</macro><value>2</value><description>The maximum free list stalls per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.INSTANCE}</macro><value>SQLServer</value><description>The instance name for the default instance is SQLServer. For named instance set the macro value as MSSQL$instance name.</description></macro><macro><macro>{$MSSQL.JOB.MATCHES}</macro><value>.*</value><description>This macro is used in job discovery. It can be overridden on a host or linked template level.</description></macro><macro><macro>{$MSSQL.JOB.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>This macro is used in job discovery. It can be overridden on a host or linked template level.</description></macro><macro><macro>{$MSSQL.LAZY_WRITES.MAX}</macro><value>20</value><description>The maximum lazy writes per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.LOCK_REQUESTS.MAX}</macro><value>1000</value><description>The maximum lock requests per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.LOCK_TIMEOUTS.MAX}</macro><value>1</value><description>The maximum lock timeouts per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.LOG_FLUSH_WAITS.MAX}</macro><value>1</value><description>The maximum log flush waits per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.LOG_FLUSH_WAIT_TIME.MAX}</macro><value>1</value><description>The maximum log flush wait time in ms - for the trigger expression.</description></macro><macro><macro>{$MSSQL.PAGE_LIFE_EXPECTANCY.MIN}</macro><value>300</value><description>The minimum page life expectancy - for the trigger expression.</description></macro><macro><macro>{$MSSQL.PAGE_READS.MAX}</macro><value>90</value><description>The maximum page reads per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.PAGE_WRITES.MAX}</macro><value>90</value><description>The maximum page writes per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.PASSWORD}</macro><value>&lt;Put your password here&gt;</value><description>MSSQL user password.</description></macro><macro><macro>{$MSSQL.PERCENT_COMPILATIONS.MAX}</macro><value>10</value><description>The maximum percentage of Transact-SQL compilations - for the trigger expression.</description></macro><macro><macro>{$MSSQL.PERCENT_LOG_USED.MAX}</macro><value>80</value><description>The maximum percentage of log used - for the trigger expression.</description></macro><macro><macro>{$MSSQL.PERCENT_READAHEAD.MAX}</macro><value>20</value><description>The maximum percentage of pages read/sec in anticipation of use - for the trigger expression.</description></macro><macro><macro>{$MSSQL.PERCENT_RECOMPILATIONS.MAX}</macro><value>10</value><description>The maximum percentage of Transact-SQL recompilations - for the trigger expression.</description></macro><macro><macro>{$MSSQL.PORT}</macro><value>1433</value><description>MSSQL TCP port.</description></macro><macro><macro>{$MSSQL.USER}</macro><value>&lt;Put your username here&gt;</value><description>MSSQL username.</description></macro><macro><macro>{$MSSQL.WORKTABLES_FROM_CACHE_RATIO.MIN.CRIT}</macro><value>90</value><description>The minimum percentage of the worktables from cache ratio - for the High trigger expression.</description></macro><macro><macro>{$MSSQL.WORK_FILES.MAX}</macro><value>20</value><description>The maximum number of work files created per second - for the trigger expression.</description></macro><macro><macro>{$MSSQL.WORK_TABLES.MAX}</macro><value>20</value><description>The maximum number of work tables created per second - for the trigger expression.</description></macro></macros><valuemaps><valuemap><uuid>c66ee50a8b3f4b6788b732bb8a6b514e</uuid><name>MSSQL - Yes / No</name><mappings><mapping><value>0</value><newvalue>No</newvalue></mapping><mapping><value>1</value><newvalue>Yes</newvalue></mapping></mappings></valuemap><valuemap><uuid>bfbb00eb85d747dabeda2954a5d659b7</uuid><name>MSSQL AG Connected state</name><mappings><mapping><value>0</value><newvalue>Disconnected</newvalue></mapping><mapping><value>1</value><newvalue>Connected</newvalue></mapping></mappings></valuemap><valuemap><uuid>47413c135c094cdc8b59f18a9b195a78</uuid><name>MSSQL AG Join state</name><mappings><mapping><value>0</value><newvalue>Not joined</newvalue></mapping><mapping><value>1</value><newvalue>Joined, standalone instance</newvalue></mapping><mapping><value>2</value><newvalue>Joined, failover cluster instance</newvalue></mapping></mappings></valuemap><valuemap><uuid>a570f341d9a8470797aecfebd376b2b8</uuid><name>MSSQL AG Operational state</name><mappings><mapping><value>0</value><newvalue>Pending failover</newvalue></mapping><mapping><value>1</value><newvalue>Pending</newvalue></mapping><mapping><value>2</value><newvalue>Online</newvalue></mapping><mapping><value>3</value><newvalue>Offline</newvalue></mapping><mapping><value>4</value><newvalue>Failed</newvalue></mapping><mapping><value>5</value><newvalue>Failed, no quorum</newvalue></mapping><mapping><value>6</value><newvalue>Replica is not local</newvalue></mapping></mappings></valuemap><valuemap><uuid>4ec6a96ff6c64756b2f27e47972fd9f6</uuid><name>MSSQL AG Recovery health</name><mappings><mapping><value>0</value><newvalue>In progress</newvalue></mapping><mapping><value>1</value><newvalue>Online</newvalue></mapping><mapping><value>2</value><newvalue>Replica is not local</newvalue></mapping></mappings></valuemap><valuemap><uuid>596556fba6064efb8155233371eb2950</uuid><name>MSSQL AG Role</name><mappings><mapping><value>0</value><newvalue>Resolving</newvalue></mapping><mapping><value>1</value><newvalue>Primary</newvalue></mapping><mapping><value>2</value><newvalue>Secondary</newvalue></mapping></mappings></valuemap><valuemap><uuid>2ab0923b3ce14ffc9dd454114f6b15be</uuid><name>MSSQL AG Synchronization health</name><mappings><mapping><value>0</value><newvalue>Not healthy</newvalue></mapping><mapping><value>1</value><newvalue>Partially healthy</newvalue></mapping><mapping><value>2</value><newvalue>Healthy</newvalue></mapping></mappings></valuemap><valuemap><uuid>bac1a10dad134d50add5bc9550e2ebf3</uuid><name>MSSQL DB state</name><mappings><mapping><value>0</value><newvalue>ONLINE</newvalue></mapping><mapping><value>1</value><newvalue>RESTORING</newvalue></mapping><mapping><value>2</value><newvalue>RECOVERING</newvalue></mapping><mapping><value>3</value><newvalue>RECOVERY_PENDING</newvalue></mapping><mapping><value>4</value><newvalue>SUSPECT</newvalue></mapping><mapping><value>5</value><newvalue>EMERGENCY</newvalue></mapping><mapping><value>6</value><newvalue>OFFLINE</newvalue></mapping><mapping><value>7</value><newvalue>COPYING</newvalue></mapping><mapping><value>10</value><newvalue>OFFLINE_SECONDARY</newvalue></mapping></mappings></valuemap><valuemap><uuid>eefa6e0e6f8b4facbc12004437b7ee8f</uuid><name>MSSQL Job Run Status</name><mappings><mapping><value>0</value><newvalue>Failed</newvalue></mapping><mapping><value>1</value><newvalue>Succeeded</newvalue></mapping><mapping><value>2</value><newvalue>Retry</newvalue></mapping><mapping><value>3</value><newvalue>Canceled</newvalue></mapping><mapping><value>4</value><newvalue>Running</newvalue></mapping><mapping><value>5</value><newvalue>Unknown</newvalue></mapping></mappings></valuemap><valuemap><uuid>09aaa82ccd6a444b80d5d3bb182fbafd</uuid><name>MSSQL Mirroring Role</name><mappings><mapping><value>0</value><newvalue>Database is inaccessible or is not mirrored</newvalue></mapping><mapping><value>1</value><newvalue>Principal</newvalue></mapping><mapping><value>2</value><newvalue>Mirror</newvalue></mapping></mappings></valuemap><valuemap><uuid>f1c105c262c5476798a93eaa4c46fbda</uuid><name>MSSQL Mirroring State</name><mappings><mapping><value>0</value><newvalue>Suspended</newvalue></mapping><mapping><value>1</value><newvalue>Disconnected from the other partner</newvalue></mapping><mapping><value>2</value><newvalue>Synchronizing</newvalue></mapping><mapping><value>3</value><newvalue>Pending Failover</newvalue></mapping><mapping><value>4</value><newvalue>Synchronized</newvalue></mapping><mapping><value>5</value><newvalue>The partners are not synchronized. Failover is not possible now.</newvalue></mapping><mapping><value>6</value><newvalue>The partners are synchronized. Failover is potentially possible.</newvalue></mapping><mapping><value>7</value><newvalue>Database is inaccessible or is not mirrored</newvalue></mapping></mappings></valuemap><valuemap><uuid>e70421b2c3db4ce1937791bdb432040e</uuid><name>MSSQL Safety level</name><mappings><mapping><value>0</value><newvalue>Unknown state</newvalue></mapping><mapping><value>1</value><newvalue>Off [asynchronous]</newvalue></mapping><mapping><value>2</value><newvalue>Full [synchronous]</newvalue></mapping><mapping><value>3</value><newvalue>Database is inaccessible or is not mirrored</newvalue></mapping></mappings></valuemap><valuemap><uuid>aa9de6e21d08486db04f29e10d11a94c</uuid><name>MSSQL Witness state</name><mappings><mapping><value>0</value><newvalue>Unknown</newvalue></mapping><mapping><value>1</value><newvalue>Connected</newvalue></mapping><mapping><value>2</value><newvalue>Disconnected</newvalue></mapping><mapping><value>3</value><newvalue>No witness exists</newvalue></mapping></mappings></valuemap><valuemap><uuid>03cde96b90a641598db572a662dc2064</uuid><name>Service state</name><mappings><mapping><value>0</value><newvalue>Down</newvalue></mapping><mapping><value>1</value><newvalue>Up</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><triggers><trigger><uuid>a1397bd4e9334a24a34dba0687b263e6</uuid><expression>last(/MSSQL by ODBC/mssql.forwarded_records_sec.rate) * 100 &gt; 10 * last(/MSSQL by ODBC/mssql.batch_requests_sec.rate)</expression><name>MSSQL: Too frequently using pointers</name><priority>WARNING</priority><description>Rows with varchar columns can experience expansion when varchar values are updated with a longer string.  In the case where the row cannot fit in the existing page, the row migrates and access to the row will traverse a pointer.  This only happens on heaps (tables without clustered indexes). Evaluate clustered index for heap tables.  In cases where clustered indexes cannot be used, drop non-clustered indexes, build a clustered index to reorg pages and rows, drop the clustered index, then recreate non-clustered indexes.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger><trigger><uuid>2a58729eb605461b853ec4e855878226</uuid><expression>last(/MSSQL by ODBC/mssql.readahead_pages_sec.rate) &gt; {$MSSQL.PERCENT_READAHEAD.MAX} / 100 * last(/MSSQL by ODBC/mssql.page_reads_sec.rate)</expression><name>MSSQL: Too many physical reads occurring</name><priority>WARNING</priority><description>If this value makes up even a sizeable minority of the total Page Reads/sec (say, greater than 20% of the total page reads), you may have too many physical reads occurring.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers><graphs><graph><uuid>d2db0e08beb6445a8b5dd9fb46249265</uuid><name>MSSQL: Access methods</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.forwarded_records_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.full_scans_sec.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MSSQL by ODBC</host><key>mssql.index_searches_sec.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MSSQL by ODBC</host><key>mssql.page_splits_sec.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>MSSQL by ODBC</host><key>mssql.workfiles_created_sec.rate</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>MSSQL by ODBC</host><key>mssql.worktables_created_sec.rate</key></item></graph_item></graph_items></graph><graph><uuid>f22186d86d9346fe9e1f3292e1f0017c</uuid><name>MSSQL: Auto-params</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.autoparam_attempts_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.failed_autoparams_sec.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MSSQL by ODBC</host><key>mssql.safe_autoparams_sec.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MSSQL by ODBC</host><key>mssql.unsafe_autoparams_sec.rate</key></item></graph_item></graph_items></graph><graph><uuid>24ef7368fb364616892c4928ba6167c6</uuid><name>MSSQL: Cache objects</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.cache_object_counts</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.cache_objects_in_use</key></item></graph_item></graph_items></graph><graph><uuid>1f713999d38745b6bb2828e397a32970</uuid><name>MSSQL: Compilations</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.sql_compilations_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.sql_compilations_sec.rate</key></item></graph_item></graph_items></graph><graph><uuid>91af398cfb86472ba4a69e3df0816be7</uuid><name>MSSQL: Database pages</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.database_pages</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.target_pages</key></item></graph_item></graph_items></graph><graph><uuid>0c9aaf223d6f4ba9bd17b0289af4bbe2</uuid><name>MSSQL: Errors</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.errors_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.offline_errors_sec.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MSSQL by ODBC</host><key>mssql.info_errors_sec.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MSSQL by ODBC</host><key>mssql.kill_connection_errors_sec.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>MSSQL by ODBC</host><key>mssql.user_errors_sec.rate</key></item></graph_item></graph_items></graph><graph><uuid>e35985317393409b9a764adcb05f07d0</uuid><name>MSSQL: Locks</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.lock_requests_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.lock_timeouts_sec.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MSSQL by ODBC</host><key>mssql.number_deadlocks_sec.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MSSQL by ODBC</host><key>mssql.lock_waits_sec.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>MSSQL by ODBC</host><key>mssql.average_wait_time</key></item></graph_item></graph_items></graph><graph><uuid>8796ad9cc04f48cdbe8ef2cb5f429997</uuid><name>MSSQL: Logins per second and Logouts per second</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.logins_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.logouts_sec.rate</key></item></graph_item></graph_items></graph><graph><uuid>bc588f8933d846a19accdb66eb29ccb9</uuid><name>MSSQL: Memory/cache load</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.cache_hit_ratio</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.buffer_cache_hit_ratio</key></item></graph_item></graph_items></graph><graph><uuid>3d431f6cc6d34ef5820f2a24f3872b41</uuid><name>MSSQL: Memory grants outstanding and pending</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.memory_grants_outstanding</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.memory_grants_pending</key></item></graph_item></graph_items></graph><graph><uuid>0f0bc58e0c18421591d265f81c000021</uuid><name>MSSQL: Page life expectancy</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.page_life_expectancy</key></item></graph_item></graph_items></graph><graph><uuid>2b1d0e42f61a4312998775d21f7cabb7</uuid><name>MSSQL: Pages</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.page_lookups_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.page_reads_sec.rate</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MSSQL by ODBC</host><key>mssql.page_writes_sec.rate</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MSSQL by ODBC</host><key>mssql.readahead_pages_sec.rate</key></item></graph_item><graph_item><sortorder>4</sortorder><color>FC6EA3</color><item><host>MSSQL by ODBC</host><key>mssql.checkpoint_pages_sec.rate</key></item></graph_item><graph_item><sortorder>5</sortorder><color>6C59DC</color><item><host>MSSQL by ODBC</host><key>mssql.free_list_stalls_sec.rate</key></item></graph_item><graph_item><sortorder>6</sortorder><color>AC8C14</color><item><host>MSSQL by ODBC</host><key>mssql.lazy_writes_sec.rate</key></item></graph_item></graph_items></graph><graph><uuid>2e9273b0472c4a3e9049bea3548301d5</uuid><name>MSSQL: Processes blocked</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.processes_blocked</key></item></graph_item></graph_items></graph><graph><uuid>f124ce3778bd4722bf0d2d598ac31b0f</uuid><name>MSSQL: Server memory</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.target_server_memory</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.total_server_memory</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MSSQL by ODBC</host><key>mssql.granted_workspace_memory</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MSSQL by ODBC</host><key>mssql.maximum_workspace_memory</key></item></graph_item></graph_items></graph><graph><uuid>59ffd52c5c334d20870fc209c6c61398</uuid><name>MSSQL: Transactions</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.transactions_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.batch_requests_sec.rate</key></item></graph_item></graph_items></graph><graph><uuid>6979c0bcba0e4ac08c6bfefa0c648d40</uuid><name>MSSQL: Waits per second</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.latch_waits_sec.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.lock_waits_sec.rate</key></item></graph_item></graph_items></graph><graph><uuid>41cc736d93ce45d6aeb6dede77c97f08</uuid><name>MSSQL: Wait times</name><graph_items><graph_item><color>1A7C11</color><item><host>MSSQL by ODBC</host><key>mssql.average_latch_wait_time</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>MSSQL by ODBC</host><key>mssql.total_latch_wait_time</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>MSSQL by ODBC</host><key>mssql.average_wait_time</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>MSSQL by ODBC</host><key>mssql.lock_wait_time</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
