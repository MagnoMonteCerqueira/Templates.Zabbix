<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export><version>6.0</version><date>2023-02-11T16:14:59Z</date><groups><group><uuid>a571c0d144b14fd4a87a9d9b2aa9fcd6</uuid><name>Templates/Applications</name></group></groups><templates><template><uuid>a6fe3640b23544e7ae15d438b38ce1cd</uuid><template>InfluxDB by HTTP</template><name>InfluxDB by HTTP</name><description>Get InfluxDB metrics by HTTP agent from Prometheus metrics endpoint.
For organization discovery template need to use Authorization via API token. See docs: https://docs.influxdata.com/influxdb/v2.0/security/tokens/

Don't forget change macros {$INFLUXDB.URL}, {$INFLUXDB.API.TOKEN}.
Some metrics may not be collected depending on your InfluxDB instance version and configuration.

You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback

Template tooling version used: 0.41</description><groups><group><name>Templates/Applications</name></group></groups><items><item><uuid>286bb866060e47948c02408ebc841f1f</uuid><name>InfluxDB: Get instance metrics</name><type>HTTP_AGENT</type><key>influx.get_metrics</key><history>0</history><trends>0</trends><value_type>TEXT</value_type><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters></step><step><type>PROMETHEUS_TO_JSON</type><parameters><parameter/></parameters></step></preprocessing><url>{$INFLUXDB.URL}/metrics</url><tags><tag><tag>component</tag><value>raw</value></tag></tags></item><item><uuid>f8f514943c9040d7b41f14db92ca6c91</uuid><name>InfluxDB: Instance status</name><type>HTTP_AGENT</type><key>influx.healthcheck</key><history>7d</history><description>Get the health of an instance.</description><valuemap><name>InfluxDB healthcheck</name></valuemap><preprocessing><step><type>CHECK_NOT_SUPPORTED</type><parameters><parameter/></parameters><error_handler>CUSTOM_VALUE</error_handler><error_handler_params>{&quot;status&quot;:&quot;fail&quot;}]}</error_handler_params></step><step><type>JAVASCRIPT</type><parameters><parameter>return JSON.parse(value).status == 'pass' ? 1: 0</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><url>{$INFLUXDB.URL}/health</url><tags><tag><tag>component</tag><value>health</value></tag></tags><triggers><trigger><uuid>de130833b4514481aa56d3ba06e648fc</uuid><expression>last(/InfluxDB by HTTP/influx.healthcheck)=0</expression><name>InfluxDB: Health check was failed</name><priority>HIGH</priority><description>The InfluxDB instance is not available or unhealthy.</description><tags><tag><tag>scope</tag><value>availability</value></tag></tags></trigger></triggers></item><item><uuid>56b1a9f2eb454a9b96a0e0a73d5439cf</uuid><name>InfluxDB: Boltdb reads, rate</name><type>DEPENDENT</type><key>influxdb.boltdb_reads.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of boltdb reads per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;boltdb_reads_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>boltdb</value></tag></tags></item><item><uuid>7bd505a8abb944c2bed17f8e4e5a8c84</uuid><name>InfluxDB: Boltdb writes, rate</name><type>DEPENDENT</type><key>influxdb.boltdb_writes.rate</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><description>Total number of boltdb writes per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;boltdb_writes_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>boltdb</value></tag></tags></item><item><uuid>5d5e26ee272a4af6ac979e69a83de74d</uuid><name>InfluxDB: Buckets, total</name><type>DEPENDENT</type><key>influxdb.buckets.total</key><delay>0</delay><history>7d</history><description>Number of total buckets on the server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_buckets_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>buckets</value></tag></tags></item><item><uuid>1c5931f514804a95ac4bfba3ec4a7d82</uuid><name>InfluxDB: Dashboards, total</name><type>DEPENDENT</type><key>influxdb.dashboards.total</key><delay>0</delay><history>7d</history><description>Number of total dashboards on the server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_dashboards_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>dashboards</value></tag></tags></item><item><uuid>915f00d9dc9847bb8bc8007d034bb80d</uuid><name>InfluxDB: Organizations, total</name><type>DEPENDENT</type><key>influxdb.organizations.total</key><delay>0</delay><history>7d</history><description>Number of total organizations on the server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_organizations_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>organizations</value></tag></tags></item><item><uuid>e05aa2c424c140afa3794878ed2c3baa</uuid><name>InfluxDB: Scrapers, total</name><type>DEPENDENT</type><key>influxdb.scrapers.total</key><delay>0</delay><history>7d</history><description>Number of total scrapers on the server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_scrapers_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>scrapers</value></tag></tags></item><item><uuid>f77894d5ede9481381a268670bc88766</uuid><name>InfluxDB: Task runs failed, rate</name><type>DEPENDENT</type><key>influxdb.task_executor_complete.failed.rate</key><delay>0</delay><history>7d</history><description>Total number of failure runs across all tasks.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;task_executor_total_runs_complete&quot; &amp;&amp; @.labels.status == &quot;failed&quot;)].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tasks</value></tag></tags><triggers><trigger><uuid>f0d2137905bc477f979d035c06111844</uuid><expression>min(/InfluxDB by HTTP/influxdb.task_executor_complete.failed.rate,5m)&gt;{$INFLUXDB.TASK.RUN.FAIL.MAX.WARN}</expression><name>InfluxDB: Too many tasks failure runs</name><event_name>InfluxDB: Too many tasks failure runs (over {$INFLUXDB.TASK.RUN.FAIL.MAX.WARN} for 5m)</event_name><priority>WARNING</priority><description>&quot;Number of failure runs completed across all tasks is too high.&quot;</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger></triggers></item><item><uuid>a0183b6d934c4612b358c027c75eda6e</uuid><name>InfluxDB: Task runs successful, rate</name><type>DEPENDENT</type><key>influxdb.task_executor_complete.successful.rate</key><delay>0</delay><history>7d</history><description>Total number of runs successful completed across all tasks.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;task_executor_total_runs_complete&quot; &amp;&amp; @.labels.status == &quot;success&quot;)].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tasks</value></tag></tags></item><item><uuid>c3f147a2afb3438d8bacbb41fac6b1d0</uuid><name>InfluxDB: Workers currently running</name><type>DEPENDENT</type><key>influxdb.task_executor_runs_active.total</key><delay>0</delay><history>7d</history><description>Total number of workers currently running tasks.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;task_executor_total_runs_active&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tasks</value></tag></tags></item><item><uuid>25595754557d49fca7c671df3f6a898c</uuid><name>InfluxDB: Workers busy, pct</name><type>DEPENDENT</type><key>influxdb.task_executor_workers_busy.pct</key><delay>0</delay><history>7d</history><units>%</units><description>Percent of total available workers that are currently busy.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;task_executor_workers_busy&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tasks</value></tag></tags></item><item><uuid>94d98714ecce4847be0bdb7b8802f1ec</uuid><name>InfluxDB: Telegrafs, total</name><type>DEPENDENT</type><key>influxdb.telegrafs.total</key><delay>0</delay><history>7d</history><description>Number of total telegraf configurations on the server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_telegrafs_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>telegraf</value></tag></tags></item><item><uuid>23bad615af024a2e9f06d4541cf6f910</uuid><name>InfluxDB: Telegraf plugins, total</name><type>DEPENDENT</type><key>influxdb.telegraf_plugins.total</key><delay>0</delay><history>7d</history><description>Number of individual telegraf plugins configured.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_telegraf_plugins_count&quot;)].value.sum()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>telegraf</value></tag></tags></item><item><uuid>079c1eee7d93484b9126598b23921e9d</uuid><name>InfluxDB: Tokens, total</name><type>DEPENDENT</type><key>influxdb.tokens.total</key><delay>0</delay><history>7d</history><description>Number of total tokens on the server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_tokens_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tokens</value></tag></tags></item><item><uuid>8699e951b7944659993422334a4cddc0</uuid><name>InfluxDB: Uptime</name><type>DEPENDENT</type><key>influxdb.uptime</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>s</units><description>InfluxDB process uptime in seconds.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_uptime_seconds&quot;)].value.first()</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>uptime</value></tag></tags><triggers><trigger><uuid>335f27fb002544838f7150b11238d86b</uuid><expression>last(/InfluxDB by HTTP/influxdb.uptime)&lt;10m</expression><name>InfluxDB: has been restarted</name><event_name>InfluxDB: has been restarted (uptime &lt; 10m)</event_name><priority>INFO</priority><description>Uptime is less than 10 minutes</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item><item><uuid>86357d43721f4e6aa6b1dd7e63dd2f47</uuid><name>InfluxDB: Users, total</name><type>DEPENDENT</type><key>influxdb.users.total</key><delay>0</delay><history>7d</history><description>Number of total users on the server.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_users_total&quot;)].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>30m</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>tokens</value></tag></tags></item><item><uuid>d31e0d0823af4f6c999cae3d49b3815b</uuid><name>InfluxDB: Version</name><type>DEPENDENT</type><key>influxdb.version</key><delay>0</delay><history>7d</history><trends>0</trends><value_type>CHAR</value_type><description>Version of the InfluxDB instance.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;influxdb_info&quot;)].labels.version.first()</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>3h</parameter></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>version</value></tag></tags><triggers><trigger><uuid>d2b02cc426c748608968ae08c0823461</uuid><expression>last(/InfluxDB by HTTP/influxdb.version,#1)&lt;&gt;last(/InfluxDB by HTTP/influxdb.version,#2) and length(last(/InfluxDB by HTTP/influxdb.version))&gt;0</expression><name>InfluxDB: Version has changed</name><event_name>InfluxDB: Version has changed (new version: {ITEM.VALUE})</event_name><priority>INFO</priority><description>InfluxDB version has changed. Ack to close.</description><manual_close>YES</manual_close><tags><tag><tag>scope</tag><value>notice</value></tag></tags></trigger></triggers></item></items><discovery_rules><discovery_rule><uuid>41766fd081804c399c3a7e70dd1fbf03</uuid><name>Organizations discovery</name><type>HTTP_AGENT</type><key>influxdb.orgs.discovery</key><delay>10m</delay><filter><evaltype>AND</evaltype><conditions><condition><macro>{#ORG_NAME}</macro><value>{$INFLUXDB.ORG_NAME.NOT_MATCHES}</value><operator>NOT_MATCHES_REGEX</operator><formulaid>A</formulaid></condition><condition><macro>{#ORG_NAME}</macro><value>{$INFLUXDB.ORG_NAME.MATCHES}</value><formulaid>B</formulaid></condition></conditions></filter><description>Discovery of organizations metrics.</description><item_prototypes><item_prototype><uuid>c84ae278bd7c4387873bc8bbf6d8ba8f</uuid><name>InfluxDB: [{#ORG_NAME}] Query response bytes, failed</name><type>DEPENDENT</type><key>influxdb.org.http_query_response_bytes.failed.rate[&quot;{#ORG_NAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Count of bytes returned with status not 200 per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_query_response_bytes&quot; &amp;&amp; @.labels.status != &quot;200&quot; &amp;&amp; @.labels.endpoint == &quot;/api/v2/query&quot; &amp;&amp; @.labels.org_id == &quot;{#ORG_ID}&quot;) ].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>organization</tag><value>{#ORG_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>fb13e133cf054e8783ba6bf5deaf1686</uuid><name>InfluxDB: [{#ORG_NAME}] Query response bytes, success</name><type>DEPENDENT</type><key>influxdb.org.http_query_response_bytes.success.rate[&quot;{#ORG_NAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Count of bytes returned with status 200 per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_query_response_bytes&quot; &amp;&amp; @.labels.status == &quot;200&quot; &amp;&amp; @.labels.endpoint == &quot;/api/v2/query&quot; &amp;&amp; @.labels.org_id == &quot;{#ORG_ID}&quot;) ].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>organization</tag><value>{#ORG_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>9688861c4268455193772389a957264f</uuid><name>InfluxDB: [{#ORG_NAME}] Query requests, failed</name><type>DEPENDENT</type><key>influxdb.org.query_request.failed.rate[&quot;{#ORG_NAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>Total number of query requests with status not 200 per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_query_request_count&quot; &amp;&amp; @.labels.status != &quot;200&quot; &amp;&amp; @.labels.endpoint == &quot;/api/v2/query&quot; &amp;&amp; @.labels.org_id == &quot;{#ORG_ID}&quot;) ].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>organization</tag><value>{#ORG_NAME}</value></tag></tags><trigger_prototypes><trigger_prototype><uuid>893fa5755b514c36aa177c4f4e25b254</uuid><expression>min(/InfluxDB by HTTP/influxdb.org.query_request.failed.rate[&quot;{#ORG_NAME}&quot;],5m)&gt;{$INFLUXDB.REQ.FAIL.MAX.WARN}</expression><name>InfluxDB: [{#ORG_NAME}]: Too many requests failures</name><event_name>InfluxDB: [{#ORG_NAME}]: Too many requests failures (over {$INFLUXDB.REQ.FAIL.MAX.WARN} for 5m)</event_name><priority>WARNING</priority><description>Too many query requests failed.</description><tags><tag><tag>scope</tag><value>performance</value></tag></tags></trigger_prototype></trigger_prototypes></item_prototype><item_prototype><uuid>da53d3185ba744c38fc264993c72b1b9</uuid><name>InfluxDB: [{#ORG_NAME}] Query requests, success</name><type>DEPENDENT</type><key>influxdb.org.query_request.success.rate[&quot;{#ORG_NAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Rps</units><description>Total number of query requests with status 200 per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_query_request_count&quot; &amp;&amp; @.labels.status == &quot;200&quot; &amp;&amp; @.labels.endpoint == &quot;/api/v2/query&quot; &amp;&amp; @.labels.org_id == &quot;{#ORG_ID}&quot;) ].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>organization</tag><value>{#ORG_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>4f8dbb16f7a842678e4fb4343c88b560</uuid><name>InfluxDB: [{#ORG_NAME}] Query requests bytes, failed</name><type>DEPENDENT</type><key>influxdb.org.query_request_bytes.failed.rate[&quot;{#ORG_NAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Count of bytes received with status not 200 per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_query_request_bytes&quot; &amp;&amp; @.labels.status != &quot;200&quot; &amp;&amp; @.labels.endpoint == &quot;/api/v2/query&quot; &amp;&amp; @.labels.org_id == &quot;{#ORG_ID}&quot;) ].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>organization</tag><value>{#ORG_NAME}</value></tag></tags></item_prototype><item_prototype><uuid>6bbeb22e5c9b46a2bf480dcf41b4eb0e</uuid><name>InfluxDB: [{#ORG_NAME}] Query requests bytes, success</name><type>DEPENDENT</type><key>influxdb.org.query_request_bytes.success.rate[&quot;{#ORG_NAME}&quot;]</key><delay>0</delay><history>7d</history><value_type>FLOAT</value_type><units>Bps</units><description>Count of bytes received with status 200 per second.</description><preprocessing><step><type>JSONPATH</type><parameters><parameter>$[?(@.name==&quot;http_query_request_bytes&quot; &amp;&amp; @.labels.status == &quot;200&quot; &amp;&amp; @.labels.endpoint == &quot;/api/v2/query&quot; &amp;&amp; @.labels.org_id == &quot;{#ORG_ID}&quot;) ].value.first()</parameter></parameters><error_handler>DISCARD_VALUE</error_handler></step><step><type>CHANGE_PER_SECOND</type><parameters><parameter/></parameters></step></preprocessing><master_item><key>influx.get_metrics</key></master_item><tags><tag><tag>component</tag><value>queries</value></tag><tag><tag>organization</tag><value>{#ORG_NAME}</value></tag></tags></item_prototype></item_prototypes><graph_prototypes><graph_prototype><uuid>925d6b2f79b2479ab031118d795811fb</uuid><name>InfluxDB: [{#ORG_NAME}]: Query requests</name><graph_items><graph_item><color>1A7C11</color><item><host>InfluxDB by HTTP</host><key>influxdb.org.query_request.success.rate[&quot;{#ORG_NAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>InfluxDB by HTTP</host><key>influxdb.org.query_request.failed.rate[&quot;{#ORG_NAME}&quot;]</key></item></graph_item></graph_items></graph_prototype><graph_prototype><uuid>01921ee545c540bd8c0d51429bcce11b</uuid><name>InfluxDB: [{#ORG_NAME}]: Query traffic</name><graph_items><graph_item><color>1A7C11</color><item><host>InfluxDB by HTTP</host><key>influxdb.org.http_query_response_bytes.success.rate[&quot;{#ORG_NAME}&quot;]</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>InfluxDB by HTTP</host><key>influxdb.org.http_query_response_bytes.failed.rate[&quot;{#ORG_NAME}&quot;]</key></item></graph_item><graph_item><sortorder>2</sortorder><color>F63100</color><item><host>InfluxDB by HTTP</host><key>influxdb.org.query_request_bytes.failed.rate[&quot;{#ORG_NAME}&quot;]</key></item></graph_item><graph_item><sortorder>3</sortorder><color>A54F10</color><item><host>InfluxDB by HTTP</host><key>influxdb.org.query_request_bytes.success.rate[&quot;{#ORG_NAME}&quot;]</key></item></graph_item></graph_items></graph_prototype></graph_prototypes><url>{$INFLUXDB.URL}/api/v2/orgs</url><headers><header><name>Content-type</name><value>application/json</value></header><header><name>Authorization</name><value>Token {$INFLUXDB.API.TOKEN}</value></header></headers><preprocessing><step><type>JAVASCRIPT</type><parameters><parameter>var result = [];

JSON.parse(value).orgs.forEach(function (e) {
    result.push({
        &quot;{#ORG_ID}&quot;: e.id,
        &quot;{#ORG_NAME}&quot;: e.name,
        &quot;{#ORG_DESCRIPTION}&quot;: e.description
    });
});

return JSON.stringify(result)</parameter></parameters></step><step><type>DISCARD_UNCHANGED_HEARTBEAT</type><parameters><parameter>1h</parameter></parameters></step></preprocessing></discovery_rule></discovery_rules><tags><tag><tag>class</tag><value>database</value></tag><tag><tag>target</tag><value>influxdb</value></tag></tags><macros><macro><macro>{$INFLUXDB.API.TOKEN}</macro><description>InfluxDB API Authorization Token</description></macro><macro><macro>{$INFLUXDB.ORG_NAME.MATCHES}</macro><value>.*</value><description>Filter of discoverable organizations</description></macro><macro><macro>{$INFLUXDB.ORG_NAME.NOT_MATCHES}</macro><value>CHANGE_IF_NEEDED</value><description>Filter to exclude discovered organizations</description></macro><macro><macro>{$INFLUXDB.REQ.FAIL.MAX.WARN}</macro><value>2</value><description>Maximum number of query requests failures for trigger expression.</description></macro><macro><macro>{$INFLUXDB.TASK.RUN.FAIL.MAX.WARN}</macro><value>2</value><description>Maximum number of tasks runs failures for trigger expression.</description></macro><macro><macro>{$INFLUXDB.URL}</macro><value>http://localhost:8086</value><description>InfluxDB instance URL</description></macro></macros><valuemaps><valuemap><uuid>d1b4478bdfc44c6db79a4a262f605d92</uuid><name>InfluxDB healthcheck</name><mappings><mapping><value>0</value><newvalue>Failed</newvalue></mapping><mapping><value>1</value><newvalue>Ok</newvalue></mapping></mappings></valuemap></valuemaps></template></templates><graphs><graph><uuid>dd6b62b969594ddbb82895a8f8fc5623</uuid><name>InfluxDB: Tasks runs</name><graph_items><graph_item><color>1A7C11</color><item><host>InfluxDB by HTTP</host><key>influxdb.task_executor_complete.failed.rate</key></item></graph_item><graph_item><sortorder>1</sortorder><color>2774A4</color><item><host>InfluxDB by HTTP</host><key>influxdb.task_executor_complete.successful.rate</key></item></graph_item></graph_items></graph></graphs></zabbix_export>
